<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DisplayingQRCode" xml:space="preserve">
    <value>Affichage d'un QRcode ou d'un code barres</value>
  </data>
  <data name="DisplayingPredefinedContent" xml:space="preserve">
    <value>Affichage d'un contenu prédéfini [{0}]</value>
  </data>
  <data name="DisplayingXHTMLContent" xml:space="preserve">
    <value>Affichage d'un contenu XHTML</value>
  </data>
  <data name="InvalidDisplayDevice" xml:space="preserve">
    <value>Ecran d'affichage invalide [{0}]</value>
  </data>
  <data name="DeviceDisplayAlwaysSucceed" xml:space="preserve">
    <value>Mode sans échec du DeviceDisplay</value>
  </data>
  <data name="NotificationAbortHasNotBeenProcessed" xml:space="preserve">
    <value>L'annulation de transaction n'a pas pu être traitée</value>
  </data>
  <data name="NotificationMiscellaneousProcessing" xml:space="preserve">
    <value>Traitement dégradé de la notification</value>
  </data>
  <data name="NotificationForEvent" xml:space="preserve">
    <value>Notification de l'évènement {0} [{1}]</value>
  </data>
  <data name="POIIsAlreadyInUse" xml:space="preserve">
    <value>Le terminal est en cours d'utilisation</value>
  </data>
  <data name="POIAccessHasBeenGranted" xml:space="preserve">
    <value>L'accès au terminal a été accordé</value>
  </data>
  <data name="LoginTryingToLogWith" xml:space="preserve">
    <value>Tentative de connexion depuis la caisse {0} au terminal {1}</value>
  </data>
  <data name="LoginFailedToLogTo" xml:space="preserve">
    <value>Echec de la connexion de la caisse {0} au terminal {1}</value>
  </data>
  <data name="ServiceStarting" xml:space="preserve">
    <value>Démarrage du service {0}</value>
  </data>
  <data name="ServiceCompleted" xml:space="preserve">
    <value>Le service {0} est terminé</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Déconnexion de la caisse {0} du terminal {1}</value>
  </data>
  <data name="LoginSucceeded" xml:space="preserve">
    <value>Connecté au terminal</value>
  </data>
  <data name="ErrorMessageCantBeConvertedToRequest" xml:space="preserve">
    <value>Le message ne peut être traduit en une requête [{0}]</value>
  </data>
  <data name="ErrorRequestedPOIDoesntExist" xml:space="preserve">
    <value>Le terminal demandé [{0}] n'existe pas. La requête ne sera pas traitée</value>
  </data>
  <data name="ErrorInvalidRequestedService" xml:space="preserve">
    <value>Le service demandé est invalid [{0}]"</value>
  </data>
  <data name="ErrorRequestedServiceNotAllowed" xml:space="preserve">
    <value>Le service demandé n'est pas autorisé [{0}]</value>
  </data>
  <data name="ErrorInvalidRequestedIDs" xml:space="preserve">
    <value>Les paramètres d'identification sont invalides, SaleID: {0}, POIID: {1}</value>
  </data>
  <data name="IsMissing" xml:space="preserve">
    <value>&lt;est manquant&gt;</value>
  </data>
  <data name="ErrorFailedCreatingTheNexoObject" xml:space="preserve">
    <value>La création de l'objet nexo {0} a échouée, le traitement a été interrompu</value>
  </data>
  <data name="ProcessingConnectedToPOI" xml:space="preserve">
    <value>Connecté au terminal</value>
  </data>
  <data name="ProcessingErrorWhileLogin" xml:space="preserve">
    <value>Une erreur s'est produite lors de la connexion au terminal</value>
  </data>
  <data name="ProcessingErrorWhileExchange" xml:space="preserve">
    <value>Une erreur s'est produite lors de l'échange du message nexo {0}</value>
  </data>
  <data name="ProcessingErrorConnectingToPOI" xml:space="preserve">
    <value>Erreur de connexion au terminal à l'adresse {0}, le traitement ne peut se poursuivre</value>
  </data>
  <data name="ProcessingException" xml:space="preserve">
    <value>Une exception s'est produite durant le traitement de la requête [{0}]</value>
  </data>
  <data name="ProcessingTimeout" xml:space="preserve">
    <value>Timeout à la réception de la réponse à la requête {0}</value>
  </data>
  <data name="ProcessingCancelled" xml:space="preserve">
    <value>L'opération a été annulée par l'opérateur durant le traitement du service {0}</value>
  </data>
  <data name="ProcessingResult" xml:space="preserve">
    <value>Le traitement du service {0} s'est terminé avec un statut {1} {2}</value>
  </data>
  <data name="ProcessingUnknowError" xml:space="preserve">
    <value>Erreur inconnue durant le traitement du service {0}</value>
  </data>
</root>