namespace NEXO {
    using System.Runtime.InteropServices;
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum AlgorithmEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-retail-cbc-mac")]
        idretailcbcmac,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-retail-cbc-mac-sha-256")]
        idretailcbcmacsha256,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-ukpt-wrap ")]
        idukptwrap,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-dukpt-wrap")]
        iddukptwrap,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("des-ede3-ecb")]
        desede3ecb,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("des-ede3-cbc")]
        desede3cbc,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-sha256")]
        idsha256,
        /// <remarks/>
        sha256WithRSAEncryption,
        /// <remarks/>
        rsaEncryption,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum AttributeTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-at-commonName")]
        idatcommonName,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-at-localityName")]
        idatlocalityName,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-at-organizationName")]
        idatorganizationName,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-at-organizationalUnitName")]
        idatorganizationalUnitName,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-at-countryName")]
        idatcountryName,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("0355e832-ad19-467e-9884-2b901c9c19a4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AuthenticatedDataType : IAuthenticatedDataType {
        private object[] itemsField = new object[0];
        private AlgorithmIdentifier mACAlgorithmField = new AlgorithmIdentifier();
        private EncapsulatedContentType encapsulatedContentField = new EncapsulatedContentType();
        private string versionField = default(string);
        private byte[] mACField = new byte[0];
        private bool itemsFieldSpecified = false;
        private bool mACAlgorithmFieldSpecified = false;
        private bool encapsulatedContentFieldSpecified = false;
        private string versionDefaultValue = "v0";
        private bool versionFieldSpecified = false;
        private bool mACFieldSpecified = false;
        public AuthenticatedDataType() {
            this.versionField = this.versionDefaultValue;
        }
        public AuthenticatedDataType(AuthenticatedDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AuthenticatedDataType))) {
            }
            else {
                this.Items = value.Items;
                this.MACAlgorithm = value.MACAlgorithm;
                this.EncapsulatedContent = value.EncapsulatedContent;
                this.Version = value.Version;
                this.MAC = value.MAC;
                this.ItemsSpecified = value.ItemsSpecified;
                this.MACAlgorithmSpecified = value.MACAlgorithmSpecified;
                this.EncapsulatedContentSpecified = value.EncapsulatedContentSpecified;
                this.VersionSpecified = value.VersionSpecified;
                this.MACSpecified = value.MACSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("KEK", typeof(KEKType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("KeyTransport", typeof(KeyTransportType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(object[]))
                            || false)) {
                    this.itemsField = new object[0];
                    this.itemsFieldSpecified = false;
                }
                else {
                    this.itemsField = value;
                    this.itemsFieldSpecified = (this.ItemsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier MACAlgorithm {
            get {
                return this.mACAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AlgorithmIdentifier))
                            || false)) {
                    this.mACAlgorithmField = new AlgorithmIdentifier();
                    this.mACAlgorithmFieldSpecified = false;
                }
                else {
                    this.mACAlgorithmField = value;
                    this.mACAlgorithmFieldSpecified = this.MACAlgorithm.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EncapsulatedContentType EncapsulatedContent {
            get {
                return this.encapsulatedContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(EncapsulatedContentType))
                            || false)) {
                    this.encapsulatedContentField = new EncapsulatedContentType();
                    this.encapsulatedContentFieldSpecified = false;
                }
                else {
                    this.encapsulatedContentField = value;
                    this.encapsulatedContentFieldSpecified = this.EncapsulatedContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("v0")]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.VersionDefaultValue)
                            || (value == default(string)))) {
                    this.versionField = this.VersionDefaultValue;
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] MAC {
            get {
                return this.mACField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.mACField = new byte[0];
                    this.mACFieldSpecified = false;
                }
                else {
                    this.mACField = value;
                    this.mACFieldSpecified = (this.MACLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemsFieldSpecified
                            || (this.ItemsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MACAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.mACAlgorithmFieldSpecified || this.MACAlgorithm.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.mACAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncapsulatedContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encapsulatedContentFieldSpecified || this.EncapsulatedContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encapsulatedContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string VersionDefaultValue {
            get {
                return this.versionDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                if ((this.versionFieldSpecified
                            && (this.versionField == default(string)))) {
                    this.versionField = this.versionDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MACSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.mACFieldSpecified
                            || (this.MACLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.mACFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.MACAlgorithm != default(AlgorithmIdentifier))
                            && this.MACAlgorithmSpecified))
                            || ((this.EncapsulatedContent != default(EncapsulatedContentType))
                            && this.EncapsulatedContentSpecified))
                            || (this.ItemsLength() != 0))
                            || (this.MACLength() != 0))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AuthenticatedDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AuthenticatedDataType";
                // END ADDED BY XSD
            }
        }
        public int ItemsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.itemsField == default(object[]))) {
                return 0;
            }
            else {
                return this.itemsField.Length;
            }
            // END ADDED BY XSD
        }
        public object ItemsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return default(object);
                }
                else {
                    if ((0 > index)) {
                        return default(object);
                    }
                    else {
                        if ((this.itemsField.Length <= index)) {
                            return default(object);
                        }
                        else {
                            return this.itemsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(object);
            }
            // END ADDED BY XSD
        }
        public bool ItemsSetItem(int index, object value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.itemsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.itemsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ItemsAddItem(object value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return false;
                }
                else {
                    object[] array = new object[(this.itemsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.itemsField.Length); i = (i + 1)) {
                        array[i] = itemsField[i];
                    }
                    array[i] = value;
                    this.Items = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ItemsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.itemsField.Length <= index)) {
                            return false;
                        }
                        else {
                            object[] array = new object[(this.itemsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = itemsField[i];
                            }
                            for (i = (i + 1); (i < this.itemsField.Length); i = (i + 1)) {
                                array[i] = itemsField[i];
                            }
                            this.Items = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ItemsInsertItem(int index, object value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return -1;
                }
                else {
                    if ((this.itemsField.Length <= index)) {
                        if ((this.ItemsAddItem(value) == true)) {
                            return this.ItemsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        object[] array = new object[(this.itemsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = itemsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.itemsField.Length); j = (j + 1)) {
                            array[k] = itemsField[j];
                            k = (k + 1);
                        }
                        this.Items = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int MACLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.mACField == default(byte[]))) {
                return 0;
            }
            else {
                return this.mACField.Length;
            }
            // END ADDED BY XSD
        }
        public byte MACGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.mACField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.mACField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.mACField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool MACSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.mACField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.mACField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.mACField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MACAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.mACField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.mACField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.mACField.Length); i = (i + 1)) {
                        array[i] = mACField[i];
                    }
                    array[i] = value;
                    this.MAC = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MACRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.mACField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.mACField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.mACField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = mACField[i];
                            }
                            for (i = (i + 1); (i < this.mACField.Length); i = (i + 1)) {
                                array[i] = mACField[i];
                            }
                            this.MAC = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int MACInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.mACField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.mACField.Length <= index)) {
                        if ((this.MACAddItem(value) == true)) {
                            return this.MACLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.mACField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = mACField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.mACField.Length); j = (j + 1)) {
                            array[k] = mACField[j];
                            k = (k + 1);
                        }
                        this.MAC = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e3483222-a510-4a9e-ad9b-43e3b51d5c1a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class KEKType : IKEKType {
        private KEKIdentifierType kEKIdentifierField = new KEKIdentifierType();
        private AlgorithmIdentifier keyEncryptionAlgorithmField = new AlgorithmIdentifier();
        private string versionField = default(string);
        private byte[] encryptedKeyField = new byte[0];
        private bool kEKIdentifierFieldSpecified = false;
        private bool keyEncryptionAlgorithmFieldSpecified = false;
        private string versionDefaultValue = "v4";
        private bool versionFieldSpecified = false;
        private bool encryptedKeyFieldSpecified = false;
        public KEKType() {
            this.versionField = this.versionDefaultValue;
        }
        public KEKType(KEKType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(KEKType))) {
            }
            else {
                this.KEKIdentifier = value.KEKIdentifier;
                this.KeyEncryptionAlgorithm = value.KeyEncryptionAlgorithm;
                this.Version = value.Version;
                this.EncryptedKey = value.EncryptedKey;
                this.KEKIdentifierSpecified = value.KEKIdentifierSpecified;
                this.KeyEncryptionAlgorithmSpecified = value.KeyEncryptionAlgorithmSpecified;
                this.VersionSpecified = value.VersionSpecified;
                this.EncryptedKeySpecified = value.EncryptedKeySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public KEKIdentifierType KEKIdentifier {
            get {
                return this.kEKIdentifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(KEKIdentifierType))
                            || false)) {
                    this.kEKIdentifierField = new KEKIdentifierType();
                    this.kEKIdentifierFieldSpecified = false;
                }
                else {
                    this.kEKIdentifierField = value;
                    this.kEKIdentifierFieldSpecified = this.KEKIdentifier.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier KeyEncryptionAlgorithm {
            get {
                return this.keyEncryptionAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AlgorithmIdentifier))
                            || false)) {
                    this.keyEncryptionAlgorithmField = new AlgorithmIdentifier();
                    this.keyEncryptionAlgorithmFieldSpecified = false;
                }
                else {
                    this.keyEncryptionAlgorithmField = value;
                    this.keyEncryptionAlgorithmFieldSpecified = this.KeyEncryptionAlgorithm.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("v4")]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.VersionDefaultValue)
                            || (value == default(string)))) {
                    this.versionField = this.VersionDefaultValue;
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] EncryptedKey {
            get {
                return this.encryptedKeyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.encryptedKeyField = new byte[0];
                    this.encryptedKeyFieldSpecified = false;
                }
                else {
                    this.encryptedKeyField = value;
                    this.encryptedKeyFieldSpecified = (this.EncryptedKeyLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool KEKIdentifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.kEKIdentifierFieldSpecified || this.KEKIdentifier.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.kEKIdentifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool KeyEncryptionAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.keyEncryptionAlgorithmFieldSpecified || this.KeyEncryptionAlgorithm.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.keyEncryptionAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string VersionDefaultValue {
            get {
                return this.versionDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                if ((this.versionFieldSpecified
                            && (this.versionField == default(string)))) {
                    this.versionField = this.versionDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncryptedKeySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encryptedKeyFieldSpecified
                            || (this.EncryptedKeyLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encryptedKeyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.KEKIdentifier != default(KEKIdentifierType))
                            && this.KEKIdentifierSpecified))
                            || ((this.KeyEncryptionAlgorithm != default(AlgorithmIdentifier))
                            && this.KeyEncryptionAlgorithmSpecified))
                            || (this.EncryptedKeyLength() != 0))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string KEKTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "KEKType";
                // END ADDED BY XSD
            }
        }
        public int EncryptedKeyLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.encryptedKeyField == default(byte[]))) {
                return 0;
            }
            else {
                return this.encryptedKeyField.Length;
            }
            // END ADDED BY XSD
        }
        public byte EncryptedKeyGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.encryptedKeyField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.encryptedKeyField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool EncryptedKeySetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.encryptedKeyField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.encryptedKeyField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EncryptedKeyAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.encryptedKeyField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.encryptedKeyField.Length); i = (i + 1)) {
                        array[i] = encryptedKeyField[i];
                    }
                    array[i] = value;
                    this.EncryptedKey = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EncryptedKeyRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.encryptedKeyField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.encryptedKeyField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = encryptedKeyField[i];
                            }
                            for (i = (i + 1); (i < this.encryptedKeyField.Length); i = (i + 1)) {
                                array[i] = encryptedKeyField[i];
                            }
                            this.EncryptedKey = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int EncryptedKeyInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.encryptedKeyField.Length <= index)) {
                        if ((this.EncryptedKeyAddItem(value) == true)) {
                            return this.EncryptedKeyLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.encryptedKeyField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = encryptedKeyField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.encryptedKeyField.Length); j = (j + 1)) {
                            array[k] = encryptedKeyField[j];
                            k = (k + 1);
                        }
                        this.EncryptedKey = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("87524c58-3a53-4eb4-b21d-fac4b33db85a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class KEKIdentifierType : IKEKIdentifierType {
        private string keyIdentifierField = default(string);
        private string keyVersionField = default(string);
        private byte[] derivationIdentifierField = new byte[0];
        private bool keyIdentifierFieldSpecified = false;
        private bool keyVersionFieldSpecified = false;
        private bool derivationIdentifierFieldSpecified = false;
        public KEKIdentifierType() {
        }
        public KEKIdentifierType(KEKIdentifierType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(KEKIdentifierType))) {
            }
            else {
                this.KeyIdentifier = value.KeyIdentifier;
                this.KeyVersion = value.KeyVersion;
                this.DerivationIdentifier = value.DerivationIdentifier;
                this.KeyIdentifierSpecified = value.KeyIdentifierSpecified;
                this.KeyVersionSpecified = value.KeyVersionSpecified;
                this.DerivationIdentifierSpecified = value.DerivationIdentifierSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string KeyIdentifier {
            get {
                return this.keyIdentifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.keyIdentifierField = default(string);
                    this.keyIdentifierFieldSpecified = false;
                }
                else {
                    this.keyIdentifierField = value;
                    this.keyIdentifierFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string KeyVersion {
            get {
                return this.keyVersionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.keyVersionField = default(string);
                    this.keyVersionFieldSpecified = false;
                }
                else {
                    this.keyVersionField = value;
                    this.keyVersionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] DerivationIdentifier {
            get {
                return this.derivationIdentifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.derivationIdentifierField = new byte[0];
                    this.derivationIdentifierFieldSpecified = false;
                }
                else {
                    this.derivationIdentifierField = value;
                    this.derivationIdentifierFieldSpecified = (this.DerivationIdentifierLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool KeyIdentifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.keyIdentifierFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.keyIdentifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool KeyVersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.keyVersionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.keyVersionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DerivationIdentifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.derivationIdentifierFieldSpecified
                            || (this.DerivationIdentifierLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.derivationIdentifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || (this.DerivationIdentifierLength() != 0))
                            || ((this.KeyIdentifier != default(string))
                            && this.KeyIdentifierSpecified))
                            || ((this.KeyVersion != default(string))
                            && this.KeyVersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string KEKIdentifierTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "KEKIdentifierType";
                // END ADDED BY XSD
            }
        }
        public int DerivationIdentifierLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.derivationIdentifierField == default(byte[]))) {
                return 0;
            }
            else {
                return this.derivationIdentifierField.Length;
            }
            // END ADDED BY XSD
        }
        public byte DerivationIdentifierGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.derivationIdentifierField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.derivationIdentifierField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.derivationIdentifierField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool DerivationIdentifierSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.derivationIdentifierField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.derivationIdentifierField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.derivationIdentifierField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DerivationIdentifierAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.derivationIdentifierField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.derivationIdentifierField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.derivationIdentifierField.Length); i = (i + 1)) {
                        array[i] = derivationIdentifierField[i];
                    }
                    array[i] = value;
                    this.DerivationIdentifier = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DerivationIdentifierRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.derivationIdentifierField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.derivationIdentifierField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.derivationIdentifierField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = derivationIdentifierField[i];
                            }
                            for (i = (i + 1); (i < this.derivationIdentifierField.Length); i = (i + 1)) {
                                array[i] = derivationIdentifierField[i];
                            }
                            this.DerivationIdentifier = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int DerivationIdentifierInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.derivationIdentifierField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.derivationIdentifierField.Length <= index)) {
                        if ((this.DerivationIdentifierAddItem(value) == true)) {
                            return this.DerivationIdentifierLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.derivationIdentifierField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = derivationIdentifierField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.derivationIdentifierField.Length); j = (j + 1)) {
                            array[k] = derivationIdentifierField[j];
                            k = (k + 1);
                        }
                        this.DerivationIdentifier = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("c6e207a3-d77c-4265-9dc1-02c93b2c3e0f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class DisplayResponseType : IDisplayResponseType {
        private OutputResultType[] outputResultField = new OutputResultType[0];
        private bool outputResultFieldSpecified = false;
        public DisplayResponseType() {
        }
        public DisplayResponseType(DisplayResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(DisplayResponseType))) {
            }
            else {
                this.OutputResult = value.OutputResult;
                this.OutputResultSpecified = value.OutputResultSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OutputResult", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputResultType[] OutputResult {
            get {
                return this.outputResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(OutputResultType[]))
                            || false)) {
                    this.outputResultField = new OutputResultType[0];
                    this.outputResultFieldSpecified = false;
                }
                else {
                    this.outputResultField = value;
                    this.outputResultFieldSpecified = (this.OutputResultLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputResultFieldSpecified
                            || (this.OutputResultLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || (this.OutputResultLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string DisplayResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "DisplayResponseType";
                // END ADDED BY XSD
            }
        }
        public int OutputResultLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputResultField == default(OutputResultType[]))) {
                return 0;
            }
            else {
                return this.outputResultField.Length;
            }
            // END ADDED BY XSD
        }
        public OutputResultType OutputResultGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputResultField == default(OutputResultType[]))) {
                    return default(OutputResultType);
                }
                else {
                    if ((0 > index)) {
                        return default(OutputResultType);
                    }
                    else {
                        if ((this.outputResultField.Length <= index)) {
                            return default(OutputResultType);
                        }
                        else {
                            return this.outputResultField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(OutputResultType);
            }
            // END ADDED BY XSD
        }
        public bool OutputResultSetItem(int index, OutputResultType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputResultField == default(OutputResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputResultField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputResultAddItem(OutputResultType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputResultField == default(OutputResultType[]))) {
                    return false;
                }
                else {
                    OutputResultType[] array = new OutputResultType[(this.outputResultField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputResultField.Length); i = (i + 1)) {
                        array[i] = outputResultField[i];
                    }
                    array[i] = value;
                    this.OutputResult = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputResultRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputResultField == default(OutputResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            OutputResultType[] array = new OutputResultType[(this.outputResultField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputResultField[i];
                            }
                            for (i = (i + 1); (i < this.outputResultField.Length); i = (i + 1)) {
                                array[i] = outputResultField[i];
                            }
                            this.OutputResult = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputResultInsertItem(int index, OutputResultType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputResultField == default(OutputResultType[]))) {
                    return -1;
                }
                else {
                    if ((this.outputResultField.Length <= index)) {
                        if ((this.OutputResultAddItem(value) == true)) {
                            return this.OutputResultLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        OutputResultType[] array = new OutputResultType[(this.outputResultField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputResultField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputResultField.Length); j = (j + 1)) {
                            array[k] = outputResultField[j];
                            k = (k + 1);
                        }
                        this.OutputResult = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("a12a7f24-6302-4741-819f-e7f34141234d")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class OutputResultType : IOutputResultType {
        private ResponseType responseField = new ResponseType();
        private string deviceField = default(string);
        private string infoQualifyField = default(string);
        private bool responseFieldSpecified = false;
        private bool deviceFieldSpecified = false;
        private bool infoQualifyFieldSpecified = false;
        public OutputResultType() {
        }
        public OutputResultType(OutputResultType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(OutputResultType))) {
            }
            else {
                this.Response = value.Response;
                this.Device = value.Device;
                this.InfoQualify = value.InfoQualify;
                this.ResponseSpecified = value.ResponseSpecified;
                this.DeviceSpecified = value.DeviceSpecified;
                this.InfoQualifySpecified = value.InfoQualifySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Device {
            get {
                return this.deviceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.deviceField = default(string);
                    this.deviceFieldSpecified = false;
                }
                else {
                    this.deviceField = value;
                    this.deviceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InfoQualify {
            get {
                return this.infoQualifyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.infoQualifyField = default(string);
                    this.infoQualifyFieldSpecified = false;
                }
                else {
                    this.infoQualifyField = value;
                    this.infoQualifyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DeviceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.deviceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.deviceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InfoQualifySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.infoQualifyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.infoQualifyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.Device != default(string))
                            && this.DeviceSpecified))
                            || ((this.InfoQualify != default(string))
                            && this.InfoQualifySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string OutputResultTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "OutputResultType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("259c3e72-aee7-4192-ad8a-a8a23ff9d427")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ResponseType : IResponseType {
        private string additionalResponseField = default(string);
        private string resultField = default(string);
        private string errorConditionField = default(string);
        private bool additionalResponseFieldSpecified = false;
        private bool resultFieldSpecified = false;
        private bool errorConditionFieldSpecified = false;
        public ResponseType() {
        }
        public ResponseType(ResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ResponseType))) {
            }
            else {
                this.AdditionalResponse = value.AdditionalResponse;
                this.Result = value.Result;
                this.ErrorCondition = value.ErrorCondition;
                this.AdditionalResponseSpecified = value.AdditionalResponseSpecified;
                this.ResultSpecified = value.ResultSpecified;
                this.ErrorConditionSpecified = value.ErrorConditionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AdditionalResponse {
            get {
                return this.additionalResponseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.additionalResponseField = default(string);
                    this.additionalResponseFieldSpecified = false;
                }
                else {
                    this.additionalResponseField = value;
                    this.additionalResponseFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.resultField = default(string);
                    this.resultFieldSpecified = false;
                }
                else {
                    this.resultField = value;
                    this.resultFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrorCondition {
            get {
                return this.errorConditionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.errorConditionField = default(string);
                    this.errorConditionFieldSpecified = false;
                }
                else {
                    this.errorConditionField = value;
                    this.errorConditionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AdditionalResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.additionalResponseFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.additionalResponseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.resultFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.resultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ErrorConditionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.errorConditionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.errorConditionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.AdditionalResponse != default(string))
                            && this.AdditionalResponseSpecified))
                            || ((this.Result != default(string))
                            && this.ResultSpecified))
                            || ((this.ErrorCondition != default(string))
                            && this.ErrorConditionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("0bb8aad2-1a56-4777-9792-9a729cfd5adb")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class DisplayRequestType : IDisplayRequestType {
        private DisplayOutputType[] displayOutputField = new DisplayOutputType[0];
        private bool displayOutputFieldSpecified = false;
        public DisplayRequestType() {
        }
        public DisplayRequestType(DisplayRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(DisplayRequestType))) {
            }
            else {
                this.DisplayOutput = value.DisplayOutput;
                this.DisplayOutputSpecified = value.DisplayOutputSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DisplayOutput", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DisplayOutputType[] DisplayOutput {
            get {
                return this.displayOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(DisplayOutputType[]))
                            || false)) {
                    this.displayOutputField = new DisplayOutputType[0];
                    this.displayOutputFieldSpecified = false;
                }
                else {
                    this.displayOutputField = value;
                    this.displayOutputFieldSpecified = (this.DisplayOutputLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisplayOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.displayOutputFieldSpecified
                            || (this.DisplayOutputLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.displayOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || (this.DisplayOutputLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string DisplayRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "DisplayRequestType";
                // END ADDED BY XSD
            }
        }
        public int DisplayOutputLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.displayOutputField == default(DisplayOutputType[]))) {
                return 0;
            }
            else {
                return this.displayOutputField.Length;
            }
            // END ADDED BY XSD
        }
        public DisplayOutputType DisplayOutputGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.displayOutputField == default(DisplayOutputType[]))) {
                    return default(DisplayOutputType);
                }
                else {
                    if ((0 > index)) {
                        return default(DisplayOutputType);
                    }
                    else {
                        if ((this.displayOutputField.Length <= index)) {
                            return default(DisplayOutputType);
                        }
                        else {
                            return this.displayOutputField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(DisplayOutputType);
            }
            // END ADDED BY XSD
        }
        public bool DisplayOutputSetItem(int index, DisplayOutputType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.displayOutputField == default(DisplayOutputType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.displayOutputField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.displayOutputField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DisplayOutputAddItem(DisplayOutputType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.displayOutputField == default(DisplayOutputType[]))) {
                    return false;
                }
                else {
                    DisplayOutputType[] array = new DisplayOutputType[(this.displayOutputField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.displayOutputField.Length); i = (i + 1)) {
                        array[i] = displayOutputField[i];
                    }
                    array[i] = value;
                    this.DisplayOutput = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DisplayOutputRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.displayOutputField == default(DisplayOutputType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.displayOutputField.Length <= index)) {
                            return false;
                        }
                        else {
                            DisplayOutputType[] array = new DisplayOutputType[(this.displayOutputField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = displayOutputField[i];
                            }
                            for (i = (i + 1); (i < this.displayOutputField.Length); i = (i + 1)) {
                                array[i] = displayOutputField[i];
                            }
                            this.DisplayOutput = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int DisplayOutputInsertItem(int index, DisplayOutputType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.displayOutputField == default(DisplayOutputType[]))) {
                    return -1;
                }
                else {
                    if ((this.displayOutputField.Length <= index)) {
                        if ((this.DisplayOutputAddItem(value) == true)) {
                            return this.DisplayOutputLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        DisplayOutputType[] array = new DisplayOutputType[(this.displayOutputField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = displayOutputField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.displayOutputField.Length); j = (j + 1)) {
                            array[k] = displayOutputField[j];
                            k = (k + 1);
                        }
                        this.DisplayOutput = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("44406127-463b-4440-8213-86ab29ba8ec4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class DisplayOutputType : IDisplayOutputType {
        private OutputContentType outputContentField = new OutputContentType();
        private MenuEntryType[] menuEntryField = new MenuEntryType[0];
        private byte[] outputSignatureField = new byte[0];
        private bool responseRequiredFlagField = default(bool);
        private int minimumDisplayTimeField = default(int);
        private string deviceField = default(string);
        private string infoQualifyField = default(string);
        private bool outputContentFieldSpecified = false;
        private bool menuEntryFieldSpecified = false;
        private bool outputSignatureFieldSpecified = false;
        private bool responseRequiredFlagDefaultValue = true;
        private bool responseRequiredFlagFieldSpecified = false;
        private int minimumDisplayTimeDefaultValue = 0;
        private bool minimumDisplayTimeFieldSpecified = false;
        private bool deviceFieldSpecified = false;
        private bool infoQualifyFieldSpecified = false;
        public DisplayOutputType() {
            this.responseRequiredFlagField = this.responseRequiredFlagDefaultValue;
            this.minimumDisplayTimeField = this.minimumDisplayTimeDefaultValue;
        }
        public DisplayOutputType(DisplayOutputType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(DisplayOutputType))) {
            }
            else {
                this.OutputContent = value.OutputContent;
                this.MenuEntry = value.MenuEntry;
                this.OutputSignature = value.OutputSignature;
                this.ResponseRequiredFlag = value.ResponseRequiredFlag;
                this.MinimumDisplayTime = value.MinimumDisplayTime;
                this.Device = value.Device;
                this.InfoQualify = value.InfoQualify;
                this.OutputContentSpecified = value.OutputContentSpecified;
                this.MenuEntrySpecified = value.MenuEntrySpecified;
                this.OutputSignatureSpecified = value.OutputSignatureSpecified;
                this.ResponseRequiredFlagSpecified = value.ResponseRequiredFlagSpecified;
                this.MinimumDisplayTimeSpecified = value.MinimumDisplayTimeSpecified;
                this.DeviceSpecified = value.DeviceSpecified;
                this.InfoQualifySpecified = value.InfoQualifySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputContentType OutputContent {
            get {
                return this.outputContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OutputContentType))
                            || false)) {
                    this.outputContentField = new OutputContentType();
                    this.outputContentFieldSpecified = false;
                }
                else {
                    this.outputContentField = value;
                    this.outputContentFieldSpecified = this.OutputContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MenuEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MenuEntryType[] MenuEntry {
            get {
                return this.menuEntryField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(MenuEntryType[]))
                            || false)) {
                    this.menuEntryField = new MenuEntryType[0];
                    this.menuEntryFieldSpecified = false;
                }
                else {
                    this.menuEntryField = value;
                    this.menuEntryFieldSpecified = (this.MenuEntryLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] OutputSignature {
            get {
                return this.outputSignatureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.outputSignatureField = new byte[0];
                    this.outputSignatureFieldSpecified = false;
                }
                else {
                    this.outputSignatureField = value;
                    this.outputSignatureFieldSpecified = (this.OutputSignatureLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ResponseRequiredFlag {
            get {
                return this.responseRequiredFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.ResponseRequiredFlagDefaultValue)
                            || false)) {
                    this.responseRequiredFlagField = this.ResponseRequiredFlagDefaultValue;
                    this.responseRequiredFlagFieldSpecified = false;
                }
                else {
                    this.responseRequiredFlagField = value;
                    this.responseRequiredFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int MinimumDisplayTime {
            get {
                return this.minimumDisplayTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.MinimumDisplayTimeDefaultValue)
                            || false)) {
                    this.minimumDisplayTimeField = this.MinimumDisplayTimeDefaultValue;
                    this.minimumDisplayTimeFieldSpecified = false;
                }
                else {
                    this.minimumDisplayTimeField = value;
                    this.minimumDisplayTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Device {
            get {
                return this.deviceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.deviceField = default(string);
                    this.deviceFieldSpecified = false;
                }
                else {
                    this.deviceField = value;
                    this.deviceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InfoQualify {
            get {
                return this.infoQualifyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.infoQualifyField = default(string);
                    this.infoQualifyFieldSpecified = false;
                }
                else {
                    this.infoQualifyField = value;
                    this.infoQualifyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputContentFieldSpecified || this.OutputContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MenuEntrySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.menuEntryFieldSpecified
                            || (this.MenuEntryLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.menuEntryFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputSignatureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputSignatureFieldSpecified
                            || (this.OutputSignatureLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputSignatureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseRequiredFlagDefaultValue {
            get {
                return this.responseRequiredFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseRequiredFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseRequiredFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseRequiredFlagFieldSpecified = value;
                if ((this.responseRequiredFlagFieldSpecified
                            && (this.responseRequiredFlagField == default(bool)))) {
                    this.responseRequiredFlagField = this.responseRequiredFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public int MinimumDisplayTimeDefaultValue {
            get {
                return this.minimumDisplayTimeDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MinimumDisplayTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.minimumDisplayTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.minimumDisplayTimeFieldSpecified = value;
                if ((this.minimumDisplayTimeFieldSpecified
                            && (this.minimumDisplayTimeField == default(int)))) {
                    this.minimumDisplayTimeField = this.minimumDisplayTimeDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DeviceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.deviceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.deviceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InfoQualifySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.infoQualifyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.infoQualifyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.OutputContent != default(OutputContentType))
                            && this.OutputContentSpecified))
                            || (this.MenuEntryLength() != 0))
                            || (this.OutputSignatureLength() != 0))
                            || ((this.ResponseRequiredFlag != default(bool))
                            && this.ResponseRequiredFlagSpecified))
                            || ((this.MinimumDisplayTime != default(int))
                            && this.MinimumDisplayTimeSpecified))
                            || ((this.Device != default(string))
                            && this.DeviceSpecified))
                            || ((this.InfoQualify != default(string))
                            && this.InfoQualifySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string DisplayOutputTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "DisplayOutputType";
                // END ADDED BY XSD
            }
        }
        public int MenuEntryLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.menuEntryField == default(MenuEntryType[]))) {
                return 0;
            }
            else {
                return this.menuEntryField.Length;
            }
            // END ADDED BY XSD
        }
        public MenuEntryType MenuEntryGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return default(MenuEntryType);
                }
                else {
                    if ((0 > index)) {
                        return default(MenuEntryType);
                    }
                    else {
                        if ((this.menuEntryField.Length <= index)) {
                            return default(MenuEntryType);
                        }
                        else {
                            return this.menuEntryField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(MenuEntryType);
            }
            // END ADDED BY XSD
        }
        public bool MenuEntrySetItem(int index, MenuEntryType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.menuEntryField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.menuEntryField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MenuEntryAddItem(MenuEntryType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return false;
                }
                else {
                    MenuEntryType[] array = new MenuEntryType[(this.menuEntryField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.menuEntryField.Length); i = (i + 1)) {
                        array[i] = menuEntryField[i];
                    }
                    array[i] = value;
                    this.MenuEntry = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MenuEntryRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.menuEntryField.Length <= index)) {
                            return false;
                        }
                        else {
                            MenuEntryType[] array = new MenuEntryType[(this.menuEntryField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = menuEntryField[i];
                            }
                            for (i = (i + 1); (i < this.menuEntryField.Length); i = (i + 1)) {
                                array[i] = menuEntryField[i];
                            }
                            this.MenuEntry = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int MenuEntryInsertItem(int index, MenuEntryType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return -1;
                }
                else {
                    if ((this.menuEntryField.Length <= index)) {
                        if ((this.MenuEntryAddItem(value) == true)) {
                            return this.MenuEntryLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        MenuEntryType[] array = new MenuEntryType[(this.menuEntryField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = menuEntryField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.menuEntryField.Length); j = (j + 1)) {
                            array[k] = menuEntryField[j];
                            k = (k + 1);
                        }
                        this.MenuEntry = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int OutputSignatureLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputSignatureField == default(byte[]))) {
                return 0;
            }
            else {
                return this.outputSignatureField.Length;
            }
            // END ADDED BY XSD
        }
        public byte OutputSignatureGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.outputSignatureField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputSignatureField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.outputSignatureField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputSignatureField.Length); i = (i + 1)) {
                        array[i] = outputSignatureField[i];
                    }
                    array[i] = value;
                    this.OutputSignature = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.outputSignatureField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputSignatureField[i];
                            }
                            for (i = (i + 1); (i < this.outputSignatureField.Length); i = (i + 1)) {
                                array[i] = outputSignatureField[i];
                            }
                            this.OutputSignature = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputSignatureInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.outputSignatureField.Length <= index)) {
                        if ((this.OutputSignatureAddItem(value) == true)) {
                            return this.OutputSignatureLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.outputSignatureField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputSignatureField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputSignatureField.Length); j = (j + 1)) {
                            array[k] = outputSignatureField[j];
                            k = (k + 1);
                        }
                        this.OutputSignature = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ae5df24a-9a33-4d84-a6ce-8e4cce667398")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class OutputContentType : IOutputContentType {
        private PredefinedContentType predefinedContentField = new PredefinedContentType();
        private OutputTextType[] outputTextField = new OutputTextType[0];
        private byte[] outputXHTMLField = new byte[0];
        private OutputBarcodeType outputBarcodeField = new OutputBarcodeType();
        private string outputFormatField = default(string);
        private bool predefinedContentFieldSpecified = false;
        private bool outputTextFieldSpecified = false;
        private bool outputXHTMLFieldSpecified = false;
        private bool outputBarcodeFieldSpecified = false;
        private bool outputFormatFieldSpecified = false;
        public OutputContentType() {
        }
        public OutputContentType(OutputContentType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(OutputContentType))) {
            }
            else {
                this.PredefinedContent = value.PredefinedContent;
                this.OutputText = value.OutputText;
                this.OutputXHTML = value.OutputXHTML;
                this.OutputBarcode = value.OutputBarcode;
                this.OutputFormat = value.OutputFormat;
                this.PredefinedContentSpecified = value.PredefinedContentSpecified;
                this.OutputTextSpecified = value.OutputTextSpecified;
                this.OutputXHTMLSpecified = value.OutputXHTMLSpecified;
                this.OutputBarcodeSpecified = value.OutputBarcodeSpecified;
                this.OutputFormatSpecified = value.OutputFormatSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PredefinedContentType PredefinedContent {
            get {
                return this.predefinedContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PredefinedContentType))
                            || false)) {
                    this.predefinedContentField = new PredefinedContentType();
                    this.predefinedContentFieldSpecified = false;
                }
                else {
                    this.predefinedContentField = value;
                    this.predefinedContentFieldSpecified = this.PredefinedContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OutputText", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputTextType[] OutputText {
            get {
                return this.outputTextField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(OutputTextType[]))
                            || false)) {
                    this.outputTextField = new OutputTextType[0];
                    this.outputTextFieldSpecified = false;
                }
                else {
                    this.outputTextField = value;
                    this.outputTextFieldSpecified = (this.OutputTextLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] OutputXHTML {
            get {
                return this.outputXHTMLField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.outputXHTMLField = new byte[0];
                    this.outputXHTMLFieldSpecified = false;
                }
                else {
                    this.outputXHTMLField = value;
                    this.outputXHTMLFieldSpecified = (this.OutputXHTMLLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputBarcodeType OutputBarcode {
            get {
                return this.outputBarcodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OutputBarcodeType))
                            || false)) {
                    this.outputBarcodeField = new OutputBarcodeType();
                    this.outputBarcodeFieldSpecified = false;
                }
                else {
                    this.outputBarcodeField = value;
                    this.outputBarcodeFieldSpecified = this.OutputBarcode.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OutputFormat {
            get {
                return this.outputFormatField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.outputFormatField = default(string);
                    this.outputFormatFieldSpecified = false;
                }
                else {
                    this.outputFormatField = value;
                    this.outputFormatFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PredefinedContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.predefinedContentFieldSpecified || this.PredefinedContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.predefinedContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputTextSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputTextFieldSpecified
                            || (this.OutputTextLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputTextFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputXHTMLSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputXHTMLFieldSpecified
                            || (this.OutputXHTMLLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputXHTMLFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputBarcodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputBarcodeFieldSpecified || this.OutputBarcode.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputBarcodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputFormatSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputFormatFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputFormatFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.PredefinedContent != default(PredefinedContentType))
                            && this.PredefinedContentSpecified))
                            || ((this.OutputBarcode != default(OutputBarcodeType))
                            && this.OutputBarcodeSpecified))
                            || (this.OutputTextLength() != 0))
                            || (this.OutputXHTMLLength() != 0))
                            || ((this.OutputFormat != default(string))
                            && this.OutputFormatSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string OutputContentTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "OutputContentType";
                // END ADDED BY XSD
            }
        }
        public int OutputTextLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputTextField == default(OutputTextType[]))) {
                return 0;
            }
            else {
                return this.outputTextField.Length;
            }
            // END ADDED BY XSD
        }
        public OutputTextType OutputTextGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return default(OutputTextType);
                }
                else {
                    if ((0 > index)) {
                        return default(OutputTextType);
                    }
                    else {
                        if ((this.outputTextField.Length <= index)) {
                            return default(OutputTextType);
                        }
                        else {
                            return this.outputTextField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(OutputTextType);
            }
            // END ADDED BY XSD
        }
        public bool OutputTextSetItem(int index, OutputTextType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputTextField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputTextField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputTextAddItem(OutputTextType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return false;
                }
                else {
                    OutputTextType[] array = new OutputTextType[(this.outputTextField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputTextField.Length); i = (i + 1)) {
                        array[i] = outputTextField[i];
                    }
                    array[i] = value;
                    this.OutputText = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputTextRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputTextField.Length <= index)) {
                            return false;
                        }
                        else {
                            OutputTextType[] array = new OutputTextType[(this.outputTextField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputTextField[i];
                            }
                            for (i = (i + 1); (i < this.outputTextField.Length); i = (i + 1)) {
                                array[i] = outputTextField[i];
                            }
                            this.OutputText = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputTextInsertItem(int index, OutputTextType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return -1;
                }
                else {
                    if ((this.outputTextField.Length <= index)) {
                        if ((this.OutputTextAddItem(value) == true)) {
                            return this.OutputTextLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        OutputTextType[] array = new OutputTextType[(this.outputTextField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputTextField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputTextField.Length); j = (j + 1)) {
                            array[k] = outputTextField[j];
                            k = (k + 1);
                        }
                        this.OutputText = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int OutputXHTMLLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputXHTMLField == default(byte[]))) {
                return 0;
            }
            else {
                return this.outputXHTMLField.Length;
            }
            // END ADDED BY XSD
        }
        public byte OutputXHTMLGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.outputXHTMLField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.outputXHTMLField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool OutputXHTMLSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputXHTMLField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputXHTMLField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputXHTMLAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.outputXHTMLField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputXHTMLField.Length); i = (i + 1)) {
                        array[i] = outputXHTMLField[i];
                    }
                    array[i] = value;
                    this.OutputXHTML = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputXHTMLRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputXHTMLField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.outputXHTMLField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputXHTMLField[i];
                            }
                            for (i = (i + 1); (i < this.outputXHTMLField.Length); i = (i + 1)) {
                                array[i] = outputXHTMLField[i];
                            }
                            this.OutputXHTML = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputXHTMLInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.outputXHTMLField.Length <= index)) {
                        if ((this.OutputXHTMLAddItem(value) == true)) {
                            return this.OutputXHTMLLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.outputXHTMLField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputXHTMLField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputXHTMLField.Length); j = (j + 1)) {
                            array[k] = outputXHTMLField[j];
                            k = (k + 1);
                        }
                        this.OutputXHTML = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("c99c4719-0797-40d1-86ef-9a7becec93a5")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PredefinedContentType : IPredefinedContentType {
        private string referenceIDField = default(string);
        private string languageField = default(string);
        private bool referenceIDFieldSpecified = false;
        private bool languageFieldSpecified = false;
        public PredefinedContentType() {
        }
        public PredefinedContentType(PredefinedContentType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PredefinedContentType))) {
            }
            else {
                this.ReferenceID = value.ReferenceID;
                this.Language = value.Language;
                this.ReferenceIDSpecified = value.ReferenceIDSpecified;
                this.LanguageSpecified = value.LanguageSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReferenceID {
            get {
                return this.referenceIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.referenceIDField = default(string);
                    this.referenceIDFieldSpecified = false;
                }
                else {
                    this.referenceIDField = value;
                    this.referenceIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.languageField = default(string);
                    this.languageFieldSpecified = false;
                }
                else {
                    this.languageField = value;
                    this.languageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReferenceIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.referenceIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.referenceIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.languageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.languageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.ReferenceID != default(string))
                            && this.ReferenceIDSpecified))
                            || ((this.Language != default(string))
                            && this.LanguageSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PredefinedContentTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PredefinedContentType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e4243090-acfa-4300-a43a-418de49f918a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class OutputTextType : IOutputTextType {
        private int characterSetField = default(int);
        private string fontField = default(string);
        private int startRowField = default(int);
        private int startColumnField = default(int);
        private string colorField = default(string);
        private string characterWidthField = default(string);
        private string characterHeightField = default(string);
        private string characterStyleField = default(string);
        private string alignmentField = default(string);
        private bool endOfLineFlagField = default(bool);
        private string valueField = default(string);
        private bool characterSetFieldSpecified = false;
        private bool fontFieldSpecified = false;
        private bool startRowFieldSpecified = false;
        private bool startColumnFieldSpecified = false;
        private bool colorFieldSpecified = false;
        private bool characterWidthFieldSpecified = false;
        private bool characterHeightFieldSpecified = false;
        private bool characterStyleFieldSpecified = false;
        private bool alignmentFieldSpecified = false;
        private bool endOfLineFlagDefaultValue = true;
        private bool endOfLineFlagFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public OutputTextType() {
            this.endOfLineFlagField = this.endOfLineFlagDefaultValue;
        }
        public OutputTextType(OutputTextType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(OutputTextType))) {
            }
            else {
                this.CharacterSet = value.CharacterSet;
                this.Font = value.Font;
                this.StartRow = value.StartRow;
                this.StartColumn = value.StartColumn;
                this.Color = value.Color;
                this.CharacterWidth = value.CharacterWidth;
                this.CharacterHeight = value.CharacterHeight;
                this.CharacterStyle = value.CharacterStyle;
                this.Alignment = value.Alignment;
                this.EndOfLineFlag = value.EndOfLineFlag;
                this.Value = value.Value;
                this.CharacterSetSpecified = value.CharacterSetSpecified;
                this.FontSpecified = value.FontSpecified;
                this.StartRowSpecified = value.StartRowSpecified;
                this.StartColumnSpecified = value.StartColumnSpecified;
                this.ColorSpecified = value.ColorSpecified;
                this.CharacterWidthSpecified = value.CharacterWidthSpecified;
                this.CharacterHeightSpecified = value.CharacterHeightSpecified;
                this.CharacterStyleSpecified = value.CharacterStyleSpecified;
                this.AlignmentSpecified = value.AlignmentSpecified;
                this.EndOfLineFlagSpecified = value.EndOfLineFlagSpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CharacterSet {
            get {
                return this.characterSetField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.characterSetField = default(int);
                    this.characterSetFieldSpecified = false;
                }
                else {
                    this.characterSetField = value;
                    this.characterSetFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Font {
            get {
                return this.fontField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.fontField = default(string);
                    this.fontFieldSpecified = false;
                }
                else {
                    this.fontField = value;
                    this.fontFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int StartRow {
            get {
                return this.startRowField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.startRowField = default(int);
                    this.startRowFieldSpecified = false;
                }
                else {
                    this.startRowField = value;
                    this.startRowFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int StartColumn {
            get {
                return this.startColumnField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.startColumnField = default(int);
                    this.startColumnFieldSpecified = false;
                }
                else {
                    this.startColumnField = value;
                    this.startColumnFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Color {
            get {
                return this.colorField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.colorField = default(string);
                    this.colorFieldSpecified = false;
                }
                else {
                    this.colorField = value;
                    this.colorFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CharacterWidth {
            get {
                return this.characterWidthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.characterWidthField = default(string);
                    this.characterWidthFieldSpecified = false;
                }
                else {
                    this.characterWidthField = value;
                    this.characterWidthFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CharacterHeight {
            get {
                return this.characterHeightField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.characterHeightField = default(string);
                    this.characterHeightFieldSpecified = false;
                }
                else {
                    this.characterHeightField = value;
                    this.characterHeightFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CharacterStyle {
            get {
                return this.characterStyleField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.characterStyleField = default(string);
                    this.characterStyleFieldSpecified = false;
                }
                else {
                    this.characterStyleField = value;
                    this.characterStyleFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Alignment {
            get {
                return this.alignmentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.alignmentField = default(string);
                    this.alignmentFieldSpecified = false;
                }
                else {
                    this.alignmentField = value;
                    this.alignmentFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool EndOfLineFlag {
            get {
                return this.endOfLineFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.EndOfLineFlagDefaultValue)
                            || false)) {
                    this.endOfLineFlagField = this.EndOfLineFlagDefaultValue;
                    this.endOfLineFlagFieldSpecified = false;
                }
                else {
                    this.endOfLineFlagField = value;
                    this.endOfLineFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.valueField = default(string);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CharacterSetSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.characterSetFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.characterSetFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool FontSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.fontFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.fontFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StartRowSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.startRowFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.startRowFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StartColumnSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.startColumnFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.startColumnFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ColorSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.colorFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.colorFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CharacterWidthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.characterWidthFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.characterWidthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CharacterHeightSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.characterHeightFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.characterHeightFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CharacterStyleSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.characterStyleFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.characterStyleFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AlignmentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.alignmentFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.alignmentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EndOfLineFlagDefaultValue {
            get {
                return this.endOfLineFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EndOfLineFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.endOfLineFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.endOfLineFlagFieldSpecified = value;
                if ((this.endOfLineFlagFieldSpecified
                            && (this.endOfLineFlagField == default(bool)))) {
                    this.endOfLineFlagField = this.endOfLineFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((((false
                            || ((this.CharacterSet != default(int))
                            && this.CharacterSetSpecified))
                            || ((this.Font != default(string))
                            && this.FontSpecified))
                            || ((this.StartRow != default(int))
                            && this.StartRowSpecified))
                            || ((this.StartColumn != default(int))
                            && this.StartColumnSpecified))
                            || ((this.Color != default(string))
                            && this.ColorSpecified))
                            || ((this.CharacterWidth != default(string))
                            && this.CharacterWidthSpecified))
                            || ((this.CharacterHeight != default(string))
                            && this.CharacterHeightSpecified))
                            || ((this.CharacterStyle != default(string))
                            && this.CharacterStyleSpecified))
                            || ((this.Alignment != default(string))
                            && this.AlignmentSpecified))
                            || ((this.EndOfLineFlag != default(bool))
                            && this.EndOfLineFlagSpecified))
                            || ((this.Value != default(string))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string OutputTextTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "OutputTextType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("bba1e343-6016-4754-a355-e38ff2909637")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class OutputBarcodeType : IOutputBarcodeType {
        private string barcodeValueField = default(string);
        private byte[] qRCodeBinaryValueField = new byte[0];
        private string barcodeTypeField = default(string);
        private string qRCodeVersionField = default(string);
        private QRCodeEncodingModeEnumeration qRCodeEncodingModeField = default(QRCodeEncodingModeEnumeration);
        private bool qRCodeEncodingModeFieldSpecified = default(bool);
        private QRCodeErrorCorrectionEnumeration qRCodeErrorCorrectionField = default(QRCodeErrorCorrectionEnumeration);
        private bool qRCodeErrorCorrectionFieldSpecified = default(bool);
        private bool barcodeValueFieldSpecified = false;
        private bool qRCodeBinaryValueFieldSpecified = false;
        private string barcodeTypeDefaultValue = "EAN13";
        private bool barcodeTypeFieldSpecified = false;
        private bool qRCodeVersionFieldSpecified = false;
        public OutputBarcodeType() {
            this.barcodeTypeField = this.barcodeTypeDefaultValue;
        }
        public OutputBarcodeType(OutputBarcodeType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(OutputBarcodeType))) {
            }
            else {
                this.BarcodeValue = value.BarcodeValue;
                this.QRCodeBinaryValue = value.QRCodeBinaryValue;
                this.BarcodeType = value.BarcodeType;
                this.QRCodeVersion = value.QRCodeVersion;
                this.QRCodeEncodingMode = value.QRCodeEncodingMode;
                this.QRCodeEncodingModeSpecified = value.QRCodeEncodingModeSpecified;
                this.QRCodeErrorCorrection = value.QRCodeErrorCorrection;
                this.QRCodeErrorCorrectionSpecified = value.QRCodeErrorCorrectionSpecified;
                this.BarcodeValueSpecified = value.BarcodeValueSpecified;
                this.QRCodeBinaryValueSpecified = value.QRCodeBinaryValueSpecified;
                this.BarcodeTypeSpecified = value.BarcodeTypeSpecified;
                this.QRCodeVersionSpecified = value.QRCodeVersionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BarcodeValue {
            get {
                return this.barcodeValueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.barcodeValueField = default(string);
                    this.barcodeValueFieldSpecified = false;
                }
                else {
                    this.barcodeValueField = value;
                    this.barcodeValueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] QRCodeBinaryValue {
            get {
                return this.qRCodeBinaryValueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.qRCodeBinaryValueField = new byte[0];
                    this.qRCodeBinaryValueFieldSpecified = false;
                }
                else {
                    this.qRCodeBinaryValueField = value;
                    this.qRCodeBinaryValueFieldSpecified = (this.QRCodeBinaryValueLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("EAN13")]
        public string BarcodeType {
            get {
                return this.barcodeTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.BarcodeTypeDefaultValue)
                            || (value == default(string)))) {
                    this.barcodeTypeField = this.BarcodeTypeDefaultValue;
                    this.barcodeTypeFieldSpecified = false;
                }
                else {
                    this.barcodeTypeField = value;
                    this.barcodeTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string QRCodeVersion {
            get {
                return this.qRCodeVersionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.qRCodeVersionField = default(string);
                    this.qRCodeVersionFieldSpecified = false;
                }
                else {
                    this.qRCodeVersionField = value;
                    this.qRCodeVersionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public QRCodeEncodingModeEnumeration QRCodeEncodingMode {
            get {
                return this.qRCodeEncodingModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(QRCodeEncodingModeEnumeration))
                            || false)) {
                    this.qRCodeEncodingModeField = default(QRCodeEncodingModeEnumeration);
                    this.qRCodeEncodingModeFieldSpecified = false;
                }
                else {
                    this.qRCodeEncodingModeField = value;
                    this.qRCodeEncodingModeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QRCodeEncodingModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.qRCodeEncodingModeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.qRCodeEncodingModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public QRCodeErrorCorrectionEnumeration QRCodeErrorCorrection {
            get {
                return this.qRCodeErrorCorrectionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(QRCodeErrorCorrectionEnumeration))
                            || false)) {
                    this.qRCodeErrorCorrectionField = default(QRCodeErrorCorrectionEnumeration);
                    this.qRCodeErrorCorrectionFieldSpecified = false;
                }
                else {
                    this.qRCodeErrorCorrectionField = value;
                    this.qRCodeErrorCorrectionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QRCodeErrorCorrectionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.qRCodeErrorCorrectionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.qRCodeErrorCorrectionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BarcodeValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.barcodeValueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.barcodeValueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool QRCodeBinaryValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.qRCodeBinaryValueFieldSpecified
                            || (this.QRCodeBinaryValueLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.qRCodeBinaryValueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string BarcodeTypeDefaultValue {
            get {
                return this.barcodeTypeDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BarcodeTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.barcodeTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.barcodeTypeFieldSpecified = value;
                if ((this.barcodeTypeFieldSpecified
                            && (this.barcodeTypeField == default(string)))) {
                    this.barcodeTypeField = this.barcodeTypeDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool QRCodeVersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.qRCodeVersionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.qRCodeVersionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || (this.QRCodeBinaryValueLength() != 0))
                            || ((this.BarcodeValue != default(string))
                            && this.BarcodeValueSpecified))
                            || ((this.BarcodeType != default(string))
                            && this.BarcodeTypeSpecified))
                            || ((this.QRCodeVersion != default(string))
                            && this.QRCodeVersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string OutputBarcodeTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "OutputBarcodeType";
                // END ADDED BY XSD
            }
        }
        public int QRCodeBinaryValueLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.qRCodeBinaryValueField == default(byte[]))) {
                return 0;
            }
            else {
                return this.qRCodeBinaryValueField.Length;
            }
            // END ADDED BY XSD
        }
        public byte QRCodeBinaryValueGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.qRCodeBinaryValueField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.qRCodeBinaryValueField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.qRCodeBinaryValueField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool QRCodeBinaryValueSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.qRCodeBinaryValueField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.qRCodeBinaryValueField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.qRCodeBinaryValueField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool QRCodeBinaryValueAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.qRCodeBinaryValueField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.qRCodeBinaryValueField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.qRCodeBinaryValueField.Length); i = (i + 1)) {
                        array[i] = qRCodeBinaryValueField[i];
                    }
                    array[i] = value;
                    this.QRCodeBinaryValue = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool QRCodeBinaryValueRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.qRCodeBinaryValueField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.qRCodeBinaryValueField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.qRCodeBinaryValueField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = qRCodeBinaryValueField[i];
                            }
                            for (i = (i + 1); (i < this.qRCodeBinaryValueField.Length); i = (i + 1)) {
                                array[i] = qRCodeBinaryValueField[i];
                            }
                            this.QRCodeBinaryValue = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int QRCodeBinaryValueInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.qRCodeBinaryValueField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.qRCodeBinaryValueField.Length <= index)) {
                        if ((this.QRCodeBinaryValueAddItem(value) == true)) {
                            return this.QRCodeBinaryValueLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.qRCodeBinaryValueField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = qRCodeBinaryValueField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.qRCodeBinaryValueField.Length); j = (j + 1)) {
                            array[k] = qRCodeBinaryValueField[j];
                            k = (k + 1);
                        }
                        this.QRCodeBinaryValue = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum QRCodeEncodingModeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Numeric,
        /// <remarks/>
        Alphanumeric,
        /// <remarks/>
        Binary,
        /// <remarks/>
        Kanji,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum QRCodeErrorCorrectionEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        L,
        /// <remarks/>
        M,
        /// <remarks/>
        Q,
        /// <remarks/>
        H,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("1a8e8219-44db-45ee-b253-1754902a1594")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class MenuEntryType : IMenuEntryType {
        private PredefinedContentType predefinedContentField = new PredefinedContentType();
        private OutputTextType[] outputTextField = new OutputTextType[0];
        private byte[] outputXHTMLField = new byte[0];
        private string menuEntryTagField = default(string);
        private string outputFormatField = default(string);
        private bool defaultSelectedFlagField = default(bool);
        private bool predefinedContentFieldSpecified = false;
        private bool outputTextFieldSpecified = false;
        private bool outputXHTMLFieldSpecified = false;
        private string menuEntryTagDefaultValue = "Selectable";
        private bool menuEntryTagFieldSpecified = false;
        private bool outputFormatFieldSpecified = false;
        private bool defaultSelectedFlagDefaultValue = false;
        private bool defaultSelectedFlagFieldSpecified = false;
        public MenuEntryType() {
            this.menuEntryTagField = this.menuEntryTagDefaultValue;
            this.defaultSelectedFlagField = this.defaultSelectedFlagDefaultValue;
        }
        public MenuEntryType(MenuEntryType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(MenuEntryType))) {
            }
            else {
                this.PredefinedContent = value.PredefinedContent;
                this.OutputText = value.OutputText;
                this.OutputXHTML = value.OutputXHTML;
                this.MenuEntryTag = value.MenuEntryTag;
                this.OutputFormat = value.OutputFormat;
                this.DefaultSelectedFlag = value.DefaultSelectedFlag;
                this.PredefinedContentSpecified = value.PredefinedContentSpecified;
                this.OutputTextSpecified = value.OutputTextSpecified;
                this.OutputXHTMLSpecified = value.OutputXHTMLSpecified;
                this.MenuEntryTagSpecified = value.MenuEntryTagSpecified;
                this.OutputFormatSpecified = value.OutputFormatSpecified;
                this.DefaultSelectedFlagSpecified = value.DefaultSelectedFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PredefinedContentType PredefinedContent {
            get {
                return this.predefinedContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PredefinedContentType))
                            || false)) {
                    this.predefinedContentField = new PredefinedContentType();
                    this.predefinedContentFieldSpecified = false;
                }
                else {
                    this.predefinedContentField = value;
                    this.predefinedContentFieldSpecified = this.PredefinedContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OutputText", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputTextType[] OutputText {
            get {
                return this.outputTextField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(OutputTextType[]))
                            || false)) {
                    this.outputTextField = new OutputTextType[0];
                    this.outputTextFieldSpecified = false;
                }
                else {
                    this.outputTextField = value;
                    this.outputTextFieldSpecified = (this.OutputTextLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] OutputXHTML {
            get {
                return this.outputXHTMLField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.outputXHTMLField = new byte[0];
                    this.outputXHTMLFieldSpecified = false;
                }
                else {
                    this.outputXHTMLField = value;
                    this.outputXHTMLFieldSpecified = (this.OutputXHTMLLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Selectable")]
        public string MenuEntryTag {
            get {
                return this.menuEntryTagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.MenuEntryTagDefaultValue)
                            || (value == default(string)))) {
                    this.menuEntryTagField = this.MenuEntryTagDefaultValue;
                    this.menuEntryTagFieldSpecified = false;
                }
                else {
                    this.menuEntryTagField = value;
                    this.menuEntryTagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OutputFormat {
            get {
                return this.outputFormatField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.outputFormatField = default(string);
                    this.outputFormatFieldSpecified = false;
                }
                else {
                    this.outputFormatField = value;
                    this.outputFormatFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DefaultSelectedFlag {
            get {
                return this.defaultSelectedFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.DefaultSelectedFlagDefaultValue)
                            || false)) {
                    this.defaultSelectedFlagField = this.DefaultSelectedFlagDefaultValue;
                    this.defaultSelectedFlagFieldSpecified = false;
                }
                else {
                    this.defaultSelectedFlagField = value;
                    this.defaultSelectedFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PredefinedContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.predefinedContentFieldSpecified || this.PredefinedContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.predefinedContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputTextSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputTextFieldSpecified
                            || (this.OutputTextLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputTextFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputXHTMLSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputXHTMLFieldSpecified
                            || (this.OutputXHTMLLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputXHTMLFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string MenuEntryTagDefaultValue {
            get {
                return this.menuEntryTagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MenuEntryTagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.menuEntryTagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.menuEntryTagFieldSpecified = value;
                if ((this.menuEntryTagFieldSpecified
                            && (this.menuEntryTagField == default(string)))) {
                    this.menuEntryTagField = this.menuEntryTagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputFormatSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputFormatFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputFormatFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DefaultSelectedFlagDefaultValue {
            get {
                return this.defaultSelectedFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DefaultSelectedFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.defaultSelectedFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.defaultSelectedFlagFieldSpecified = value;
                if ((this.defaultSelectedFlagFieldSpecified
                            && (this.defaultSelectedFlagField == default(bool)))) {
                    this.defaultSelectedFlagField = this.defaultSelectedFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.PredefinedContent != default(PredefinedContentType))
                            && this.PredefinedContentSpecified))
                            || (this.OutputTextLength() != 0))
                            || (this.OutputXHTMLLength() != 0))
                            || ((this.MenuEntryTag != default(string))
                            && this.MenuEntryTagSpecified))
                            || ((this.OutputFormat != default(string))
                            && this.OutputFormatSpecified))
                            || ((this.DefaultSelectedFlag != default(bool))
                            && this.DefaultSelectedFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string MenuEntryTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "MenuEntryType";
                // END ADDED BY XSD
            }
        }
        public int OutputTextLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputTextField == default(OutputTextType[]))) {
                return 0;
            }
            else {
                return this.outputTextField.Length;
            }
            // END ADDED BY XSD
        }
        public OutputTextType OutputTextGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return default(OutputTextType);
                }
                else {
                    if ((0 > index)) {
                        return default(OutputTextType);
                    }
                    else {
                        if ((this.outputTextField.Length <= index)) {
                            return default(OutputTextType);
                        }
                        else {
                            return this.outputTextField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(OutputTextType);
            }
            // END ADDED BY XSD
        }
        public bool OutputTextSetItem(int index, OutputTextType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputTextField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputTextField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputTextAddItem(OutputTextType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return false;
                }
                else {
                    OutputTextType[] array = new OutputTextType[(this.outputTextField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputTextField.Length); i = (i + 1)) {
                        array[i] = outputTextField[i];
                    }
                    array[i] = value;
                    this.OutputText = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputTextRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputTextField.Length <= index)) {
                            return false;
                        }
                        else {
                            OutputTextType[] array = new OutputTextType[(this.outputTextField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputTextField[i];
                            }
                            for (i = (i + 1); (i < this.outputTextField.Length); i = (i + 1)) {
                                array[i] = outputTextField[i];
                            }
                            this.OutputText = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputTextInsertItem(int index, OutputTextType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputTextField == default(OutputTextType[]))) {
                    return -1;
                }
                else {
                    if ((this.outputTextField.Length <= index)) {
                        if ((this.OutputTextAddItem(value) == true)) {
                            return this.OutputTextLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        OutputTextType[] array = new OutputTextType[(this.outputTextField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputTextField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputTextField.Length); j = (j + 1)) {
                            array[k] = outputTextField[j];
                            k = (k + 1);
                        }
                        this.OutputText = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int OutputXHTMLLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputXHTMLField == default(byte[]))) {
                return 0;
            }
            else {
                return this.outputXHTMLField.Length;
            }
            // END ADDED BY XSD
        }
        public byte OutputXHTMLGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.outputXHTMLField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.outputXHTMLField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool OutputXHTMLSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputXHTMLField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputXHTMLField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputXHTMLAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.outputXHTMLField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputXHTMLField.Length); i = (i + 1)) {
                        array[i] = outputXHTMLField[i];
                    }
                    array[i] = value;
                    this.OutputXHTML = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputXHTMLRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputXHTMLField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.outputXHTMLField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputXHTMLField[i];
                            }
                            for (i = (i + 1); (i < this.outputXHTMLField.Length); i = (i + 1)) {
                                array[i] = outputXHTMLField[i];
                            }
                            this.OutputXHTML = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputXHTMLInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputXHTMLField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.outputXHTMLField.Length <= index)) {
                        if ((this.OutputXHTMLAddItem(value) == true)) {
                            return this.OutputXHTMLLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.outputXHTMLField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputXHTMLField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputXHTMLField.Length); j = (j + 1)) {
                            array[k] = outputXHTMLField[j];
                            k = (k + 1);
                        }
                        this.OutputXHTML = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("045ce058-d8d6-4fbe-a8d3-4b5eb16eb8ac")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AlgorithmIdentifier : IAlgorithmIdentifier {
        private ParameterType parameterField = new ParameterType();
        private string algorithmField = default(string);
        private bool parameterFieldSpecified = false;
        private bool algorithmFieldSpecified = false;
        public AlgorithmIdentifier() {
        }
        public AlgorithmIdentifier(AlgorithmIdentifier value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AlgorithmIdentifier))) {
            }
            else {
                this.Parameter = value.Parameter;
                this.Algorithm = value.Algorithm;
                this.ParameterSpecified = value.ParameterSpecified;
                this.AlgorithmSpecified = value.AlgorithmSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterType Parameter {
            get {
                return this.parameterField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ParameterType))
                            || false)) {
                    this.parameterField = new ParameterType();
                    this.parameterFieldSpecified = false;
                }
                else {
                    this.parameterField = value;
                    this.parameterFieldSpecified = this.Parameter.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Algorithm {
            get {
                return this.algorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.algorithmField = default(string);
                    this.algorithmFieldSpecified = false;
                }
                else {
                    this.algorithmField = value;
                    this.algorithmFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ParameterSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.parameterFieldSpecified || this.Parameter.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.parameterFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.algorithmFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.algorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Parameter != default(ParameterType))
                            && this.ParameterSpecified))
                            || ((this.Algorithm != default(string))
                            && this.AlgorithmSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AlgorithmIdentifierClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AlgorithmIdentifier";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("dc8d48e3-5592-4a38-8d52-12c84bb8f60a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ParameterType : IParameterType {
        private byte[] initialisationVectorField = new byte[0];
        private bool initialisationVectorFieldSpecified = false;
        public ParameterType() {
        }
        public ParameterType(ParameterType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ParameterType))) {
            }
            else {
                this.InitialisationVector = value.InitialisationVector;
                this.InitialisationVectorSpecified = value.InitialisationVectorSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] InitialisationVector {
            get {
                return this.initialisationVectorField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.initialisationVectorField = new byte[0];
                    this.initialisationVectorFieldSpecified = false;
                }
                else {
                    this.initialisationVectorField = value;
                    this.initialisationVectorFieldSpecified = (this.InitialisationVectorLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InitialisationVectorSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.initialisationVectorFieldSpecified
                            || (this.InitialisationVectorLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.initialisationVectorFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || (this.InitialisationVectorLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ParameterTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ParameterType";
                // END ADDED BY XSD
            }
        }
        public int InitialisationVectorLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.initialisationVectorField == default(byte[]))) {
                return 0;
            }
            else {
                return this.initialisationVectorField.Length;
            }
            // END ADDED BY XSD
        }
        public byte InitialisationVectorGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.initialisationVectorField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.initialisationVectorField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.initialisationVectorField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool InitialisationVectorSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.initialisationVectorField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.initialisationVectorField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.initialisationVectorField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool InitialisationVectorAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.initialisationVectorField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.initialisationVectorField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.initialisationVectorField.Length); i = (i + 1)) {
                        array[i] = initialisationVectorField[i];
                    }
                    array[i] = value;
                    this.InitialisationVector = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool InitialisationVectorRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.initialisationVectorField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.initialisationVectorField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.initialisationVectorField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = initialisationVectorField[i];
                            }
                            for (i = (i + 1); (i < this.initialisationVectorField.Length); i = (i + 1)) {
                                array[i] = initialisationVectorField[i];
                            }
                            this.InitialisationVector = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int InitialisationVectorInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.initialisationVectorField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.initialisationVectorField.Length <= index)) {
                        if ((this.InitialisationVectorAddItem(value) == true)) {
                            return this.InitialisationVectorLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.initialisationVectorField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = initialisationVectorField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.initialisationVectorField.Length); j = (j + 1)) {
                            array[k] = initialisationVectorField[j];
                            k = (k + 1);
                        }
                        this.InitialisationVector = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("6b15c0d8-a1e6-4c07-867e-de659b76e804")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class KeyTransportType : IKeyTransportType {
        private RecipientIdentifierType recipientIdentifierField = new RecipientIdentifierType();
        private AlgorithmIdentifier keyEncryptionAlgorithmField = new AlgorithmIdentifier();
        private string versionField = default(string);
        private byte[] encryptedKeyField = new byte[0];
        private bool recipientIdentifierFieldSpecified = false;
        private bool keyEncryptionAlgorithmFieldSpecified = false;
        private string versionDefaultValue = "v0";
        private bool versionFieldSpecified = false;
        private bool encryptedKeyFieldSpecified = false;
        public KeyTransportType() {
            this.versionField = this.versionDefaultValue;
        }
        public KeyTransportType(KeyTransportType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(KeyTransportType))) {
            }
            else {
                this.RecipientIdentifier = value.RecipientIdentifier;
                this.KeyEncryptionAlgorithm = value.KeyEncryptionAlgorithm;
                this.Version = value.Version;
                this.EncryptedKey = value.EncryptedKey;
                this.RecipientIdentifierSpecified = value.RecipientIdentifierSpecified;
                this.KeyEncryptionAlgorithmSpecified = value.KeyEncryptionAlgorithmSpecified;
                this.VersionSpecified = value.VersionSpecified;
                this.EncryptedKeySpecified = value.EncryptedKeySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RecipientIdentifierType RecipientIdentifier {
            get {
                return this.recipientIdentifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(RecipientIdentifierType))
                            || false)) {
                    this.recipientIdentifierField = new RecipientIdentifierType();
                    this.recipientIdentifierFieldSpecified = false;
                }
                else {
                    this.recipientIdentifierField = value;
                    this.recipientIdentifierFieldSpecified = this.RecipientIdentifier.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier KeyEncryptionAlgorithm {
            get {
                return this.keyEncryptionAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AlgorithmIdentifier))
                            || false)) {
                    this.keyEncryptionAlgorithmField = new AlgorithmIdentifier();
                    this.keyEncryptionAlgorithmFieldSpecified = false;
                }
                else {
                    this.keyEncryptionAlgorithmField = value;
                    this.keyEncryptionAlgorithmFieldSpecified = this.KeyEncryptionAlgorithm.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("v0")]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.VersionDefaultValue)
                            || (value == default(string)))) {
                    this.versionField = this.VersionDefaultValue;
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] EncryptedKey {
            get {
                return this.encryptedKeyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.encryptedKeyField = new byte[0];
                    this.encryptedKeyFieldSpecified = false;
                }
                else {
                    this.encryptedKeyField = value;
                    this.encryptedKeyFieldSpecified = (this.EncryptedKeyLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RecipientIdentifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.recipientIdentifierFieldSpecified || this.RecipientIdentifier.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.recipientIdentifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool KeyEncryptionAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.keyEncryptionAlgorithmFieldSpecified || this.KeyEncryptionAlgorithm.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.keyEncryptionAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string VersionDefaultValue {
            get {
                return this.versionDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                if ((this.versionFieldSpecified
                            && (this.versionField == default(string)))) {
                    this.versionField = this.versionDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncryptedKeySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encryptedKeyFieldSpecified
                            || (this.EncryptedKeyLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encryptedKeyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.RecipientIdentifier != default(RecipientIdentifierType))
                            && this.RecipientIdentifierSpecified))
                            || ((this.KeyEncryptionAlgorithm != default(AlgorithmIdentifier))
                            && this.KeyEncryptionAlgorithmSpecified))
                            || (this.EncryptedKeyLength() != 0))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string KeyTransportTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "KeyTransportType";
                // END ADDED BY XSD
            }
        }
        public int EncryptedKeyLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.encryptedKeyField == default(byte[]))) {
                return 0;
            }
            else {
                return this.encryptedKeyField.Length;
            }
            // END ADDED BY XSD
        }
        public byte EncryptedKeyGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.encryptedKeyField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.encryptedKeyField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool EncryptedKeySetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.encryptedKeyField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.encryptedKeyField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EncryptedKeyAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.encryptedKeyField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.encryptedKeyField.Length); i = (i + 1)) {
                        array[i] = encryptedKeyField[i];
                    }
                    array[i] = value;
                    this.EncryptedKey = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EncryptedKeyRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.encryptedKeyField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.encryptedKeyField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = encryptedKeyField[i];
                            }
                            for (i = (i + 1); (i < this.encryptedKeyField.Length); i = (i + 1)) {
                                array[i] = encryptedKeyField[i];
                            }
                            this.EncryptedKey = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int EncryptedKeyInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.encryptedKeyField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.encryptedKeyField.Length <= index)) {
                        if ((this.EncryptedKeyAddItem(value) == true)) {
                            return this.EncryptedKeyLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.encryptedKeyField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = encryptedKeyField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.encryptedKeyField.Length); j = (j + 1)) {
                            array[k] = encryptedKeyField[j];
                            k = (k + 1);
                        }
                        this.EncryptedKey = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("c9058727-da50-4f44-b858-8c304468cee4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class RecipientIdentifierType : IRecipientIdentifierType {
        private IssuerAndSerialNumberType issuerAndSerialNumberField = new IssuerAndSerialNumberType();
        private bool issuerAndSerialNumberFieldSpecified = false;
        public RecipientIdentifierType() {
        }
        public RecipientIdentifierType(RecipientIdentifierType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(RecipientIdentifierType))) {
            }
            else {
                this.IssuerAndSerialNumber = value.IssuerAndSerialNumber;
                this.IssuerAndSerialNumberSpecified = value.IssuerAndSerialNumberSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IssuerAndSerialNumberType IssuerAndSerialNumber {
            get {
                return this.issuerAndSerialNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(IssuerAndSerialNumberType))
                            || false)) {
                    this.issuerAndSerialNumberField = new IssuerAndSerialNumberType();
                    this.issuerAndSerialNumberFieldSpecified = false;
                }
                else {
                    this.issuerAndSerialNumberField = value;
                    this.issuerAndSerialNumberFieldSpecified = this.IssuerAndSerialNumber.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IssuerAndSerialNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.issuerAndSerialNumberFieldSpecified || this.IssuerAndSerialNumber.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.issuerAndSerialNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.IssuerAndSerialNumber != default(IssuerAndSerialNumberType))
                            && this.IssuerAndSerialNumberSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string RecipientIdentifierTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "RecipientIdentifierType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("a6c057c3-b9cc-4f3a-94a6-2954f1680efa")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class IssuerAndSerialNumberType : IIssuerAndSerialNumberType {
        private RelativeDistinguishedNameType[] issuerField = new RelativeDistinguishedNameType[0];
        private string serialNumberField = default(string);
        private bool issuerFieldSpecified = false;
        private bool serialNumberFieldSpecified = false;
        public IssuerAndSerialNumberType() {
        }
        public IssuerAndSerialNumberType(IssuerAndSerialNumberType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(IssuerAndSerialNumberType))) {
            }
            else {
                this.Issuer = value.Issuer;
                this.SerialNumber = value.SerialNumber;
                this.IssuerSpecified = value.IssuerSpecified;
                this.SerialNumberSpecified = value.SerialNumberSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("RelativeDistinguishedName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public RelativeDistinguishedNameType[] Issuer {
            get {
                return this.issuerField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(RelativeDistinguishedNameType[]))
                            || false)) {
                    this.issuerField = new RelativeDistinguishedNameType[0];
                    this.issuerFieldSpecified = false;
                }
                else {
                    this.issuerField = value;
                    this.issuerFieldSpecified = (this.IssuerLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.serialNumberField = default(string);
                    this.serialNumberFieldSpecified = false;
                }
                else {
                    this.serialNumberField = value;
                    this.serialNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IssuerSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.issuerFieldSpecified
                            || (this.IssuerLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.issuerFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SerialNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.serialNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.serialNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || (this.IssuerLength() != 0))
                            || ((this.SerialNumber != default(string))
                            && this.SerialNumberSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string IssuerAndSerialNumberTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "IssuerAndSerialNumberType";
                // END ADDED BY XSD
            }
        }
        public int IssuerLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.issuerField == default(RelativeDistinguishedNameType[]))) {
                return 0;
            }
            else {
                return this.issuerField.Length;
            }
            // END ADDED BY XSD
        }
        public RelativeDistinguishedNameType IssuerGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.issuerField == default(RelativeDistinguishedNameType[]))) {
                    return default(RelativeDistinguishedNameType);
                }
                else {
                    if ((0 > index)) {
                        return default(RelativeDistinguishedNameType);
                    }
                    else {
                        if ((this.issuerField.Length <= index)) {
                            return default(RelativeDistinguishedNameType);
                        }
                        else {
                            return this.issuerField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(RelativeDistinguishedNameType);
            }
            // END ADDED BY XSD
        }
        public bool IssuerSetItem(int index, RelativeDistinguishedNameType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.issuerField == default(RelativeDistinguishedNameType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.issuerField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.issuerField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool IssuerAddItem(RelativeDistinguishedNameType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.issuerField == default(RelativeDistinguishedNameType[]))) {
                    return false;
                }
                else {
                    RelativeDistinguishedNameType[] array = new RelativeDistinguishedNameType[(this.issuerField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.issuerField.Length); i = (i + 1)) {
                        array[i] = issuerField[i];
                    }
                    array[i] = value;
                    this.Issuer = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool IssuerRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.issuerField == default(RelativeDistinguishedNameType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.issuerField.Length <= index)) {
                            return false;
                        }
                        else {
                            RelativeDistinguishedNameType[] array = new RelativeDistinguishedNameType[(this.issuerField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = issuerField[i];
                            }
                            for (i = (i + 1); (i < this.issuerField.Length); i = (i + 1)) {
                                array[i] = issuerField[i];
                            }
                            this.Issuer = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int IssuerInsertItem(int index, RelativeDistinguishedNameType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.issuerField == default(RelativeDistinguishedNameType[]))) {
                    return -1;
                }
                else {
                    if ((this.issuerField.Length <= index)) {
                        if ((this.IssuerAddItem(value) == true)) {
                            return this.IssuerLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        RelativeDistinguishedNameType[] array = new RelativeDistinguishedNameType[(this.issuerField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = issuerField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.issuerField.Length); j = (j + 1)) {
                            array[k] = issuerField[j];
                            k = (k + 1);
                        }
                        this.Issuer = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("7e4004e2-a546-4d3b-b7da-f445d0403dd7")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class RelativeDistinguishedNameType : IRelativeDistinguishedNameType {
        private string attributeTypeField = default(string);
        private string attributeValueField = default(string);
        private bool attributeTypeFieldSpecified = false;
        private bool attributeValueFieldSpecified = false;
        public RelativeDistinguishedNameType() {
        }
        public RelativeDistinguishedNameType(RelativeDistinguishedNameType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(RelativeDistinguishedNameType))) {
            }
            else {
                this.AttributeType = value.AttributeType;
                this.AttributeValue = value.AttributeValue;
                this.AttributeTypeSpecified = value.AttributeTypeSpecified;
                this.AttributeValueSpecified = value.AttributeValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AttributeType {
            get {
                return this.attributeTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.attributeTypeField = default(string);
                    this.attributeTypeFieldSpecified = false;
                }
                else {
                    this.attributeTypeField = value;
                    this.attributeTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AttributeValue {
            get {
                return this.attributeValueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.attributeValueField = default(string);
                    this.attributeValueFieldSpecified = false;
                }
                else {
                    this.attributeValueField = value;
                    this.attributeValueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AttributeTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.attributeTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.attributeTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AttributeValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.attributeValueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.attributeValueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.AttributeType != default(string))
                            && this.AttributeTypeSpecified))
                            || ((this.AttributeValue != default(string))
                            && this.AttributeValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string RelativeDistinguishedNameTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "RelativeDistinguishedNameType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("1338e704-9182-4e39-9a50-b7866c3086c4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class EncapsulatedContentType : IEncapsulatedContentType {
        private byte[] contentField = new byte[0];
        private string contentTypeField = default(string);
        private bool contentFieldSpecified = false;
        private bool contentTypeFieldSpecified = false;
        public EncapsulatedContentType() {
        }
        public EncapsulatedContentType(EncapsulatedContentType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(EncapsulatedContentType))) {
            }
            else {
                this.Content = value.Content;
                this.ContentType = value.ContentType;
                this.ContentSpecified = value.ContentSpecified;
                this.ContentTypeSpecified = value.ContentTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Content {
            get {
                return this.contentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.contentField = new byte[0];
                    this.contentFieldSpecified = false;
                }
                else {
                    this.contentField = value;
                    this.contentFieldSpecified = (this.ContentLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.contentTypeField = default(string);
                    this.contentTypeFieldSpecified = false;
                }
                else {
                    this.contentTypeField = value;
                    this.contentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.contentFieldSpecified
                            || (this.ContentLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.contentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ContentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.contentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.contentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || (this.ContentLength() != 0))
                            || ((this.ContentType != default(string))
                            && this.ContentTypeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string EncapsulatedContentTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "EncapsulatedContentType";
                // END ADDED BY XSD
            }
        }
        public int ContentLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.contentField == default(byte[]))) {
                return 0;
            }
            else {
                return this.contentField.Length;
            }
            // END ADDED BY XSD
        }
        public byte ContentGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.contentField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.contentField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.contentField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool ContentSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.contentField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.contentField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.contentField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ContentAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.contentField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.contentField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.contentField.Length); i = (i + 1)) {
                        array[i] = contentField[i];
                    }
                    array[i] = value;
                    this.Content = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ContentRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.contentField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.contentField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.contentField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = contentField[i];
                            }
                            for (i = (i + 1); (i < this.contentField.Length); i = (i + 1)) {
                                array[i] = contentField[i];
                            }
                            this.Content = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ContentInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.contentField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.contentField.Length <= index)) {
                        if ((this.ContentAddItem(value) == true)) {
                            return this.ContentLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.contentField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = contentField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.contentField.Length); j = (j + 1)) {
                            array[k] = contentField[j];
                            k = (k + 1);
                        }
                        this.Content = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ContentTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-data")]
        iddata,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-signedData")]
        idsignedData,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-envelopedData")]
        idenvelopedData,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-digestedData")]
        iddigestedData,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-encryptedData")]
        idencryptedData,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("id-ct-authData")]
        idctauthData,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("d59d39d8-ef50-41ce-9c49-2543061ec9eb")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class DigestedDataType : IDigestedDataType {
        private AlgorithmIdentifier digestAlgorithmField = new AlgorithmIdentifier();
        private EncapsulatedContentType encapsulatedContentField = new EncapsulatedContentType();
        private byte[] digestField = new byte[0];
        private string versionField = default(string);
        private bool digestAlgorithmFieldSpecified = false;
        private bool encapsulatedContentFieldSpecified = false;
        private bool digestFieldSpecified = false;
        private bool versionFieldSpecified = false;
        public DigestedDataType() {
        }
        public DigestedDataType(DigestedDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(DigestedDataType))) {
            }
            else {
                this.DigestAlgorithm = value.DigestAlgorithm;
                this.EncapsulatedContent = value.EncapsulatedContent;
                this.Digest = value.Digest;
                this.Version = value.Version;
                this.DigestAlgorithmSpecified = value.DigestAlgorithmSpecified;
                this.EncapsulatedContentSpecified = value.EncapsulatedContentSpecified;
                this.DigestSpecified = value.DigestSpecified;
                this.VersionSpecified = value.VersionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier DigestAlgorithm {
            get {
                return this.digestAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AlgorithmIdentifier))
                            || false)) {
                    this.digestAlgorithmField = new AlgorithmIdentifier();
                    this.digestAlgorithmFieldSpecified = false;
                }
                else {
                    this.digestAlgorithmField = value;
                    this.digestAlgorithmFieldSpecified = this.DigestAlgorithm.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EncapsulatedContentType EncapsulatedContent {
            get {
                return this.encapsulatedContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(EncapsulatedContentType))
                            || false)) {
                    this.encapsulatedContentField = new EncapsulatedContentType();
                    this.encapsulatedContentFieldSpecified = false;
                }
                else {
                    this.encapsulatedContentField = value;
                    this.encapsulatedContentFieldSpecified = this.EncapsulatedContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Digest {
            get {
                return this.digestField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.digestField = new byte[0];
                    this.digestFieldSpecified = false;
                }
                else {
                    this.digestField = value;
                    this.digestFieldSpecified = (this.DigestLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.versionField = default(string);
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DigestAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.digestAlgorithmFieldSpecified || this.DigestAlgorithm.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.digestAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncapsulatedContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encapsulatedContentFieldSpecified || this.EncapsulatedContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encapsulatedContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DigestSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.digestFieldSpecified
                            || (this.DigestLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.digestFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.DigestAlgorithm != default(AlgorithmIdentifier))
                            && this.DigestAlgorithmSpecified))
                            || ((this.EncapsulatedContent != default(EncapsulatedContentType))
                            && this.EncapsulatedContentSpecified))
                            || (this.DigestLength() != 0))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string DigestedDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "DigestedDataType";
                // END ADDED BY XSD
            }
        }
        public int DigestLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.digestField == default(byte[]))) {
                return 0;
            }
            else {
                return this.digestField.Length;
            }
            // END ADDED BY XSD
        }
        public byte DigestGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.digestField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.digestField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.digestField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool DigestSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.digestField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.digestField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.digestField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DigestAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.digestField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.digestField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.digestField.Length); i = (i + 1)) {
                        array[i] = digestField[i];
                    }
                    array[i] = value;
                    this.Digest = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DigestRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.digestField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.digestField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.digestField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = digestField[i];
                            }
                            for (i = (i + 1); (i < this.digestField.Length); i = (i + 1)) {
                                array[i] = digestField[i];
                            }
                            this.Digest = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int DigestInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.digestField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.digestField.Length <= index)) {
                        if ((this.DigestAddItem(value) == true)) {
                            return this.DigestLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.digestField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = digestField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.digestField.Length); j = (j + 1)) {
                            array[k] = digestField[j];
                            k = (k + 1);
                        }
                        this.Digest = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("c6486c1d-1b79-4b80-a3b6-490644774349")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class EncryptedContentType : IEncryptedContentType {
        private AlgorithmIdentifier contentEncryptionAlgorithmField = new AlgorithmIdentifier();
        private byte[] encryptedDataField = new byte[0];
        private string contentTypeField = default(string);
        private bool contentEncryptionAlgorithmFieldSpecified = false;
        private bool encryptedDataFieldSpecified = false;
        private bool contentTypeFieldSpecified = false;
        public EncryptedContentType() {
        }
        public EncryptedContentType(EncryptedContentType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(EncryptedContentType))) {
            }
            else {
                this.ContentEncryptionAlgorithm = value.ContentEncryptionAlgorithm;
                this.EncryptedData = value.EncryptedData;
                this.ContentType = value.ContentType;
                this.ContentEncryptionAlgorithmSpecified = value.ContentEncryptionAlgorithmSpecified;
                this.EncryptedDataSpecified = value.EncryptedDataSpecified;
                this.ContentTypeSpecified = value.ContentTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier ContentEncryptionAlgorithm {
            get {
                return this.contentEncryptionAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AlgorithmIdentifier))
                            || false)) {
                    this.contentEncryptionAlgorithmField = new AlgorithmIdentifier();
                    this.contentEncryptionAlgorithmFieldSpecified = false;
                }
                else {
                    this.contentEncryptionAlgorithmField = value;
                    this.contentEncryptionAlgorithmFieldSpecified = this.ContentEncryptionAlgorithm.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] EncryptedData {
            get {
                return this.encryptedDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.encryptedDataField = new byte[0];
                    this.encryptedDataFieldSpecified = false;
                }
                else {
                    this.encryptedDataField = value;
                    this.encryptedDataFieldSpecified = (this.EncryptedDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.contentTypeField = default(string);
                    this.contentTypeFieldSpecified = false;
                }
                else {
                    this.contentTypeField = value;
                    this.contentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ContentEncryptionAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.contentEncryptionAlgorithmFieldSpecified || this.ContentEncryptionAlgorithm.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.contentEncryptionAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncryptedDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encryptedDataFieldSpecified
                            || (this.EncryptedDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encryptedDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ContentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.contentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.contentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.ContentEncryptionAlgorithm != default(AlgorithmIdentifier))
                            && this.ContentEncryptionAlgorithmSpecified))
                            || (this.EncryptedDataLength() != 0))
                            || ((this.ContentType != default(string))
                            && this.ContentTypeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string EncryptedContentTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "EncryptedContentType";
                // END ADDED BY XSD
            }
        }
        public int EncryptedDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.encryptedDataField == default(byte[]))) {
                return 0;
            }
            else {
                return this.encryptedDataField.Length;
            }
            // END ADDED BY XSD
        }
        public byte EncryptedDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.encryptedDataField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.encryptedDataField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.encryptedDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool EncryptedDataSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.encryptedDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.encryptedDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.encryptedDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EncryptedDataAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.encryptedDataField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.encryptedDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.encryptedDataField.Length); i = (i + 1)) {
                        array[i] = encryptedDataField[i];
                    }
                    array[i] = value;
                    this.EncryptedData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EncryptedDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.encryptedDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.encryptedDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.encryptedDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = encryptedDataField[i];
                            }
                            for (i = (i + 1); (i < this.encryptedDataField.Length); i = (i + 1)) {
                                array[i] = encryptedDataField[i];
                            }
                            this.EncryptedData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int EncryptedDataInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.encryptedDataField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.encryptedDataField.Length <= index)) {
                        if ((this.EncryptedDataAddItem(value) == true)) {
                            return this.EncryptedDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.encryptedDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = encryptedDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.encryptedDataField.Length); j = (j + 1)) {
                            array[k] = encryptedDataField[j];
                            k = (k + 1);
                        }
                        this.EncryptedData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("d699c37c-eb2b-493c-b8ce-81ddf01291f1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class EnvelopedDataType : IEnvelopedDataType {
        private object[] itemsField = new object[0];
        private EncryptedContentType encryptedContentField = new EncryptedContentType();
        private string versionField = default(string);
        private bool itemsFieldSpecified = false;
        private bool encryptedContentFieldSpecified = false;
        private string versionDefaultValue = "v0";
        private bool versionFieldSpecified = false;
        public EnvelopedDataType() {
            this.versionField = this.versionDefaultValue;
        }
        public EnvelopedDataType(EnvelopedDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(EnvelopedDataType))) {
            }
            else {
                this.Items = value.Items;
                this.EncryptedContent = value.EncryptedContent;
                this.Version = value.Version;
                this.ItemsSpecified = value.ItemsSpecified;
                this.EncryptedContentSpecified = value.EncryptedContentSpecified;
                this.VersionSpecified = value.VersionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("KEK", typeof(KEKType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("KeyTransport", typeof(KeyTransportType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(object[]))
                            || false)) {
                    this.itemsField = new object[0];
                    this.itemsFieldSpecified = false;
                }
                else {
                    this.itemsField = value;
                    this.itemsFieldSpecified = (this.ItemsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EncryptedContentType EncryptedContent {
            get {
                return this.encryptedContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(EncryptedContentType))
                            || false)) {
                    this.encryptedContentField = new EncryptedContentType();
                    this.encryptedContentFieldSpecified = false;
                }
                else {
                    this.encryptedContentField = value;
                    this.encryptedContentFieldSpecified = this.EncryptedContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("v0")]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.VersionDefaultValue)
                            || (value == default(string)))) {
                    this.versionField = this.VersionDefaultValue;
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemsFieldSpecified
                            || (this.ItemsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncryptedContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encryptedContentFieldSpecified || this.EncryptedContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encryptedContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string VersionDefaultValue {
            get {
                return this.versionDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                if ((this.versionFieldSpecified
                            && (this.versionField == default(string)))) {
                    this.versionField = this.versionDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.EncryptedContent != default(EncryptedContentType))
                            && this.EncryptedContentSpecified))
                            || (this.ItemsLength() != 0))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string EnvelopedDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "EnvelopedDataType";
                // END ADDED BY XSD
            }
        }
        public int ItemsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.itemsField == default(object[]))) {
                return 0;
            }
            else {
                return this.itemsField.Length;
            }
            // END ADDED BY XSD
        }
        public object ItemsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return default(object);
                }
                else {
                    if ((0 > index)) {
                        return default(object);
                    }
                    else {
                        if ((this.itemsField.Length <= index)) {
                            return default(object);
                        }
                        else {
                            return this.itemsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(object);
            }
            // END ADDED BY XSD
        }
        public bool ItemsSetItem(int index, object value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.itemsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.itemsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ItemsAddItem(object value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return false;
                }
                else {
                    object[] array = new object[(this.itemsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.itemsField.Length); i = (i + 1)) {
                        array[i] = itemsField[i];
                    }
                    array[i] = value;
                    this.Items = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ItemsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.itemsField.Length <= index)) {
                            return false;
                        }
                        else {
                            object[] array = new object[(this.itemsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = itemsField[i];
                            }
                            for (i = (i + 1); (i < this.itemsField.Length); i = (i + 1)) {
                                array[i] = itemsField[i];
                            }
                            this.Items = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ItemsInsertItem(int index, object value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.itemsField == default(object[]))) {
                    return -1;
                }
                else {
                    if ((this.itemsField.Length <= index)) {
                        if ((this.ItemsAddItem(value) == true)) {
                            return this.ItemsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        object[] array = new object[(this.itemsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = itemsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.itemsField.Length); j = (j + 1)) {
                            array[k] = itemsField[j];
                            k = (k + 1);
                        }
                        this.Items = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("43bd9ea1-9fde-46fb-baa3-7e75b4d923bc")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class IssuerType : IIssuerType {
        private RelativeDistinguishedNameType[] relativeDistinguishedNameField = new RelativeDistinguishedNameType[0];
        private bool relativeDistinguishedNameFieldSpecified = false;
        public IssuerType() {
        }
        public IssuerType(IssuerType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(IssuerType))) {
            }
            else {
                this.RelativeDistinguishedName = value.RelativeDistinguishedName;
                this.RelativeDistinguishedNameSpecified = value.RelativeDistinguishedNameSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelativeDistinguishedName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RelativeDistinguishedNameType[] RelativeDistinguishedName {
            get {
                return this.relativeDistinguishedNameField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(RelativeDistinguishedNameType[]))
                            || false)) {
                    this.relativeDistinguishedNameField = new RelativeDistinguishedNameType[0];
                    this.relativeDistinguishedNameFieldSpecified = false;
                }
                else {
                    this.relativeDistinguishedNameField = value;
                    this.relativeDistinguishedNameFieldSpecified = (this.RelativeDistinguishedNameLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RelativeDistinguishedNameSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.relativeDistinguishedNameFieldSpecified
                            || (this.RelativeDistinguishedNameLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.relativeDistinguishedNameFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || (this.RelativeDistinguishedNameLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string IssuerTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "IssuerType";
                // END ADDED BY XSD
            }
        }
        public int RelativeDistinguishedNameLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.relativeDistinguishedNameField == default(RelativeDistinguishedNameType[]))) {
                return 0;
            }
            else {
                return this.relativeDistinguishedNameField.Length;
            }
            // END ADDED BY XSD
        }
        public RelativeDistinguishedNameType RelativeDistinguishedNameGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.relativeDistinguishedNameField == default(RelativeDistinguishedNameType[]))) {
                    return default(RelativeDistinguishedNameType);
                }
                else {
                    if ((0 > index)) {
                        return default(RelativeDistinguishedNameType);
                    }
                    else {
                        if ((this.relativeDistinguishedNameField.Length <= index)) {
                            return default(RelativeDistinguishedNameType);
                        }
                        else {
                            return this.relativeDistinguishedNameField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(RelativeDistinguishedNameType);
            }
            // END ADDED BY XSD
        }
        public bool RelativeDistinguishedNameSetItem(int index, RelativeDistinguishedNameType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.relativeDistinguishedNameField == default(RelativeDistinguishedNameType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.relativeDistinguishedNameField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.relativeDistinguishedNameField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool RelativeDistinguishedNameAddItem(RelativeDistinguishedNameType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.relativeDistinguishedNameField == default(RelativeDistinguishedNameType[]))) {
                    return false;
                }
                else {
                    RelativeDistinguishedNameType[] array = new RelativeDistinguishedNameType[(this.relativeDistinguishedNameField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.relativeDistinguishedNameField.Length); i = (i + 1)) {
                        array[i] = relativeDistinguishedNameField[i];
                    }
                    array[i] = value;
                    this.RelativeDistinguishedName = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool RelativeDistinguishedNameRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.relativeDistinguishedNameField == default(RelativeDistinguishedNameType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.relativeDistinguishedNameField.Length <= index)) {
                            return false;
                        }
                        else {
                            RelativeDistinguishedNameType[] array = new RelativeDistinguishedNameType[(this.relativeDistinguishedNameField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = relativeDistinguishedNameField[i];
                            }
                            for (i = (i + 1); (i < this.relativeDistinguishedNameField.Length); i = (i + 1)) {
                                array[i] = relativeDistinguishedNameField[i];
                            }
                            this.RelativeDistinguishedName = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int RelativeDistinguishedNameInsertItem(int index, RelativeDistinguishedNameType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.relativeDistinguishedNameField == default(RelativeDistinguishedNameType[]))) {
                    return -1;
                }
                else {
                    if ((this.relativeDistinguishedNameField.Length <= index)) {
                        if ((this.RelativeDistinguishedNameAddItem(value) == true)) {
                            return this.RelativeDistinguishedNameLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        RelativeDistinguishedNameType[] array = new RelativeDistinguishedNameType[(this.relativeDistinguishedNameField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = relativeDistinguishedNameField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.relativeDistinguishedNameField.Length); j = (j + 1)) {
                            array[k] = relativeDistinguishedNameField[j];
                            k = (k + 1);
                        }
                        this.RelativeDistinguishedName = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("7bd1f0a1-175a-426e-8b19-79bdcfc9a1f9")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class NamedKeyEncryptedDataType : INamedKeyEncryptedDataType {
        private string keyNameField = default(string);
        private EncryptedContentType encryptedContentField = new EncryptedContentType();
        private string versionField = default(string);
        private bool keyNameFieldSpecified = false;
        private bool encryptedContentFieldSpecified = false;
        private string versionDefaultValue = "v0";
        private bool versionFieldSpecified = false;
        public NamedKeyEncryptedDataType() {
            this.versionField = this.versionDefaultValue;
        }
        public NamedKeyEncryptedDataType(NamedKeyEncryptedDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(NamedKeyEncryptedDataType))) {
            }
            else {
                this.KeyName = value.KeyName;
                this.EncryptedContent = value.EncryptedContent;
                this.Version = value.Version;
                this.KeyNameSpecified = value.KeyNameSpecified;
                this.EncryptedContentSpecified = value.EncryptedContentSpecified;
                this.VersionSpecified = value.VersionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyName {
            get {
                return this.keyNameField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.keyNameField = default(string);
                    this.keyNameFieldSpecified = false;
                }
                else {
                    this.keyNameField = value;
                    this.keyNameFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EncryptedContentType EncryptedContent {
            get {
                return this.encryptedContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(EncryptedContentType))
                            || false)) {
                    this.encryptedContentField = new EncryptedContentType();
                    this.encryptedContentFieldSpecified = false;
                }
                else {
                    this.encryptedContentField = value;
                    this.encryptedContentFieldSpecified = this.EncryptedContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("v0")]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.VersionDefaultValue)
                            || (value == default(string)))) {
                    this.versionField = this.VersionDefaultValue;
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool KeyNameSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.keyNameFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.keyNameFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncryptedContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encryptedContentFieldSpecified || this.EncryptedContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encryptedContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string VersionDefaultValue {
            get {
                return this.versionDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                if ((this.versionFieldSpecified
                            && (this.versionField == default(string)))) {
                    this.versionField = this.versionDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.EncryptedContent != default(EncryptedContentType))
                            && this.EncryptedContentSpecified))
                            || ((this.KeyName != default(string))
                            && this.KeyNameSpecified))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string NamedKeyEncryptedDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "NamedKeyEncryptedDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("20fd3d79-cc44-4199-a7b2-7d26d7ecbc83")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SignedDataType : ISignedDataType {
        private AlgorithmIdentifier[] digestAlgorithmField = new AlgorithmIdentifier[0];
        private EncapsulatedContentType encapsulatedContentField = new EncapsulatedContentType();
        private byte[] certificateField = new byte[0];
        private SignerType[] signerField = new SignerType[0];
        private string versionField = default(string);
        private bool digestAlgorithmFieldSpecified = false;
        private bool encapsulatedContentFieldSpecified = false;
        private bool certificateFieldSpecified = false;
        private bool signerFieldSpecified = false;
        private string versionDefaultValue = "v1";
        private bool versionFieldSpecified = false;
        public SignedDataType() {
            this.versionField = this.versionDefaultValue;
        }
        public SignedDataType(SignedDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SignedDataType))) {
            }
            else {
                this.DigestAlgorithm = value.DigestAlgorithm;
                this.EncapsulatedContent = value.EncapsulatedContent;
                this.Certificate = value.Certificate;
                this.Signer = value.Signer;
                this.Version = value.Version;
                this.DigestAlgorithmSpecified = value.DigestAlgorithmSpecified;
                this.EncapsulatedContentSpecified = value.EncapsulatedContentSpecified;
                this.CertificateSpecified = value.CertificateSpecified;
                this.SignerSpecified = value.SignerSpecified;
                this.VersionSpecified = value.VersionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DigestAlgorithm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier[] DigestAlgorithm {
            get {
                return this.digestAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(AlgorithmIdentifier[]))
                            || false)) {
                    this.digestAlgorithmField = new AlgorithmIdentifier[0];
                    this.digestAlgorithmFieldSpecified = false;
                }
                else {
                    this.digestAlgorithmField = value;
                    this.digestAlgorithmFieldSpecified = (this.DigestAlgorithmLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EncapsulatedContentType EncapsulatedContent {
            get {
                return this.encapsulatedContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(EncapsulatedContentType))
                            || false)) {
                    this.encapsulatedContentField = new EncapsulatedContentType();
                    this.encapsulatedContentFieldSpecified = false;
                }
                else {
                    this.encapsulatedContentField = value;
                    this.encapsulatedContentFieldSpecified = this.EncapsulatedContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Certificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Certificate {
            get {
                return this.certificateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.certificateField = new byte[0];
                    this.certificateFieldSpecified = false;
                }
                else {
                    this.certificateField = value;
                    this.certificateFieldSpecified = (this.CertificateLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Signer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SignerType[] Signer {
            get {
                return this.signerField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SignerType[]))
                            || false)) {
                    this.signerField = new SignerType[0];
                    this.signerFieldSpecified = false;
                }
                else {
                    this.signerField = value;
                    this.signerFieldSpecified = (this.SignerLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("v1")]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.VersionDefaultValue)
                            || (value == default(string)))) {
                    this.versionField = this.VersionDefaultValue;
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DigestAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.digestAlgorithmFieldSpecified
                            || (this.DigestAlgorithmLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.digestAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncapsulatedContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encapsulatedContentFieldSpecified || this.EncapsulatedContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encapsulatedContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CertificateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.certificateFieldSpecified
                            || (this.CertificateLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.certificateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SignerSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.signerFieldSpecified
                            || (this.SignerLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.signerFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string VersionDefaultValue {
            get {
                return this.versionDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                if ((this.versionFieldSpecified
                            && (this.versionField == default(string)))) {
                    this.versionField = this.versionDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.EncapsulatedContent != default(EncapsulatedContentType))
                            && this.EncapsulatedContentSpecified))
                            || (this.DigestAlgorithmLength() != 0))
                            || (this.CertificateLength() != 0))
                            || (this.SignerLength() != 0))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SignedDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SignedDataType";
                // END ADDED BY XSD
            }
        }
        public int DigestAlgorithmLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.digestAlgorithmField == default(AlgorithmIdentifier[]))) {
                return 0;
            }
            else {
                return this.digestAlgorithmField.Length;
            }
            // END ADDED BY XSD
        }
        public AlgorithmIdentifier DigestAlgorithmGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.digestAlgorithmField == default(AlgorithmIdentifier[]))) {
                    return default(AlgorithmIdentifier);
                }
                else {
                    if ((0 > index)) {
                        return default(AlgorithmIdentifier);
                    }
                    else {
                        if ((this.digestAlgorithmField.Length <= index)) {
                            return default(AlgorithmIdentifier);
                        }
                        else {
                            return this.digestAlgorithmField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(AlgorithmIdentifier);
            }
            // END ADDED BY XSD
        }
        public bool DigestAlgorithmSetItem(int index, AlgorithmIdentifier value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.digestAlgorithmField == default(AlgorithmIdentifier[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.digestAlgorithmField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.digestAlgorithmField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DigestAlgorithmAddItem(AlgorithmIdentifier value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.digestAlgorithmField == default(AlgorithmIdentifier[]))) {
                    return false;
                }
                else {
                    AlgorithmIdentifier[] array = new AlgorithmIdentifier[(this.digestAlgorithmField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.digestAlgorithmField.Length); i = (i + 1)) {
                        array[i] = digestAlgorithmField[i];
                    }
                    array[i] = value;
                    this.DigestAlgorithm = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DigestAlgorithmRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.digestAlgorithmField == default(AlgorithmIdentifier[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.digestAlgorithmField.Length <= index)) {
                            return false;
                        }
                        else {
                            AlgorithmIdentifier[] array = new AlgorithmIdentifier[(this.digestAlgorithmField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = digestAlgorithmField[i];
                            }
                            for (i = (i + 1); (i < this.digestAlgorithmField.Length); i = (i + 1)) {
                                array[i] = digestAlgorithmField[i];
                            }
                            this.DigestAlgorithm = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int DigestAlgorithmInsertItem(int index, AlgorithmIdentifier value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.digestAlgorithmField == default(AlgorithmIdentifier[]))) {
                    return -1;
                }
                else {
                    if ((this.digestAlgorithmField.Length <= index)) {
                        if ((this.DigestAlgorithmAddItem(value) == true)) {
                            return this.DigestAlgorithmLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        AlgorithmIdentifier[] array = new AlgorithmIdentifier[(this.digestAlgorithmField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = digestAlgorithmField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.digestAlgorithmField.Length); j = (j + 1)) {
                            array[k] = digestAlgorithmField[j];
                            k = (k + 1);
                        }
                        this.DigestAlgorithm = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int CertificateLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.certificateField == default(byte[]))) {
                return 0;
            }
            else {
                return this.certificateField.Length;
            }
            // END ADDED BY XSD
        }
        public byte CertificateGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.certificateField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.certificateField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.certificateField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool CertificateSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.certificateField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.certificateField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.certificateField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CertificateAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.certificateField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.certificateField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.certificateField.Length); i = (i + 1)) {
                        array[i] = certificateField[i];
                    }
                    array[i] = value;
                    this.Certificate = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CertificateRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.certificateField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.certificateField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.certificateField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = certificateField[i];
                            }
                            for (i = (i + 1); (i < this.certificateField.Length); i = (i + 1)) {
                                array[i] = certificateField[i];
                            }
                            this.Certificate = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CertificateInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.certificateField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.certificateField.Length <= index)) {
                        if ((this.CertificateAddItem(value) == true)) {
                            return this.CertificateLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.certificateField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = certificateField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.certificateField.Length); j = (j + 1)) {
                            array[k] = certificateField[j];
                            k = (k + 1);
                        }
                        this.Certificate = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int SignerLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.signerField == default(SignerType[]))) {
                return 0;
            }
            else {
                return this.signerField.Length;
            }
            // END ADDED BY XSD
        }
        public SignerType SignerGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.signerField == default(SignerType[]))) {
                    return default(SignerType);
                }
                else {
                    if ((0 > index)) {
                        return default(SignerType);
                    }
                    else {
                        if ((this.signerField.Length <= index)) {
                            return default(SignerType);
                        }
                        else {
                            return this.signerField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SignerType);
            }
            // END ADDED BY XSD
        }
        public bool SignerSetItem(int index, SignerType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.signerField == default(SignerType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.signerField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.signerField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SignerAddItem(SignerType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.signerField == default(SignerType[]))) {
                    return false;
                }
                else {
                    SignerType[] array = new SignerType[(this.signerField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.signerField.Length); i = (i + 1)) {
                        array[i] = signerField[i];
                    }
                    array[i] = value;
                    this.Signer = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SignerRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.signerField == default(SignerType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.signerField.Length <= index)) {
                            return false;
                        }
                        else {
                            SignerType[] array = new SignerType[(this.signerField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = signerField[i];
                            }
                            for (i = (i + 1); (i < this.signerField.Length); i = (i + 1)) {
                                array[i] = signerField[i];
                            }
                            this.Signer = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SignerInsertItem(int index, SignerType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.signerField == default(SignerType[]))) {
                    return -1;
                }
                else {
                    if ((this.signerField.Length <= index)) {
                        if ((this.SignerAddItem(value) == true)) {
                            return this.SignerLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SignerType[] array = new SignerType[(this.signerField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = signerField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.signerField.Length); j = (j + 1)) {
                            array[k] = signerField[j];
                            k = (k + 1);
                        }
                        this.Signer = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e0a3773e-9764-47d4-8b61-a264d410b8e9")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SignerType : ISignerType {
        private SignerIdentifierType signerIdentifierField = new SignerIdentifierType();
        private AlgorithmIdentifier digestAlgorithmField = new AlgorithmIdentifier();
        private AlgorithmIdentifier signatureAlgorithmField = new AlgorithmIdentifier();
        private byte[] signatureField = new byte[0];
        private string versionField = default(string);
        private bool signerIdentifierFieldSpecified = false;
        private bool digestAlgorithmFieldSpecified = false;
        private bool signatureAlgorithmFieldSpecified = false;
        private bool signatureFieldSpecified = false;
        private string versionDefaultValue = "v1";
        private bool versionFieldSpecified = false;
        public SignerType() {
            this.versionField = this.versionDefaultValue;
        }
        public SignerType(SignerType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SignerType))) {
            }
            else {
                this.SignerIdentifier = value.SignerIdentifier;
                this.DigestAlgorithm = value.DigestAlgorithm;
                this.SignatureAlgorithm = value.SignatureAlgorithm;
                this.Signature = value.Signature;
                this.Version = value.Version;
                this.SignerIdentifierSpecified = value.SignerIdentifierSpecified;
                this.DigestAlgorithmSpecified = value.DigestAlgorithmSpecified;
                this.SignatureAlgorithmSpecified = value.SignatureAlgorithmSpecified;
                this.SignatureSpecified = value.SignatureSpecified;
                this.VersionSpecified = value.VersionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SignerIdentifierType SignerIdentifier {
            get {
                return this.signerIdentifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SignerIdentifierType))
                            || false)) {
                    this.signerIdentifierField = new SignerIdentifierType();
                    this.signerIdentifierFieldSpecified = false;
                }
                else {
                    this.signerIdentifierField = value;
                    this.signerIdentifierFieldSpecified = this.SignerIdentifier.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier DigestAlgorithm {
            get {
                return this.digestAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AlgorithmIdentifier))
                            || false)) {
                    this.digestAlgorithmField = new AlgorithmIdentifier();
                    this.digestAlgorithmFieldSpecified = false;
                }
                else {
                    this.digestAlgorithmField = value;
                    this.digestAlgorithmFieldSpecified = this.DigestAlgorithm.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AlgorithmIdentifier SignatureAlgorithm {
            get {
                return this.signatureAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AlgorithmIdentifier))
                            || false)) {
                    this.signatureAlgorithmField = new AlgorithmIdentifier();
                    this.signatureAlgorithmFieldSpecified = false;
                }
                else {
                    this.signatureAlgorithmField = value;
                    this.signatureAlgorithmFieldSpecified = this.SignatureAlgorithm.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Signature {
            get {
                return this.signatureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.signatureField = new byte[0];
                    this.signatureFieldSpecified = false;
                }
                else {
                    this.signatureField = value;
                    this.signatureFieldSpecified = (this.SignatureLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("v1")]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.VersionDefaultValue)
                            || (value == default(string)))) {
                    this.versionField = this.VersionDefaultValue;
                    this.versionFieldSpecified = false;
                }
                else {
                    this.versionField = value;
                    this.versionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SignerIdentifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.signerIdentifierFieldSpecified || this.SignerIdentifier.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.signerIdentifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DigestAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.digestAlgorithmFieldSpecified || this.DigestAlgorithm.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.digestAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SignatureAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.signatureAlgorithmFieldSpecified || this.SignatureAlgorithm.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.signatureAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SignatureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.signatureFieldSpecified
                            || (this.SignatureLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.signatureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string VersionDefaultValue {
            get {
                return this.versionDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool VersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.versionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.versionFieldSpecified = value;
                if ((this.versionFieldSpecified
                            && (this.versionField == default(string)))) {
                    this.versionField = this.versionDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.SignerIdentifier != default(SignerIdentifierType))
                            && this.SignerIdentifierSpecified))
                            || ((this.DigestAlgorithm != default(AlgorithmIdentifier))
                            && this.DigestAlgorithmSpecified))
                            || ((this.SignatureAlgorithm != default(AlgorithmIdentifier))
                            && this.SignatureAlgorithmSpecified))
                            || (this.SignatureLength() != 0))
                            || ((this.Version != default(string))
                            && this.VersionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SignerTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SignerType";
                // END ADDED BY XSD
            }
        }
        public int SignatureLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.signatureField == default(byte[]))) {
                return 0;
            }
            else {
                return this.signatureField.Length;
            }
            // END ADDED BY XSD
        }
        public byte SignatureGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.signatureField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.signatureField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.signatureField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool SignatureSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.signatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.signatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.signatureField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SignatureAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.signatureField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.signatureField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.signatureField.Length); i = (i + 1)) {
                        array[i] = signatureField[i];
                    }
                    array[i] = value;
                    this.Signature = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SignatureRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.signatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.signatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.signatureField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = signatureField[i];
                            }
                            for (i = (i + 1); (i < this.signatureField.Length); i = (i + 1)) {
                                array[i] = signatureField[i];
                            }
                            this.Signature = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SignatureInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.signatureField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.signatureField.Length <= index)) {
                        if ((this.SignatureAddItem(value) == true)) {
                            return this.SignatureLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.signatureField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = signatureField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.signatureField.Length); j = (j + 1)) {
                            array[k] = signatureField[j];
                            k = (k + 1);
                        }
                        this.Signature = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("4fc5e8b8-c260-49bd-b125-14ce4f95c62f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SignerIdentifierType : ISignerIdentifierType {
        private IssuerAndSerialNumberType issuerAndSerialNumberField = new IssuerAndSerialNumberType();
        private bool issuerAndSerialNumberFieldSpecified = false;
        public SignerIdentifierType() {
        }
        public SignerIdentifierType(SignerIdentifierType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SignerIdentifierType))) {
            }
            else {
                this.IssuerAndSerialNumber = value.IssuerAndSerialNumber;
                this.IssuerAndSerialNumberSpecified = value.IssuerAndSerialNumberSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IssuerAndSerialNumberType IssuerAndSerialNumber {
            get {
                return this.issuerAndSerialNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(IssuerAndSerialNumberType))
                            || false)) {
                    this.issuerAndSerialNumberField = new IssuerAndSerialNumberType();
                    this.issuerAndSerialNumberFieldSpecified = false;
                }
                else {
                    this.issuerAndSerialNumberField = value;
                    this.issuerAndSerialNumberFieldSpecified = this.IssuerAndSerialNumber.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IssuerAndSerialNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.issuerAndSerialNumberFieldSpecified || this.IssuerAndSerialNumber.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.issuerAndSerialNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.IssuerAndSerialNumber != default(IssuerAndSerialNumberType))
                            && this.IssuerAndSerialNumberSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SignerIdentifierTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SignerIdentifierType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum VersionEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        v0,
        /// <remarks/>
        v1,
        /// <remarks/>
        v2,
        /// <remarks/>
        v3,
        /// <remarks/>
        v4,
        /// <remarks/>
        v5,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("8b572d1c-6a1e-4f95-b924-0403b259d121")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ContentInformationType : IContentInformationType {
        private object itemField = default(object);
        private string contentTypeField = default(string);
        private bool itemFieldSpecified = false;
        private bool contentTypeFieldSpecified = false;
        public ContentInformationType() {
        }
        public ContentInformationType(ContentInformationType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ContentInformationType))) {
            }
            else {
                this.Item = value.Item;
                this.ContentType = value.ContentType;
                this.ItemSpecified = value.ItemSpecified;
                this.ContentTypeSpecified = value.ContentTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AuthenticatedData", typeof(AuthenticatedDataType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DigestedData", typeof(DigestedDataType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnvelopedData", typeof(EnvelopedDataType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamedKeyEncryptedData", typeof(NamedKeyEncryptedDataType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SignedData", typeof(SignedDataType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(object))
                            || false)) {
                    this.itemField = default(object);
                    this.itemFieldSpecified = false;
                }
                else {
                    this.itemField = value;
                    this.itemFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.contentTypeField = default(string);
                    this.contentTypeFieldSpecified = false;
                }
                else {
                    this.contentTypeField = value;
                    this.contentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ContentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.contentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.contentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Item != default(object))
                            && this.ItemSpecified))
                            || ((this.ContentType != default(string))
                            && this.ContentTypeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ContentInformationTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ContentInformationType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("fafc292e-7ae0-4ada-ac81-d8df363b2078")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AbortRequestType : IAbortRequestType {
        private MessageReferenceType messageReferenceField = new MessageReferenceType();
        private string abortReasonField = default(string);
        private DisplayOutputType displayOutputField = new DisplayOutputType();
        private bool messageReferenceFieldSpecified = false;
        private bool abortReasonFieldSpecified = false;
        private bool displayOutputFieldSpecified = false;
        public AbortRequestType() {
        }
        public AbortRequestType(AbortRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AbortRequestType))) {
            }
            else {
                this.MessageReference = value.MessageReference;
                this.AbortReason = value.AbortReason;
                this.DisplayOutput = value.DisplayOutput;
                this.MessageReferenceSpecified = value.MessageReferenceSpecified;
                this.AbortReasonSpecified = value.AbortReasonSpecified;
                this.DisplayOutputSpecified = value.DisplayOutputSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageReferenceType MessageReference {
            get {
                return this.messageReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MessageReferenceType))
                            || false)) {
                    this.messageReferenceField = new MessageReferenceType();
                    this.messageReferenceFieldSpecified = false;
                }
                else {
                    this.messageReferenceField = value;
                    this.messageReferenceFieldSpecified = this.MessageReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AbortReason {
            get {
                return this.abortReasonField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.abortReasonField = default(string);
                    this.abortReasonFieldSpecified = false;
                }
                else {
                    this.abortReasonField = value;
                    this.abortReasonFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DisplayOutputType DisplayOutput {
            get {
                return this.displayOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(DisplayOutputType))
                            || false)) {
                    this.displayOutputField = new DisplayOutputType();
                    this.displayOutputFieldSpecified = false;
                }
                else {
                    this.displayOutputField = value;
                    this.displayOutputFieldSpecified = this.DisplayOutput.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageReferenceFieldSpecified || this.MessageReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AbortReasonSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.abortReasonFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.abortReasonFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisplayOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.displayOutputFieldSpecified || this.DisplayOutput.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.displayOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.MessageReference != default(MessageReferenceType))
                            && this.MessageReferenceSpecified))
                            || ((this.DisplayOutput != default(DisplayOutputType))
                            && this.DisplayOutputSpecified))
                            || ((this.AbortReason != default(string))
                            && this.AbortReasonSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AbortRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AbortRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("27f76297-79ed-493a-82ab-a8f6603ebed8")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class MessageReferenceType : IMessageReferenceType {
        private string messageCategoryField = default(string);
        private string serviceIDField = default(string);
        private string deviceIDField = default(string);
        private string saleIDField = default(string);
        private string pOIIDField = default(string);
        private bool messageCategoryFieldSpecified = false;
        private bool serviceIDFieldSpecified = false;
        private bool deviceIDFieldSpecified = false;
        private bool saleIDFieldSpecified = false;
        private bool pOIIDFieldSpecified = false;
        public MessageReferenceType() {
        }
        public MessageReferenceType(MessageReferenceType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(MessageReferenceType))) {
            }
            else {
                this.MessageCategory = value.MessageCategory;
                this.ServiceID = value.ServiceID;
                this.DeviceID = value.DeviceID;
                this.SaleID = value.SaleID;
                this.POIID = value.POIID;
                this.MessageCategorySpecified = value.MessageCategorySpecified;
                this.ServiceIDSpecified = value.ServiceIDSpecified;
                this.DeviceIDSpecified = value.DeviceIDSpecified;
                this.SaleIDSpecified = value.SaleIDSpecified;
                this.POIIDSpecified = value.POIIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MessageCategory {
            get {
                return this.messageCategoryField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.messageCategoryField = default(string);
                    this.messageCategoryFieldSpecified = false;
                }
                else {
                    this.messageCategoryField = value;
                    this.messageCategoryFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ServiceID {
            get {
                return this.serviceIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.serviceIDField = default(string);
                    this.serviceIDFieldSpecified = false;
                }
                else {
                    this.serviceIDField = value;
                    this.serviceIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.deviceIDField = default(string);
                    this.deviceIDFieldSpecified = false;
                }
                else {
                    this.deviceIDField = value;
                    this.deviceIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleID {
            get {
                return this.saleIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleIDField = default(string);
                    this.saleIDFieldSpecified = false;
                }
                else {
                    this.saleIDField = value;
                    this.saleIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIID {
            get {
                return this.pOIIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIIDField = default(string);
                    this.pOIIDFieldSpecified = false;
                }
                else {
                    this.pOIIDField = value;
                    this.pOIIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageCategorySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageCategoryFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageCategoryFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ServiceIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.serviceIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.serviceIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DeviceIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.deviceIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.deviceIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.MessageCategory != default(string))
                            && this.MessageCategorySpecified))
                            || ((this.ServiceID != default(string))
                            && this.ServiceIDSpecified))
                            || ((this.DeviceID != default(string))
                            && this.DeviceIDSpecified))
                            || ((this.SaleID != default(string))
                            && this.SaleIDSpecified))
                            || ((this.POIID != default(string))
                            && this.POIIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string MessageReferenceTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "MessageReferenceType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum AccountTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Default,
        /// <remarks/>
        Savings,
        /// <remarks/>
        Checking,
        /// <remarks/>
        CreditCard,
        /// <remarks/>
        Universal,
        /// <remarks/>
        Investment,
        /// <remarks/>
        CardTotals,
        /// <remarks/>
        EpurseCard,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("2d3a9865-2c97-4460-9c1d-79c62150d9a7")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AdminRequestType : IAdminRequestType {
        private string serviceIdentificationField = default(string);
        private bool serviceIdentificationFieldSpecified = false;
        public AdminRequestType() {
        }
        public AdminRequestType(AdminRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AdminRequestType))) {
            }
            else {
                this.ServiceIdentification = value.ServiceIdentification;
                this.ServiceIdentificationSpecified = value.ServiceIdentificationSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceIdentification {
            get {
                return this.serviceIdentificationField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.serviceIdentificationField = default(string);
                    this.serviceIdentificationFieldSpecified = false;
                }
                else {
                    this.serviceIdentificationField = value;
                    this.serviceIdentificationFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ServiceIdentificationSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.serviceIdentificationFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.serviceIdentificationFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.ServiceIdentification != default(string))
                            && this.ServiceIdentificationSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AdminRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AdminRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("d9950cf4-008f-4ed5-bf75-2930774fe49e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AdminResponseType : IAdminResponseType {
        private ResponseType responseField = new ResponseType();
        private bool responseFieldSpecified = false;
        public AdminResponseType() {
        }
        public AdminResponseType(AdminResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AdminResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.ResponseSpecified = value.ResponseSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AdminResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AdminResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum AlignmentEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Left,
        /// <remarks/>
        Right,
        /// <remarks/>
        Centred,
        /// <remarks/>
        Justified,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("eca49523-6756-4890-9a31-0502f98b7328")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AllowedProductType : IAllowedProductType {
        private string productLabelField = default(string);
        private string additionalProductInfoField = default(string);
        private string productCodeField = default(string);
        private string eanUpcField = default(string);
        private bool productLabelFieldSpecified = false;
        private bool additionalProductInfoFieldSpecified = false;
        private bool productCodeFieldSpecified = false;
        private bool eanUpcFieldSpecified = false;
        public AllowedProductType() {
        }
        public AllowedProductType(AllowedProductType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AllowedProductType))) {
            }
            else {
                this.ProductLabel = value.ProductLabel;
                this.AdditionalProductInfo = value.AdditionalProductInfo;
                this.ProductCode = value.ProductCode;
                this.EanUpc = value.EanUpc;
                this.ProductLabelSpecified = value.ProductLabelSpecified;
                this.AdditionalProductInfoSpecified = value.AdditionalProductInfoSpecified;
                this.ProductCodeSpecified = value.ProductCodeSpecified;
                this.EanUpcSpecified = value.EanUpcSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ProductLabel {
            get {
                return this.productLabelField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.productLabelField = default(string);
                    this.productLabelFieldSpecified = false;
                }
                else {
                    this.productLabelField = value;
                    this.productLabelFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AdditionalProductInfo {
            get {
                return this.additionalProductInfoField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.additionalProductInfoField = default(string);
                    this.additionalProductInfoFieldSpecified = false;
                }
                else {
                    this.additionalProductInfoField = value;
                    this.additionalProductInfoFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.productCodeField = default(string);
                    this.productCodeFieldSpecified = false;
                }
                else {
                    this.productCodeField = value;
                    this.productCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EanUpc {
            get {
                return this.eanUpcField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.eanUpcField = default(string);
                    this.eanUpcFieldSpecified = false;
                }
                else {
                    this.eanUpcField = value;
                    this.eanUpcFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProductLabelSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.productLabelFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.productLabelFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AdditionalProductInfoSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.additionalProductInfoFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.additionalProductInfoFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProductCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.productCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.productCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EanUpcSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.eanUpcFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.eanUpcFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.ProductLabel != default(string))
                            && this.ProductLabelSpecified))
                            || ((this.AdditionalProductInfo != default(string))
                            && this.AdditionalProductInfoSpecified))
                            || ((this.ProductCode != default(string))
                            && this.ProductCodeSpecified))
                            || ((this.EanUpc != default(string))
                            && this.EanUpcSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AllowedProductTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AllowedProductType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("8f88c4a9-9881-40c6-b33c-34a338abc0a2")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AmountsReqType : IAmountsReqType {
        private string currencyField = default(string);
        private double requestedAmountField = default(double);
        private bool requestedAmountFieldSpecified = default(bool);
        private double cashBackAmountField = default(double);
        private bool cashBackAmountFieldSpecified = default(bool);
        private double tipAmountField = default(double);
        private bool tipAmountFieldSpecified = default(bool);
        private double paidAmountField = default(double);
        private bool paidAmountFieldSpecified = default(bool);
        private double minimumAmountToDeliverField = default(double);
        private bool minimumAmountToDeliverFieldSpecified = default(bool);
        private double maximumCashBackAmountField = default(double);
        private bool maximumCashBackAmountFieldSpecified = default(bool);
        private double minimumSplitAmountField = default(double);
        private bool minimumSplitAmountFieldSpecified = default(bool);
        private bool currencyFieldSpecified = false;
        public AmountsReqType() {
        }
        public AmountsReqType(AmountsReqType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AmountsReqType))) {
            }
            else {
                this.Currency = value.Currency;
                this.RequestedAmount = value.RequestedAmount;
                this.RequestedAmountSpecified = value.RequestedAmountSpecified;
                this.CashBackAmount = value.CashBackAmount;
                this.CashBackAmountSpecified = value.CashBackAmountSpecified;
                this.TipAmount = value.TipAmount;
                this.TipAmountSpecified = value.TipAmountSpecified;
                this.PaidAmount = value.PaidAmount;
                this.PaidAmountSpecified = value.PaidAmountSpecified;
                this.MinimumAmountToDeliver = value.MinimumAmountToDeliver;
                this.MinimumAmountToDeliverSpecified = value.MinimumAmountToDeliverSpecified;
                this.MaximumCashBackAmount = value.MaximumCashBackAmount;
                this.MaximumCashBackAmountSpecified = value.MaximumCashBackAmountSpecified;
                this.MinimumSplitAmount = value.MinimumSplitAmount;
                this.MinimumSplitAmountSpecified = value.MinimumSplitAmountSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double RequestedAmount {
            get {
                return this.requestedAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.requestedAmountField = default(double);
                    this.requestedAmountFieldSpecified = false;
                }
                else {
                    this.requestedAmountField = value;
                    this.requestedAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestedAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.requestedAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.requestedAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CashBackAmount {
            get {
                return this.cashBackAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.cashBackAmountField = default(double);
                    this.cashBackAmountFieldSpecified = false;
                }
                else {
                    this.cashBackAmountField = value;
                    this.cashBackAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CashBackAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cashBackAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cashBackAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TipAmount {
            get {
                return this.tipAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.tipAmountField = default(double);
                    this.tipAmountFieldSpecified = false;
                }
                else {
                    this.tipAmountField = value;
                    this.tipAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TipAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.tipAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.tipAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double PaidAmount {
            get {
                return this.paidAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.paidAmountField = default(double);
                    this.paidAmountFieldSpecified = false;
                }
                else {
                    this.paidAmountField = value;
                    this.paidAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaidAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paidAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paidAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MinimumAmountToDeliver {
            get {
                return this.minimumAmountToDeliverField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.minimumAmountToDeliverField = default(double);
                    this.minimumAmountToDeliverFieldSpecified = false;
                }
                else {
                    this.minimumAmountToDeliverField = value;
                    this.minimumAmountToDeliverFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumAmountToDeliverSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.minimumAmountToDeliverFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.minimumAmountToDeliverFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MaximumCashBackAmount {
            get {
                return this.maximumCashBackAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.maximumCashBackAmountField = default(double);
                    this.maximumCashBackAmountFieldSpecified = false;
                }
                else {
                    this.maximumCashBackAmountField = value;
                    this.maximumCashBackAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumCashBackAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maximumCashBackAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maximumCashBackAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MinimumSplitAmount {
            get {
                return this.minimumSplitAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.minimumSplitAmountField = default(double);
                    this.minimumSplitAmountFieldSpecified = false;
                }
                else {
                    this.minimumSplitAmountField = value;
                    this.minimumSplitAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumSplitAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.minimumSplitAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.minimumSplitAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((false
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified))
                            || ((this.RequestedAmount != default(double))
                            && this.RequestedAmountSpecified))
                            || ((this.CashBackAmount != default(double))
                            && this.CashBackAmountSpecified))
                            || ((this.TipAmount != default(double))
                            && this.TipAmountSpecified))
                            || ((this.PaidAmount != default(double))
                            && this.PaidAmountSpecified))
                            || ((this.MinimumAmountToDeliver != default(double))
                            && this.MinimumAmountToDeliverSpecified))
                            || ((this.MaximumCashBackAmount != default(double))
                            && this.MaximumCashBackAmountSpecified))
                            || ((this.MinimumSplitAmount != default(double))
                            && this.MinimumSplitAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AmountsReqTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AmountsReqType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("b3a16ccc-17c7-4bc7-bcca-5a82e9c84239")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AmountsRespType : IAmountsRespType {
        private string currencyField = default(string);
        private double authorizedAmountField = default(double);
        private double totalRebatesAmountField = default(double);
        private bool totalRebatesAmountFieldSpecified = default(bool);
        private double totalFeesAmountField = default(double);
        private bool totalFeesAmountFieldSpecified = default(bool);
        private double cashBackAmountField = default(double);
        private bool cashBackAmountFieldSpecified = default(bool);
        private double tipAmountField = default(double);
        private bool tipAmountFieldSpecified = default(bool);
        private bool currencyFieldSpecified = false;
        private bool authorizedAmountFieldSpecified = false;
        public AmountsRespType() {
        }
        public AmountsRespType(AmountsRespType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AmountsRespType))) {
            }
            else {
                this.Currency = value.Currency;
                this.AuthorizedAmount = value.AuthorizedAmount;
                this.TotalRebatesAmount = value.TotalRebatesAmount;
                this.TotalRebatesAmountSpecified = value.TotalRebatesAmountSpecified;
                this.TotalFeesAmount = value.TotalFeesAmount;
                this.TotalFeesAmountSpecified = value.TotalFeesAmountSpecified;
                this.CashBackAmount = value.CashBackAmount;
                this.CashBackAmountSpecified = value.CashBackAmountSpecified;
                this.TipAmount = value.TipAmount;
                this.TipAmountSpecified = value.TipAmountSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
                this.AuthorizedAmountSpecified = value.AuthorizedAmountSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AuthorizedAmount {
            get {
                return this.authorizedAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.authorizedAmountField = default(double);
                    this.authorizedAmountFieldSpecified = false;
                }
                else {
                    this.authorizedAmountField = value;
                    this.authorizedAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TotalRebatesAmount {
            get {
                return this.totalRebatesAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.totalRebatesAmountField = default(double);
                    this.totalRebatesAmountFieldSpecified = false;
                }
                else {
                    this.totalRebatesAmountField = value;
                    this.totalRebatesAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalRebatesAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalRebatesAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalRebatesAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TotalFeesAmount {
            get {
                return this.totalFeesAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.totalFeesAmountField = default(double);
                    this.totalFeesAmountFieldSpecified = false;
                }
                else {
                    this.totalFeesAmountField = value;
                    this.totalFeesAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalFeesAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalFeesAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalFeesAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CashBackAmount {
            get {
                return this.cashBackAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.cashBackAmountField = default(double);
                    this.cashBackAmountFieldSpecified = false;
                }
                else {
                    this.cashBackAmountField = value;
                    this.cashBackAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CashBackAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cashBackAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cashBackAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TipAmount {
            get {
                return this.tipAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.tipAmountField = default(double);
                    this.tipAmountFieldSpecified = false;
                }
                else {
                    this.tipAmountField = value;
                    this.tipAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TipAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.tipAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.tipAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AuthorizedAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.authorizedAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.authorizedAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified))
                            || ((this.AuthorizedAmount != default(double))
                            && this.AuthorizedAmountSpecified))
                            || ((this.TotalRebatesAmount != default(double))
                            && this.TotalRebatesAmountSpecified))
                            || ((this.TotalFeesAmount != default(double))
                            && this.TotalFeesAmountSpecified))
                            || ((this.CashBackAmount != default(double))
                            && this.CashBackAmountSpecified))
                            || ((this.TipAmount != default(double))
                            && this.TipAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AmountsRespTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AmountsRespType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e77c2bd3-108c-4ed8-b597-663acbeac373")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AreaSizeType : IAreaSizeType {
        private string xField = default(string);
        private string yField = default(string);
        private bool xFieldSpecified = false;
        private bool yFieldSpecified = false;
        public AreaSizeType() {
        }
        public AreaSizeType(AreaSizeType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AreaSizeType))) {
            }
            else {
                this.X = value.X;
                this.Y = value.Y;
                this.XSpecified = value.XSpecified;
                this.YSpecified = value.YSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string X {
            get {
                return this.xField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.xField = default(string);
                    this.xFieldSpecified = false;
                }
                else {
                    this.xField = value;
                    this.xFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Y {
            get {
                return this.yField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.yField = default(string);
                    this.yFieldSpecified = false;
                }
                else {
                    this.yField = value;
                    this.yFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool XSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.xFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.xFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool YSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.yFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.yFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.X != default(string))
                            && this.XSpecified))
                            || ((this.Y != default(string))
                            && this.YSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AreaSizeTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AreaSizeType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum AuthenticationMethodEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Bypass,
        /// <remarks/>
        ManualVerification,
        /// <remarks/>
        MerchantAuthentication,
        /// <remarks/>
        OfflinePIN,
        /// <remarks/>
        OnLinePIN,
        /// <remarks/>
        PaperSignature,
        /// <remarks/>
        SecuredChannel,
        /// <remarks/>
        SecureCertificate,
        /// <remarks/>
        SecureNoCertificate,
        /// <remarks/>
        SignatureCapture,
        /// <remarks/>
        UnknownMethod,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("4e706503-1d99-4dfc-9c11-75fb558f31fb")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class BalanceInquiryRequestType : IBalanceInquiryRequestType {
        private PaymentAccountReqType paymentAccountReqField = new PaymentAccountReqType();
        private LoyaltyAccountReqType loyaltyAccountReqField = new LoyaltyAccountReqType();
        private bool paymentAccountReqFieldSpecified = false;
        private bool loyaltyAccountReqFieldSpecified = false;
        public BalanceInquiryRequestType() {
        }
        public BalanceInquiryRequestType(BalanceInquiryRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(BalanceInquiryRequestType))) {
            }
            else {
                this.PaymentAccountReq = value.PaymentAccountReq;
                this.LoyaltyAccountReq = value.LoyaltyAccountReq;
                this.PaymentAccountReqSpecified = value.PaymentAccountReqSpecified;
                this.LoyaltyAccountReqSpecified = value.LoyaltyAccountReqSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentAccountReqType PaymentAccountReq {
            get {
                return this.paymentAccountReqField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentAccountReqType))
                            || false)) {
                    this.paymentAccountReqField = new PaymentAccountReqType();
                    this.paymentAccountReqFieldSpecified = false;
                }
                else {
                    this.paymentAccountReqField = value;
                    this.paymentAccountReqFieldSpecified = this.PaymentAccountReq.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountReqType LoyaltyAccountReq {
            get {
                return this.loyaltyAccountReqField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountReqType))
                            || false)) {
                    this.loyaltyAccountReqField = new LoyaltyAccountReqType();
                    this.loyaltyAccountReqFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountReqField = value;
                    this.loyaltyAccountReqFieldSpecified = this.LoyaltyAccountReq.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentAccountReqSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentAccountReqFieldSpecified || this.PaymentAccountReq.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentAccountReqFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountReqSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountReqFieldSpecified || this.LoyaltyAccountReq.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountReqFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.PaymentAccountReq != default(PaymentAccountReqType))
                            && this.PaymentAccountReqSpecified))
                            || ((this.LoyaltyAccountReq != default(LoyaltyAccountReqType))
                            && this.LoyaltyAccountReqSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string BalanceInquiryRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "BalanceInquiryRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("670ce517-30bf-4634-8dd1-beb6a6403b35")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentAccountReqType : IPaymentAccountReqType {
        private TransactionIdentificationType cardAcquisitionReferenceField = new TransactionIdentificationType();
        private PaymentInstrumentDataType paymentInstrumentDataField = new PaymentInstrumentDataType();
        private string accountTypeField = default(string);
        private bool cardAcquisitionReferenceFieldSpecified = false;
        private bool paymentInstrumentDataFieldSpecified = false;
        private string accountTypeDefaultValue = "Default";
        private bool accountTypeFieldSpecified = false;
        public PaymentAccountReqType() {
            this.accountTypeField = this.accountTypeDefaultValue;
        }
        public PaymentAccountReqType(PaymentAccountReqType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentAccountReqType))) {
            }
            else {
                this.CardAcquisitionReference = value.CardAcquisitionReference;
                this.PaymentInstrumentData = value.PaymentInstrumentData;
                this.AccountType = value.AccountType;
                this.CardAcquisitionReferenceSpecified = value.CardAcquisitionReferenceSpecified;
                this.PaymentInstrumentDataSpecified = value.PaymentInstrumentDataSpecified;
                this.AccountTypeSpecified = value.AccountTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType CardAcquisitionReference {
            get {
                return this.cardAcquisitionReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.cardAcquisitionReferenceField = new TransactionIdentificationType();
                    this.cardAcquisitionReferenceFieldSpecified = false;
                }
                else {
                    this.cardAcquisitionReferenceField = value;
                    this.cardAcquisitionReferenceFieldSpecified = this.CardAcquisitionReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentInstrumentDataType PaymentInstrumentData {
            get {
                return this.paymentInstrumentDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentInstrumentDataType))
                            || false)) {
                    this.paymentInstrumentDataField = new PaymentInstrumentDataType();
                    this.paymentInstrumentDataFieldSpecified = false;
                }
                else {
                    this.paymentInstrumentDataField = value;
                    this.paymentInstrumentDataFieldSpecified = this.PaymentInstrumentData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Default")]
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.AccountTypeDefaultValue)
                            || (value == default(string)))) {
                    this.accountTypeField = this.AccountTypeDefaultValue;
                    this.accountTypeFieldSpecified = false;
                }
                else {
                    this.accountTypeField = value;
                    this.accountTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardAcquisitionReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardAcquisitionReferenceFieldSpecified || this.CardAcquisitionReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardAcquisitionReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentInstrumentDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentInstrumentDataFieldSpecified || this.PaymentInstrumentData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentInstrumentDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AccountTypeDefaultValue {
            get {
                return this.accountTypeDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AccountTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.accountTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.accountTypeFieldSpecified = value;
                if ((this.accountTypeFieldSpecified
                            && (this.accountTypeField == default(string)))) {
                    this.accountTypeField = this.accountTypeDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.CardAcquisitionReference != default(TransactionIdentificationType))
                            && this.CardAcquisitionReferenceSpecified))
                            || ((this.PaymentInstrumentData != default(PaymentInstrumentDataType))
                            && this.PaymentInstrumentDataSpecified))
                            || ((this.AccountType != default(string))
                            && this.AccountTypeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentAccountReqTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentAccountReqType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("16c4db62-c279-4873-bdcd-5b6d8c1a426f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionIdentificationType : ITransactionIdentificationType {
        private string transactionIDField = default(string);
        private string timeStampField = default(string);
        private bool transactionIDFieldSpecified = false;
        private bool timeStampFieldSpecified = false;
        public TransactionIdentificationType() {
        }
        public TransactionIdentificationType(TransactionIdentificationType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionIdentificationType))) {
            }
            else {
                this.TransactionID = value.TransactionID;
                this.TimeStamp = value.TimeStamp;
                this.TransactionIDSpecified = value.TransactionIDSpecified;
                this.TimeStampSpecified = value.TimeStampSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.transactionIDField = default(string);
                    this.transactionIDFieldSpecified = false;
                }
                else {
                    this.transactionIDField = value;
                    this.transactionIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.timeStampField = default(string);
                    this.timeStampFieldSpecified = false;
                }
                else {
                    this.timeStampField = value;
                    this.timeStampFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TimeStampSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.timeStampFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.timeStampFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.TransactionID != default(string))
                            && this.TransactionIDSpecified))
                            || ((this.TimeStamp != default(string))
                            && this.TimeStampSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionIdentificationTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionIdentificationType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("9a2b48bd-62ac-4859-862e-496e761cdce9")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentInstrumentDataType : IPaymentInstrumentDataType {
        private CardDataType cardDataField = new CardDataType();
        private CheckDataType checkDataField = new CheckDataType();
        private MobileDataType mobileDataField = new MobileDataType();
        private string paymentInstrumentTypeField = default(string);
        private bool cardDataFieldSpecified = false;
        private bool checkDataFieldSpecified = false;
        private bool mobileDataFieldSpecified = false;
        private bool paymentInstrumentTypeFieldSpecified = false;
        public PaymentInstrumentDataType() {
        }
        public PaymentInstrumentDataType(PaymentInstrumentDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentInstrumentDataType))) {
            }
            else {
                this.CardData = value.CardData;
                this.CheckData = value.CheckData;
                this.MobileData = value.MobileData;
                this.PaymentInstrumentType = value.PaymentInstrumentType;
                this.CardDataSpecified = value.CardDataSpecified;
                this.CheckDataSpecified = value.CheckDataSpecified;
                this.MobileDataSpecified = value.MobileDataSpecified;
                this.PaymentInstrumentTypeSpecified = value.PaymentInstrumentTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CardDataType CardData {
            get {
                return this.cardDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CardDataType))
                            || false)) {
                    this.cardDataField = new CardDataType();
                    this.cardDataFieldSpecified = false;
                }
                else {
                    this.cardDataField = value;
                    this.cardDataFieldSpecified = this.CardData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CheckDataType CheckData {
            get {
                return this.checkDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CheckDataType))
                            || false)) {
                    this.checkDataField = new CheckDataType();
                    this.checkDataFieldSpecified = false;
                }
                else {
                    this.checkDataField = value;
                    this.checkDataFieldSpecified = this.CheckData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MobileDataType MobileData {
            get {
                return this.mobileDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MobileDataType))
                            || false)) {
                    this.mobileDataField = new MobileDataType();
                    this.mobileDataFieldSpecified = false;
                }
                else {
                    this.mobileDataField = value;
                    this.mobileDataFieldSpecified = this.MobileData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PaymentInstrumentType {
            get {
                return this.paymentInstrumentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.paymentInstrumentTypeField = default(string);
                    this.paymentInstrumentTypeFieldSpecified = false;
                }
                else {
                    this.paymentInstrumentTypeField = value;
                    this.paymentInstrumentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardDataFieldSpecified || this.CardData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CheckDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.checkDataFieldSpecified || this.CheckData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.checkDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MobileDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.mobileDataFieldSpecified || this.MobileData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.mobileDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentInstrumentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentInstrumentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentInstrumentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.CardData != default(CardDataType))
                            && this.CardDataSpecified))
                            || ((this.CheckData != default(CheckDataType))
                            && this.CheckDataSpecified))
                            || ((this.MobileData != default(MobileDataType))
                            && this.MobileDataSpecified))
                            || ((this.PaymentInstrumentType != default(string))
                            && this.PaymentInstrumentTypeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentInstrumentDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentInstrumentDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("b9810e56-75c7-4205-b40c-04d7e06eba6b")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardDataType : ICardDataType {
        private ContentInformationType protectedCardDataField = new ContentInformationType();
        private SensitiveCardDataType sensitiveCardDataField = new SensitiveCardDataType();
        private string[] allowedProductCodeField = new string[0];
        private AllowedProductType[] allowedProductField = new AllowedProductType[0];
        private PaymentTokenType paymentTokenField = new PaymentTokenType();
        private CustomerOrderType[] customerOrderField = new CustomerOrderType[0];
        private string paymentBrandField = default(string);
        private string maskedPANField = default(string);
        private string paymentAccountRefField = default(string);
        private string[] entryModeField = new string[0];
        private string cardCountryCodeField = default(string);
        private bool protectedCardDataFieldSpecified = false;
        private bool sensitiveCardDataFieldSpecified = false;
        private bool allowedProductCodeFieldSpecified = false;
        private bool allowedProductFieldSpecified = false;
        private bool paymentTokenFieldSpecified = false;
        private bool customerOrderFieldSpecified = false;
        private bool paymentBrandFieldSpecified = false;
        private bool maskedPANFieldSpecified = false;
        private bool paymentAccountRefFieldSpecified = false;
        private bool entryModeFieldSpecified = false;
        private bool cardCountryCodeFieldSpecified = false;
        public CardDataType() {
        }
        public CardDataType(CardDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardDataType))) {
            }
            else {
                this.ProtectedCardData = value.ProtectedCardData;
                this.SensitiveCardData = value.SensitiveCardData;
                this.AllowedProductCode = value.AllowedProductCode;
                this.AllowedProduct = value.AllowedProduct;
                this.PaymentToken = value.PaymentToken;
                this.CustomerOrder = value.CustomerOrder;
                this.PaymentBrand = value.PaymentBrand;
                this.MaskedPAN = value.MaskedPAN;
                this.PaymentAccountRef = value.PaymentAccountRef;
                this.EntryMode = value.EntryMode;
                this.CardCountryCode = value.CardCountryCode;
                this.ProtectedCardDataSpecified = value.ProtectedCardDataSpecified;
                this.SensitiveCardDataSpecified = value.SensitiveCardDataSpecified;
                this.AllowedProductCodeSpecified = value.AllowedProductCodeSpecified;
                this.AllowedProductSpecified = value.AllowedProductSpecified;
                this.PaymentTokenSpecified = value.PaymentTokenSpecified;
                this.CustomerOrderSpecified = value.CustomerOrderSpecified;
                this.PaymentBrandSpecified = value.PaymentBrandSpecified;
                this.MaskedPANSpecified = value.MaskedPANSpecified;
                this.PaymentAccountRefSpecified = value.PaymentAccountRefSpecified;
                this.EntryModeSpecified = value.EntryModeSpecified;
                this.CardCountryCodeSpecified = value.CardCountryCodeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContentInformationType ProtectedCardData {
            get {
                return this.protectedCardDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ContentInformationType))
                            || false)) {
                    this.protectedCardDataField = new ContentInformationType();
                    this.protectedCardDataFieldSpecified = false;
                }
                else {
                    this.protectedCardDataField = value;
                    this.protectedCardDataFieldSpecified = this.ProtectedCardData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SensitiveCardDataType SensitiveCardData {
            get {
                return this.sensitiveCardDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SensitiveCardDataType))
                            || false)) {
                    this.sensitiveCardDataField = new SensitiveCardDataType();
                    this.sensitiveCardDataFieldSpecified = false;
                }
                else {
                    this.sensitiveCardDataField = value;
                    this.sensitiveCardDataFieldSpecified = this.SensitiveCardData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedProductCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AllowedProductCode {
            get {
                return this.allowedProductCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.allowedProductCodeField = new string[0];
                    this.allowedProductCodeFieldSpecified = false;
                }
                else {
                    this.allowedProductCodeField = value;
                    this.allowedProductCodeFieldSpecified = (this.AllowedProductCodeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedProduct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AllowedProductType[] AllowedProduct {
            get {
                return this.allowedProductField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(AllowedProductType[]))
                            || false)) {
                    this.allowedProductField = new AllowedProductType[0];
                    this.allowedProductFieldSpecified = false;
                }
                else {
                    this.allowedProductField = value;
                    this.allowedProductFieldSpecified = (this.AllowedProductLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentTokenType PaymentToken {
            get {
                return this.paymentTokenField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentTokenType))
                            || false)) {
                    this.paymentTokenField = new PaymentTokenType();
                    this.paymentTokenFieldSpecified = false;
                }
                else {
                    this.paymentTokenField = value;
                    this.paymentTokenFieldSpecified = this.PaymentToken.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomerOrder", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CustomerOrderType[] CustomerOrder {
            get {
                return this.customerOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CustomerOrderType[]))
                            || false)) {
                    this.customerOrderField = new CustomerOrderType[0];
                    this.customerOrderFieldSpecified = false;
                }
                else {
                    this.customerOrderField = value;
                    this.customerOrderFieldSpecified = (this.CustomerOrderLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PaymentBrand {
            get {
                return this.paymentBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.paymentBrandField = default(string);
                    this.paymentBrandFieldSpecified = false;
                }
                else {
                    this.paymentBrandField = value;
                    this.paymentBrandFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MaskedPAN {
            get {
                return this.maskedPANField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.maskedPANField = default(string);
                    this.maskedPANFieldSpecified = false;
                }
                else {
                    this.maskedPANField = value;
                    this.maskedPANFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PaymentAccountRef {
            get {
                return this.paymentAccountRefField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.paymentAccountRefField = default(string);
                    this.paymentAccountRefFieldSpecified = false;
                }
                else {
                    this.paymentAccountRefField = value;
                    this.paymentAccountRefFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] EntryMode {
            get {
                return this.entryModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.entryModeField = new string[0];
                    this.entryModeFieldSpecified = false;
                }
                else {
                    this.entryModeField = value;
                    this.entryModeFieldSpecified = (this.EntryModeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CardCountryCode {
            get {
                return this.cardCountryCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.cardCountryCodeField = default(string);
                    this.cardCountryCodeFieldSpecified = false;
                }
                else {
                    this.cardCountryCodeField = value;
                    this.cardCountryCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProtectedCardDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.protectedCardDataFieldSpecified || this.ProtectedCardData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.protectedCardDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SensitiveCardDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.sensitiveCardDataFieldSpecified || this.SensitiveCardData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.sensitiveCardDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AllowedProductCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.allowedProductCodeFieldSpecified
                            || (this.AllowedProductCodeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.allowedProductCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AllowedProductSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.allowedProductFieldSpecified
                            || (this.AllowedProductLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.allowedProductFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentTokenSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentTokenFieldSpecified || this.PaymentToken.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentTokenFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderFieldSpecified
                            || (this.CustomerOrderLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentBrandFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaskedPANSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maskedPANFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maskedPANFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentAccountRefSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentAccountRefFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentAccountRefFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EntryModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.entryModeFieldSpecified
                            || (this.EntryModeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.entryModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardCountryCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardCountryCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardCountryCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((((false
                            || ((this.ProtectedCardData != default(ContentInformationType))
                            && this.ProtectedCardDataSpecified))
                            || ((this.SensitiveCardData != default(SensitiveCardDataType))
                            && this.SensitiveCardDataSpecified))
                            || ((this.PaymentToken != default(PaymentTokenType))
                            && this.PaymentTokenSpecified))
                            || (this.AllowedProductCodeLength() != 0))
                            || (this.AllowedProductLength() != 0))
                            || (this.CustomerOrderLength() != 0))
                            || (this.EntryModeLength() != 0))
                            || ((this.PaymentBrand != default(string))
                            && this.PaymentBrandSpecified))
                            || ((this.MaskedPAN != default(string))
                            && this.MaskedPANSpecified))
                            || ((this.PaymentAccountRef != default(string))
                            && this.PaymentAccountRefSpecified))
                            || ((this.CardCountryCode != default(string))
                            && this.CardCountryCodeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardDataType";
                // END ADDED BY XSD
            }
        }
        public int AllowedProductCodeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.allowedProductCodeField == default(string[]))) {
                return 0;
            }
            else {
                return this.allowedProductCodeField.Length;
            }
            // END ADDED BY XSD
        }
        public string AllowedProductCodeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.allowedProductCodeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.allowedProductCodeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.allowedProductCodeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AllowedProductCodeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.allowedProductCodeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedProductCodeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.allowedProductCodeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedProductCodeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.allowedProductCodeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.allowedProductCodeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.allowedProductCodeField.Length); i = (i + 1)) {
                        array[i] = allowedProductCodeField[i];
                    }
                    array[i] = value;
                    this.AllowedProductCode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedProductCodeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.allowedProductCodeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedProductCodeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.allowedProductCodeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = allowedProductCodeField[i];
                            }
                            for (i = (i + 1); (i < this.allowedProductCodeField.Length); i = (i + 1)) {
                                array[i] = allowedProductCodeField[i];
                            }
                            this.AllowedProductCode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AllowedProductCodeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.allowedProductCodeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.allowedProductCodeField.Length <= index)) {
                        if ((this.AllowedProductCodeAddItem(value) == true)) {
                            return this.AllowedProductCodeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.allowedProductCodeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = allowedProductCodeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.allowedProductCodeField.Length); j = (j + 1)) {
                            array[k] = allowedProductCodeField[j];
                            k = (k + 1);
                        }
                        this.AllowedProductCode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int AllowedProductLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.allowedProductField == default(AllowedProductType[]))) {
                return 0;
            }
            else {
                return this.allowedProductField.Length;
            }
            // END ADDED BY XSD
        }
        public AllowedProductType AllowedProductGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.allowedProductField == default(AllowedProductType[]))) {
                    return default(AllowedProductType);
                }
                else {
                    if ((0 > index)) {
                        return default(AllowedProductType);
                    }
                    else {
                        if ((this.allowedProductField.Length <= index)) {
                            return default(AllowedProductType);
                        }
                        else {
                            return this.allowedProductField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(AllowedProductType);
            }
            // END ADDED BY XSD
        }
        public bool AllowedProductSetItem(int index, AllowedProductType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.allowedProductField == default(AllowedProductType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedProductField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.allowedProductField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedProductAddItem(AllowedProductType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.allowedProductField == default(AllowedProductType[]))) {
                    return false;
                }
                else {
                    AllowedProductType[] array = new AllowedProductType[(this.allowedProductField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.allowedProductField.Length); i = (i + 1)) {
                        array[i] = allowedProductField[i];
                    }
                    array[i] = value;
                    this.AllowedProduct = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedProductRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.allowedProductField == default(AllowedProductType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedProductField.Length <= index)) {
                            return false;
                        }
                        else {
                            AllowedProductType[] array = new AllowedProductType[(this.allowedProductField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = allowedProductField[i];
                            }
                            for (i = (i + 1); (i < this.allowedProductField.Length); i = (i + 1)) {
                                array[i] = allowedProductField[i];
                            }
                            this.AllowedProduct = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AllowedProductInsertItem(int index, AllowedProductType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.allowedProductField == default(AllowedProductType[]))) {
                    return -1;
                }
                else {
                    if ((this.allowedProductField.Length <= index)) {
                        if ((this.AllowedProductAddItem(value) == true)) {
                            return this.AllowedProductLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        AllowedProductType[] array = new AllowedProductType[(this.allowedProductField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = allowedProductField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.allowedProductField.Length); j = (j + 1)) {
                            array[k] = allowedProductField[j];
                            k = (k + 1);
                        }
                        this.AllowedProduct = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.customerOrderField == default(CustomerOrderType[]))) {
                return 0;
            }
            else {
                return this.customerOrderField.Length;
            }
            // END ADDED BY XSD
        }
        public CustomerOrderType CustomerOrderGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return default(CustomerOrderType);
                }
                else {
                    if ((0 > index)) {
                        return default(CustomerOrderType);
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return default(CustomerOrderType);
                        }
                        else {
                            return this.customerOrderField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CustomerOrderType);
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderSetItem(int index, CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.customerOrderField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderAddItem(CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.customerOrderField.Length); i = (i + 1)) {
                        array[i] = customerOrderField[i];
                    }
                    array[i] = value;
                    this.CustomerOrder = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = customerOrderField[i];
                            }
                            for (i = (i + 1); (i < this.customerOrderField.Length); i = (i + 1)) {
                                array[i] = customerOrderField[i];
                            }
                            this.CustomerOrder = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderInsertItem(int index, CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return -1;
                }
                else {
                    if ((this.customerOrderField.Length <= index)) {
                        if ((this.CustomerOrderAddItem(value) == true)) {
                            return this.CustomerOrderLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = customerOrderField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.customerOrderField.Length); j = (j + 1)) {
                            array[k] = customerOrderField[j];
                            k = (k + 1);
                        }
                        this.CustomerOrder = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int EntryModeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.entryModeField == default(string[]))) {
                return 0;
            }
            else {
                return this.entryModeField.Length;
            }
            // END ADDED BY XSD
        }
        public string EntryModeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.entryModeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool EntryModeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.entryModeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.entryModeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.entryModeField.Length); i = (i + 1)) {
                        array[i] = entryModeField[i];
                    }
                    array[i] = value;
                    this.EntryMode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.entryModeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            for (i = (i + 1); (i < this.entryModeField.Length); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            this.EntryMode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int EntryModeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.entryModeField.Length <= index)) {
                        if ((this.EntryModeAddItem(value) == true)) {
                            return this.EntryModeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.entryModeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = entryModeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.entryModeField.Length); j = (j + 1)) {
                            array[k] = entryModeField[j];
                            k = (k + 1);
                        }
                        this.EntryMode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("03ec6e1b-7eb3-4606-be15-a1f4a96078c7")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SensitiveCardDataType : ISensitiveCardDataType {
        private TrackDataType[] trackDataField = new TrackDataType[0];
        private string pANField = default(string);
        private string cardSeqNumbField = default(string);
        private string expiryDateField = default(string);
        private bool trackDataFieldSpecified = false;
        private bool pANFieldSpecified = false;
        private bool cardSeqNumbFieldSpecified = false;
        private bool expiryDateFieldSpecified = false;
        public SensitiveCardDataType() {
        }
        public SensitiveCardDataType(SensitiveCardDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SensitiveCardDataType))) {
            }
            else {
                this.TrackData = value.TrackData;
                this.PAN = value.PAN;
                this.CardSeqNumb = value.CardSeqNumb;
                this.ExpiryDate = value.ExpiryDate;
                this.TrackDataSpecified = value.TrackDataSpecified;
                this.PANSpecified = value.PANSpecified;
                this.CardSeqNumbSpecified = value.CardSeqNumbSpecified;
                this.ExpiryDateSpecified = value.ExpiryDateSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrackData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrackDataType[] TrackData {
            get {
                return this.trackDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(TrackDataType[]))
                            || false)) {
                    this.trackDataField = new TrackDataType[0];
                    this.trackDataFieldSpecified = false;
                }
                else {
                    this.trackDataField = value;
                    this.trackDataFieldSpecified = (this.TrackDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PAN {
            get {
                return this.pANField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pANField = default(string);
                    this.pANFieldSpecified = false;
                }
                else {
                    this.pANField = value;
                    this.pANFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CardSeqNumb {
            get {
                return this.cardSeqNumbField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.cardSeqNumbField = default(string);
                    this.cardSeqNumbFieldSpecified = false;
                }
                else {
                    this.cardSeqNumbField = value;
                    this.cardSeqNumbFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.expiryDateField = default(string);
                    this.expiryDateFieldSpecified = false;
                }
                else {
                    this.expiryDateField = value;
                    this.expiryDateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TrackDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.trackDataFieldSpecified
                            || (this.TrackDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.trackDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PANSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pANFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pANFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardSeqNumbSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardSeqNumbFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardSeqNumbFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ExpiryDateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.expiryDateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.expiryDateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || (this.TrackDataLength() != 0))
                            || ((this.PAN != default(string))
                            && this.PANSpecified))
                            || ((this.CardSeqNumb != default(string))
                            && this.CardSeqNumbSpecified))
                            || ((this.ExpiryDate != default(string))
                            && this.ExpiryDateSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SensitiveCardDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SensitiveCardDataType";
                // END ADDED BY XSD
            }
        }
        public int TrackDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.trackDataField == default(TrackDataType[]))) {
                return 0;
            }
            else {
                return this.trackDataField.Length;
            }
            // END ADDED BY XSD
        }
        public TrackDataType TrackDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return default(TrackDataType);
                }
                else {
                    if ((0 > index)) {
                        return default(TrackDataType);
                    }
                    else {
                        if ((this.trackDataField.Length <= index)) {
                            return default(TrackDataType);
                        }
                        else {
                            return this.trackDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(TrackDataType);
            }
            // END ADDED BY XSD
        }
        public bool TrackDataSetItem(int index, TrackDataType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.trackDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.trackDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TrackDataAddItem(TrackDataType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return false;
                }
                else {
                    TrackDataType[] array = new TrackDataType[(this.trackDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.trackDataField.Length); i = (i + 1)) {
                        array[i] = trackDataField[i];
                    }
                    array[i] = value;
                    this.TrackData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TrackDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.trackDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            TrackDataType[] array = new TrackDataType[(this.trackDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = trackDataField[i];
                            }
                            for (i = (i + 1); (i < this.trackDataField.Length); i = (i + 1)) {
                                array[i] = trackDataField[i];
                            }
                            this.TrackData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int TrackDataInsertItem(int index, TrackDataType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return -1;
                }
                else {
                    if ((this.trackDataField.Length <= index)) {
                        if ((this.TrackDataAddItem(value) == true)) {
                            return this.TrackDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        TrackDataType[] array = new TrackDataType[(this.trackDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = trackDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.trackDataField.Length); j = (j + 1)) {
                            array[k] = trackDataField[j];
                            k = (k + 1);
                        }
                        this.TrackData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("1bbfed9c-a560-4bd6-bfcb-d84b20eac965")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TrackDataType : ITrackDataType {
        private int trackNumbField = default(int);
        private string trackFormatField = default(string);
        private string valueField = default(string);
        private int trackNumbDefaultValue = 2;
        private bool trackNumbFieldSpecified = false;
        private string trackFormatDefaultValue = "ISO";
        private bool trackFormatFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public TrackDataType() {
            this.trackNumbField = this.trackNumbDefaultValue;
            this.trackFormatField = this.trackFormatDefaultValue;
        }
        public TrackDataType(TrackDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TrackDataType))) {
            }
            else {
                this.TrackNumb = value.TrackNumb;
                this.TrackFormat = value.TrackFormat;
                this.Value = value.Value;
                this.TrackNumbSpecified = value.TrackNumbSpecified;
                this.TrackFormatSpecified = value.TrackFormatSpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(2)]
        public int TrackNumb {
            get {
                return this.trackNumbField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.TrackNumbDefaultValue)
                            || false)) {
                    this.trackNumbField = this.TrackNumbDefaultValue;
                    this.trackNumbFieldSpecified = false;
                }
                else {
                    this.trackNumbField = value;
                    this.trackNumbFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("ISO")]
        public string TrackFormat {
            get {
                return this.trackFormatField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.TrackFormatDefaultValue)
                            || (value == default(string)))) {
                    this.trackFormatField = this.TrackFormatDefaultValue;
                    this.trackFormatFieldSpecified = false;
                }
                else {
                    this.trackFormatField = value;
                    this.trackFormatFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.valueField = default(string);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public int TrackNumbDefaultValue {
            get {
                return this.trackNumbDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TrackNumbSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.trackNumbFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.trackNumbFieldSpecified = value;
                if ((this.trackNumbFieldSpecified
                            && (this.trackNumbField == default(int)))) {
                    this.trackNumbField = this.trackNumbDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TrackFormatDefaultValue {
            get {
                return this.trackFormatDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TrackFormatSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.trackFormatFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.trackFormatFieldSpecified = value;
                if ((this.trackFormatFieldSpecified
                            && (this.trackFormatField == default(string)))) {
                    this.trackFormatField = this.trackFormatDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.TrackNumb != default(int))
                            && this.TrackNumbSpecified))
                            || ((this.TrackFormat != default(string))
                            && this.TrackFormatSpecified))
                            || ((this.Value != default(string))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TrackDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TrackDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("b9b823e4-ea51-4c3b-9dc7-9f2bd197a492")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentTokenType : IPaymentTokenType {
        private string tokenRequestedTypeField = default(string);
        private string tokenValueField = default(string);
        private string expiryDateTimeField = default(string);
        private bool expiryDateTimeFieldSpecified = default(bool);
        private bool tokenRequestedTypeFieldSpecified = false;
        private bool tokenValueFieldSpecified = false;
        public PaymentTokenType() {
        }
        public PaymentTokenType(PaymentTokenType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentTokenType))) {
            }
            else {
                this.TokenRequestedType = value.TokenRequestedType;
                this.TokenValue = value.TokenValue;
                this.ExpiryDateTime = value.ExpiryDateTime;
                this.ExpiryDateTimeSpecified = value.ExpiryDateTimeSpecified;
                this.TokenRequestedTypeSpecified = value.TokenRequestedTypeSpecified;
                this.TokenValueSpecified = value.TokenValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TokenRequestedType {
            get {
                return this.tokenRequestedTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.tokenRequestedTypeField = default(string);
                    this.tokenRequestedTypeFieldSpecified = false;
                }
                else {
                    this.tokenRequestedTypeField = value;
                    this.tokenRequestedTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TokenValue {
            get {
                return this.tokenValueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.tokenValueField = default(string);
                    this.tokenValueFieldSpecified = false;
                }
                else {
                    this.tokenValueField = value;
                    this.tokenValueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExpiryDateTime {
            get {
                return this.expiryDateTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.expiryDateTimeField = default(string);
                    this.expiryDateTimeFieldSpecified = false;
                }
                else {
                    this.expiryDateTimeField = value;
                    this.expiryDateTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiryDateTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.expiryDateTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.expiryDateTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TokenRequestedTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.tokenRequestedTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.tokenRequestedTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TokenValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.tokenValueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.tokenValueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.TokenRequestedType != default(string))
                            && this.TokenRequestedTypeSpecified))
                            || ((this.TokenValue != default(string))
                            && this.TokenValueSpecified))
                            || ((this.ExpiryDateTime != default(string))
                            && this.ExpiryDateTimeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentTokenTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentTokenType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("45f9a11f-843f-4b76-ae81-4ff0271042ab")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CustomerOrderType : ICustomerOrderType {
        private string additionalInformationField = default(string);
        private string customerOrderIDField = default(string);
        private bool openOrderStateField = default(bool);
        private string startDateField = default(string);
        private string endDateField = default(string);
        private bool endDateFieldSpecified = default(bool);
        private double forecastedAmountField = default(double);
        private double currentAmountField = default(double);
        private bool currentAmountFieldSpecified = default(bool);
        private string currencyField = default(string);
        private string accessedByField = default(string);
        private bool additionalInformationFieldSpecified = false;
        private bool customerOrderIDFieldSpecified = false;
        private bool openOrderStateDefaultValue = false;
        private bool openOrderStateFieldSpecified = false;
        private bool startDateFieldSpecified = false;
        private bool forecastedAmountFieldSpecified = false;
        private bool currencyFieldSpecified = false;
        private bool accessedByFieldSpecified = false;
        public CustomerOrderType() {
            this.openOrderStateField = this.openOrderStateDefaultValue;
        }
        public CustomerOrderType(CustomerOrderType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CustomerOrderType))) {
            }
            else {
                this.AdditionalInformation = value.AdditionalInformation;
                this.CustomerOrderID = value.CustomerOrderID;
                this.OpenOrderState = value.OpenOrderState;
                this.StartDate = value.StartDate;
                this.EndDate = value.EndDate;
                this.EndDateSpecified = value.EndDateSpecified;
                this.ForecastedAmount = value.ForecastedAmount;
                this.CurrentAmount = value.CurrentAmount;
                this.CurrentAmountSpecified = value.CurrentAmountSpecified;
                this.Currency = value.Currency;
                this.AccessedBy = value.AccessedBy;
                this.AdditionalInformationSpecified = value.AdditionalInformationSpecified;
                this.CustomerOrderIDSpecified = value.CustomerOrderIDSpecified;
                this.OpenOrderStateSpecified = value.OpenOrderStateSpecified;
                this.StartDateSpecified = value.StartDateSpecified;
                this.ForecastedAmountSpecified = value.ForecastedAmountSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
                this.AccessedBySpecified = value.AccessedBySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AdditionalInformation {
            get {
                return this.additionalInformationField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.additionalInformationField = default(string);
                    this.additionalInformationFieldSpecified = false;
                }
                else {
                    this.additionalInformationField = value;
                    this.additionalInformationFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerOrderID {
            get {
                return this.customerOrderIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerOrderIDField = default(string);
                    this.customerOrderIDFieldSpecified = false;
                }
                else {
                    this.customerOrderIDField = value;
                    this.customerOrderIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool OpenOrderState {
            get {
                return this.openOrderStateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.OpenOrderStateDefaultValue)
                            || false)) {
                    this.openOrderStateField = this.OpenOrderStateDefaultValue;
                    this.openOrderStateFieldSpecified = false;
                }
                else {
                    this.openOrderStateField = value;
                    this.openOrderStateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.startDateField = default(string);
                    this.startDateFieldSpecified = false;
                }
                else {
                    this.startDateField = value;
                    this.startDateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.endDateField = default(string);
                    this.endDateFieldSpecified = false;
                }
                else {
                    this.endDateField = value;
                    this.endDateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.endDateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.endDateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ForecastedAmount {
            get {
                return this.forecastedAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.forecastedAmountField = default(double);
                    this.forecastedAmountFieldSpecified = false;
                }
                else {
                    this.forecastedAmountField = value;
                    this.forecastedAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CurrentAmount {
            get {
                return this.currentAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.currentAmountField = default(double);
                    this.currentAmountFieldSpecified = false;
                }
                else {
                    this.currentAmountField = value;
                    this.currentAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currentAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currentAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AccessedBy {
            get {
                return this.accessedByField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.accessedByField = default(string);
                    this.accessedByFieldSpecified = false;
                }
                else {
                    this.accessedByField = value;
                    this.accessedByFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AdditionalInformationSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.additionalInformationFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.additionalInformationFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OpenOrderStateDefaultValue {
            get {
                return this.openOrderStateDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OpenOrderStateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.openOrderStateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.openOrderStateFieldSpecified = value;
                if ((this.openOrderStateFieldSpecified
                            && (this.openOrderStateField == default(bool)))) {
                    this.openOrderStateField = this.openOrderStateDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StartDateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.startDateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.startDateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForecastedAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.forecastedAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.forecastedAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AccessedBySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.accessedByFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.accessedByFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((false
                            || ((this.AdditionalInformation != default(string))
                            && this.AdditionalInformationSpecified))
                            || ((this.CustomerOrderID != default(string))
                            && this.CustomerOrderIDSpecified))
                            || ((this.OpenOrderState != default(bool))
                            && this.OpenOrderStateSpecified))
                            || ((this.StartDate != default(string))
                            && this.StartDateSpecified))
                            || ((this.EndDate != default(string))
                            && this.EndDateSpecified))
                            || ((this.ForecastedAmount != default(double))
                            && this.ForecastedAmountSpecified))
                            || ((this.CurrentAmount != default(double))
                            && this.CurrentAmountSpecified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified))
                            || ((this.AccessedBy != default(string))
                            && this.AccessedBySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CustomerOrderTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CustomerOrderType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e002f68c-3950-4e55-97a1-0d1e3c243d7f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CheckDataType : ICheckDataType {
        private string bankIDField = default(string);
        private string accountNumberField = default(string);
        private string checkNumberField = default(string);
        private TrackDataType trackDataField = new TrackDataType();
        private string checkCardNumberField = default(string);
        private string typeCodeField = default(string);
        private string countryField = default(string);
        private bool bankIDFieldSpecified = false;
        private bool accountNumberFieldSpecified = false;
        private bool checkNumberFieldSpecified = false;
        private bool trackDataFieldSpecified = false;
        private bool checkCardNumberFieldSpecified = false;
        private string typeCodeDefaultValue = "Personal";
        private bool typeCodeFieldSpecified = false;
        private bool countryFieldSpecified = false;
        public CheckDataType() {
            this.typeCodeField = this.typeCodeDefaultValue;
        }
        public CheckDataType(CheckDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CheckDataType))) {
            }
            else {
                this.BankID = value.BankID;
                this.AccountNumber = value.AccountNumber;
                this.CheckNumber = value.CheckNumber;
                this.TrackData = value.TrackData;
                this.CheckCardNumber = value.CheckCardNumber;
                this.TypeCode = value.TypeCode;
                this.Country = value.Country;
                this.BankIDSpecified = value.BankIDSpecified;
                this.AccountNumberSpecified = value.AccountNumberSpecified;
                this.CheckNumberSpecified = value.CheckNumberSpecified;
                this.TrackDataSpecified = value.TrackDataSpecified;
                this.CheckCardNumberSpecified = value.CheckCardNumberSpecified;
                this.TypeCodeSpecified = value.TypeCodeSpecified;
                this.CountrySpecified = value.CountrySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BankID {
            get {
                return this.bankIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.bankIDField = default(string);
                    this.bankIDFieldSpecified = false;
                }
                else {
                    this.bankIDField = value;
                    this.bankIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.accountNumberField = default(string);
                    this.accountNumberFieldSpecified = false;
                }
                else {
                    this.accountNumberField = value;
                    this.accountNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CheckNumber {
            get {
                return this.checkNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.checkNumberField = default(string);
                    this.checkNumberFieldSpecified = false;
                }
                else {
                    this.checkNumberField = value;
                    this.checkNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrackDataType TrackData {
            get {
                return this.trackDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TrackDataType))
                            || false)) {
                    this.trackDataField = new TrackDataType();
                    this.trackDataFieldSpecified = false;
                }
                else {
                    this.trackDataField = value;
                    this.trackDataFieldSpecified = this.TrackData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CheckCardNumber {
            get {
                return this.checkCardNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.checkCardNumberField = default(string);
                    this.checkCardNumberFieldSpecified = false;
                }
                else {
                    this.checkCardNumberField = value;
                    this.checkCardNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Personal")]
        public string TypeCode {
            get {
                return this.typeCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.TypeCodeDefaultValue)
                            || (value == default(string)))) {
                    this.typeCodeField = this.TypeCodeDefaultValue;
                    this.typeCodeFieldSpecified = false;
                }
                else {
                    this.typeCodeField = value;
                    this.typeCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.countryField = default(string);
                    this.countryFieldSpecified = false;
                }
                else {
                    this.countryField = value;
                    this.countryFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BankIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.bankIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.bankIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AccountNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.accountNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.accountNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CheckNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.checkNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.checkNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TrackDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.trackDataFieldSpecified || this.TrackData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.trackDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CheckCardNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.checkCardNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.checkCardNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TypeCodeDefaultValue {
            get {
                return this.typeCodeDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TypeCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.typeCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.typeCodeFieldSpecified = value;
                if ((this.typeCodeFieldSpecified
                            && (this.typeCodeField == default(string)))) {
                    this.typeCodeField = this.typeCodeDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CountrySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.countryFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.countryFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.TrackData != default(TrackDataType))
                            && this.TrackDataSpecified))
                            || ((this.BankID != default(string))
                            && this.BankIDSpecified))
                            || ((this.AccountNumber != default(string))
                            && this.AccountNumberSpecified))
                            || ((this.CheckNumber != default(string))
                            && this.CheckNumberSpecified))
                            || ((this.CheckCardNumber != default(string))
                            && this.CheckCardNumberSpecified))
                            || ((this.TypeCode != default(string))
                            && this.TypeCodeSpecified))
                            || ((this.Country != default(string))
                            && this.CountrySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CheckDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CheckDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ec6604e0-781a-42d6-a708-14117c10dfca")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class MobileDataType : IMobileDataType {
        private string mobileCountryCodeField = default(string);
        private GeolocationType geolocationField = new GeolocationType();
        private ContentInformationType protectedMobileDataField = new ContentInformationType();
        private SensitiveMobileDataType sensitiveMobileDataField = new SensitiveMobileDataType();
        private string mobileNetworkCodeField = default(string);
        private string maskedMSISDNField = default(string);
        private bool mobileCountryCodeFieldSpecified = false;
        private bool geolocationFieldSpecified = false;
        private bool protectedMobileDataFieldSpecified = false;
        private bool sensitiveMobileDataFieldSpecified = false;
        private bool mobileNetworkCodeFieldSpecified = false;
        private bool maskedMSISDNFieldSpecified = false;
        public MobileDataType() {
        }
        public MobileDataType(MobileDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(MobileDataType))) {
            }
            else {
                this.MobileCountryCode = value.MobileCountryCode;
                this.Geolocation = value.Geolocation;
                this.ProtectedMobileData = value.ProtectedMobileData;
                this.SensitiveMobileData = value.SensitiveMobileData;
                this.MobileNetworkCode = value.MobileNetworkCode;
                this.MaskedMSISDN = value.MaskedMSISDN;
                this.MobileCountryCodeSpecified = value.MobileCountryCodeSpecified;
                this.GeolocationSpecified = value.GeolocationSpecified;
                this.ProtectedMobileDataSpecified = value.ProtectedMobileDataSpecified;
                this.SensitiveMobileDataSpecified = value.SensitiveMobileDataSpecified;
                this.MobileNetworkCodeSpecified = value.MobileNetworkCodeSpecified;
                this.MaskedMSISDNSpecified = value.MaskedMSISDNSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MobileCountryCode {
            get {
                return this.mobileCountryCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.mobileCountryCodeField = default(string);
                    this.mobileCountryCodeFieldSpecified = false;
                }
                else {
                    this.mobileCountryCodeField = value;
                    this.mobileCountryCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GeolocationType Geolocation {
            get {
                return this.geolocationField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(GeolocationType))
                            || false)) {
                    this.geolocationField = new GeolocationType();
                    this.geolocationFieldSpecified = false;
                }
                else {
                    this.geolocationField = value;
                    this.geolocationFieldSpecified = this.Geolocation.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContentInformationType ProtectedMobileData {
            get {
                return this.protectedMobileDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ContentInformationType))
                            || false)) {
                    this.protectedMobileDataField = new ContentInformationType();
                    this.protectedMobileDataFieldSpecified = false;
                }
                else {
                    this.protectedMobileDataField = value;
                    this.protectedMobileDataFieldSpecified = this.ProtectedMobileData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SensitiveMobileDataType SensitiveMobileData {
            get {
                return this.sensitiveMobileDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SensitiveMobileDataType))
                            || false)) {
                    this.sensitiveMobileDataField = new SensitiveMobileDataType();
                    this.sensitiveMobileDataFieldSpecified = false;
                }
                else {
                    this.sensitiveMobileDataField = value;
                    this.sensitiveMobileDataFieldSpecified = this.SensitiveMobileData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MobileNetworkCode {
            get {
                return this.mobileNetworkCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.mobileNetworkCodeField = default(string);
                    this.mobileNetworkCodeFieldSpecified = false;
                }
                else {
                    this.mobileNetworkCodeField = value;
                    this.mobileNetworkCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MaskedMSISDN {
            get {
                return this.maskedMSISDNField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.maskedMSISDNField = default(string);
                    this.maskedMSISDNFieldSpecified = false;
                }
                else {
                    this.maskedMSISDNField = value;
                    this.maskedMSISDNFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MobileCountryCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.mobileCountryCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.mobileCountryCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool GeolocationSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.geolocationFieldSpecified || this.Geolocation.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.geolocationFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProtectedMobileDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.protectedMobileDataFieldSpecified || this.ProtectedMobileData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.protectedMobileDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SensitiveMobileDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.sensitiveMobileDataFieldSpecified || this.SensitiveMobileData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.sensitiveMobileDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MobileNetworkCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.mobileNetworkCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.mobileNetworkCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaskedMSISDNSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maskedMSISDNFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maskedMSISDNFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.Geolocation != default(GeolocationType))
                            && this.GeolocationSpecified))
                            || ((this.ProtectedMobileData != default(ContentInformationType))
                            && this.ProtectedMobileDataSpecified))
                            || ((this.SensitiveMobileData != default(SensitiveMobileDataType))
                            && this.SensitiveMobileDataSpecified))
                            || ((this.MobileCountryCode != default(string))
                            && this.MobileCountryCodeSpecified))
                            || ((this.MobileNetworkCode != default(string))
                            && this.MobileNetworkCodeSpecified))
                            || ((this.MaskedMSISDN != default(string))
                            && this.MaskedMSISDNSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string MobileDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "MobileDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("96788751-b5a3-424c-b7ac-63f5590334b0")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class GeolocationType : IGeolocationType {
        private GeographicCoordinatesType geographicCoordinatesField = new GeographicCoordinatesType();
        private UTMCoordinatesType uTMCoordinatesField = new UTMCoordinatesType();
        private bool geographicCoordinatesFieldSpecified = false;
        private bool uTMCoordinatesFieldSpecified = false;
        public GeolocationType() {
        }
        public GeolocationType(GeolocationType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(GeolocationType))) {
            }
            else {
                this.GeographicCoordinates = value.GeographicCoordinates;
                this.UTMCoordinates = value.UTMCoordinates;
                this.GeographicCoordinatesSpecified = value.GeographicCoordinatesSpecified;
                this.UTMCoordinatesSpecified = value.UTMCoordinatesSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GeographicCoordinatesType GeographicCoordinates {
            get {
                return this.geographicCoordinatesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(GeographicCoordinatesType))
                            || false)) {
                    this.geographicCoordinatesField = new GeographicCoordinatesType();
                    this.geographicCoordinatesFieldSpecified = false;
                }
                else {
                    this.geographicCoordinatesField = value;
                    this.geographicCoordinatesFieldSpecified = this.GeographicCoordinates.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UTMCoordinatesType UTMCoordinates {
            get {
                return this.uTMCoordinatesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(UTMCoordinatesType))
                            || false)) {
                    this.uTMCoordinatesField = new UTMCoordinatesType();
                    this.uTMCoordinatesFieldSpecified = false;
                }
                else {
                    this.uTMCoordinatesField = value;
                    this.uTMCoordinatesFieldSpecified = this.UTMCoordinates.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool GeographicCoordinatesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.geographicCoordinatesFieldSpecified || this.GeographicCoordinates.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.geographicCoordinatesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool UTMCoordinatesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.uTMCoordinatesFieldSpecified || this.UTMCoordinates.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.uTMCoordinatesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.GeographicCoordinates != default(GeographicCoordinatesType))
                            && this.GeographicCoordinatesSpecified))
                            || ((this.UTMCoordinates != default(UTMCoordinatesType))
                            && this.UTMCoordinatesSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string GeolocationTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "GeolocationType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ff8c227b-3dbd-410a-b150-a853de2babec")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class GeographicCoordinatesType : IGeographicCoordinatesType {
        private string latitudeField = default(string);
        private string longitudeField = default(string);
        private bool latitudeFieldSpecified = false;
        private bool longitudeFieldSpecified = false;
        public GeographicCoordinatesType() {
        }
        public GeographicCoordinatesType(GeographicCoordinatesType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(GeographicCoordinatesType))) {
            }
            else {
                this.Latitude = value.Latitude;
                this.Longitude = value.Longitude;
                this.LatitudeSpecified = value.LatitudeSpecified;
                this.LongitudeSpecified = value.LongitudeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Latitude {
            get {
                return this.latitudeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.latitudeField = default(string);
                    this.latitudeFieldSpecified = false;
                }
                else {
                    this.latitudeField = value;
                    this.latitudeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Longitude {
            get {
                return this.longitudeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.longitudeField = default(string);
                    this.longitudeFieldSpecified = false;
                }
                else {
                    this.longitudeField = value;
                    this.longitudeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LatitudeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.latitudeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.latitudeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LongitudeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.longitudeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.longitudeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Latitude != default(string))
                            && this.LatitudeSpecified))
                            || ((this.Longitude != default(string))
                            && this.LongitudeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string GeographicCoordinatesTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "GeographicCoordinatesType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ede98f9d-ddd3-4690-a99a-646114492c43")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class UTMCoordinatesType : IUTMCoordinatesType {
        private string uTMZoneField = default(string);
        private string uTMEastwardField = default(string);
        private string uTMNorthwardField = default(string);
        private bool uTMZoneFieldSpecified = false;
        private bool uTMEastwardFieldSpecified = false;
        private bool uTMNorthwardFieldSpecified = false;
        public UTMCoordinatesType() {
        }
        public UTMCoordinatesType(UTMCoordinatesType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(UTMCoordinatesType))) {
            }
            else {
                this.UTMZone = value.UTMZone;
                this.UTMEastward = value.UTMEastward;
                this.UTMNorthward = value.UTMNorthward;
                this.UTMZoneSpecified = value.UTMZoneSpecified;
                this.UTMEastwardSpecified = value.UTMEastwardSpecified;
                this.UTMNorthwardSpecified = value.UTMNorthwardSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UTMZone {
            get {
                return this.uTMZoneField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.uTMZoneField = default(string);
                    this.uTMZoneFieldSpecified = false;
                }
                else {
                    this.uTMZoneField = value;
                    this.uTMZoneFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UTMEastward {
            get {
                return this.uTMEastwardField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.uTMEastwardField = default(string);
                    this.uTMEastwardFieldSpecified = false;
                }
                else {
                    this.uTMEastwardField = value;
                    this.uTMEastwardFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UTMNorthward {
            get {
                return this.uTMNorthwardField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.uTMNorthwardField = default(string);
                    this.uTMNorthwardFieldSpecified = false;
                }
                else {
                    this.uTMNorthwardField = value;
                    this.uTMNorthwardFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool UTMZoneSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.uTMZoneFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.uTMZoneFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool UTMEastwardSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.uTMEastwardFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.uTMEastwardFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool UTMNorthwardSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.uTMNorthwardFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.uTMNorthwardFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.UTMZone != default(string))
                            && this.UTMZoneSpecified))
                            || ((this.UTMEastward != default(string))
                            && this.UTMEastwardSpecified))
                            || ((this.UTMNorthward != default(string))
                            && this.UTMNorthwardSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string UTMCoordinatesTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "UTMCoordinatesType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ea4f2144-4ab4-41cd-b1e9-7895243dd836")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SensitiveMobileDataType : ISensitiveMobileDataType {
        private string mSISDNField = default(string);
        private string iMSIField = default(string);
        private string iMEIField = default(string);
        private bool mSISDNFieldSpecified = false;
        private bool iMSIFieldSpecified = false;
        private bool iMEIFieldSpecified = false;
        public SensitiveMobileDataType() {
        }
        public SensitiveMobileDataType(SensitiveMobileDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SensitiveMobileDataType))) {
            }
            else {
                this.MSISDN = value.MSISDN;
                this.IMSI = value.IMSI;
                this.IMEI = value.IMEI;
                this.MSISDNSpecified = value.MSISDNSpecified;
                this.IMSISpecified = value.IMSISpecified;
                this.IMEISpecified = value.IMEISpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MSISDN {
            get {
                return this.mSISDNField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.mSISDNField = default(string);
                    this.mSISDNFieldSpecified = false;
                }
                else {
                    this.mSISDNField = value;
                    this.mSISDNFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IMSI {
            get {
                return this.iMSIField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.iMSIField = default(string);
                    this.iMSIFieldSpecified = false;
                }
                else {
                    this.iMSIField = value;
                    this.iMSIFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IMEI {
            get {
                return this.iMEIField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.iMEIField = default(string);
                    this.iMEIFieldSpecified = false;
                }
                else {
                    this.iMEIField = value;
                    this.iMEIFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MSISDNSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.mSISDNFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.mSISDNFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IMSISpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.iMSIFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.iMSIFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IMEISpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.iMEIFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.iMEIFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.MSISDN != default(string))
                            && this.MSISDNSpecified))
                            || ((this.IMSI != default(string))
                            && this.IMSISpecified))
                            || ((this.IMEI != default(string))
                            && this.IMEISpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SensitiveMobileDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SensitiveMobileDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("15f43455-5bef-4993-ae81-8c4f085fa9aa")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyAccountReqType : ILoyaltyAccountReqType {
        private TransactionIdentificationType cardAcquisitionReferenceField = new TransactionIdentificationType();
        private LoyaltyAccountIDType loyaltyAccountIDField = new LoyaltyAccountIDType();
        private bool cardAcquisitionReferenceFieldSpecified = false;
        private bool loyaltyAccountIDFieldSpecified = false;
        public LoyaltyAccountReqType() {
        }
        public LoyaltyAccountReqType(LoyaltyAccountReqType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyAccountReqType))) {
            }
            else {
                this.CardAcquisitionReference = value.CardAcquisitionReference;
                this.LoyaltyAccountID = value.LoyaltyAccountID;
                this.CardAcquisitionReferenceSpecified = value.CardAcquisitionReferenceSpecified;
                this.LoyaltyAccountIDSpecified = value.LoyaltyAccountIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType CardAcquisitionReference {
            get {
                return this.cardAcquisitionReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.cardAcquisitionReferenceField = new TransactionIdentificationType();
                    this.cardAcquisitionReferenceFieldSpecified = false;
                }
                else {
                    this.cardAcquisitionReferenceField = value;
                    this.cardAcquisitionReferenceFieldSpecified = this.CardAcquisitionReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountIDType LoyaltyAccountID {
            get {
                return this.loyaltyAccountIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountIDType))
                            || false)) {
                    this.loyaltyAccountIDField = new LoyaltyAccountIDType();
                    this.loyaltyAccountIDFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountIDField = value;
                    this.loyaltyAccountIDFieldSpecified = this.LoyaltyAccountID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardAcquisitionReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardAcquisitionReferenceFieldSpecified || this.CardAcquisitionReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardAcquisitionReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountIDFieldSpecified || this.LoyaltyAccountID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.CardAcquisitionReference != default(TransactionIdentificationType))
                            && this.CardAcquisitionReferenceSpecified))
                            || ((this.LoyaltyAccountID != default(LoyaltyAccountIDType))
                            && this.LoyaltyAccountIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyAccountReqTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyAccountReqType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("78b8071a-a837-4e90-9341-ce7c8ed21821")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyAccountIDType : ILoyaltyAccountIDType {
        private string[] entryModeField = new string[0];
        private string identificationTypeField = default(string);
        private string identificationSupportField = default(string);
        private string valueField = default(string);
        private bool entryModeFieldSpecified = false;
        private bool identificationTypeFieldSpecified = false;
        private bool identificationSupportFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public LoyaltyAccountIDType() {
        }
        public LoyaltyAccountIDType(LoyaltyAccountIDType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyAccountIDType))) {
            }
            else {
                this.EntryMode = value.EntryMode;
                this.IdentificationType = value.IdentificationType;
                this.IdentificationSupport = value.IdentificationSupport;
                this.Value = value.Value;
                this.EntryModeSpecified = value.EntryModeSpecified;
                this.IdentificationTypeSpecified = value.IdentificationTypeSpecified;
                this.IdentificationSupportSpecified = value.IdentificationSupportSpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] EntryMode {
            get {
                return this.entryModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.entryModeField = new string[0];
                    this.entryModeFieldSpecified = false;
                }
                else {
                    this.entryModeField = value;
                    this.entryModeFieldSpecified = (this.EntryModeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IdentificationType {
            get {
                return this.identificationTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.identificationTypeField = default(string);
                    this.identificationTypeFieldSpecified = false;
                }
                else {
                    this.identificationTypeField = value;
                    this.identificationTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IdentificationSupport {
            get {
                return this.identificationSupportField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.identificationSupportField = default(string);
                    this.identificationSupportFieldSpecified = false;
                }
                else {
                    this.identificationSupportField = value;
                    this.identificationSupportFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.valueField = default(string);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EntryModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.entryModeFieldSpecified
                            || (this.EntryModeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.entryModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IdentificationTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.identificationTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.identificationTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IdentificationSupportSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.identificationSupportFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.identificationSupportFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || (this.EntryModeLength() != 0))
                            || ((this.IdentificationType != default(string))
                            && this.IdentificationTypeSpecified))
                            || ((this.IdentificationSupport != default(string))
                            && this.IdentificationSupportSpecified))
                            || ((this.Value != default(string))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyAccountIDTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyAccountIDType";
                // END ADDED BY XSD
            }
        }
        public int EntryModeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.entryModeField == default(string[]))) {
                return 0;
            }
            else {
                return this.entryModeField.Length;
            }
            // END ADDED BY XSD
        }
        public string EntryModeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.entryModeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool EntryModeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.entryModeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.entryModeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.entryModeField.Length); i = (i + 1)) {
                        array[i] = entryModeField[i];
                    }
                    array[i] = value;
                    this.EntryMode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.entryModeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            for (i = (i + 1); (i < this.entryModeField.Length); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            this.EntryMode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int EntryModeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.entryModeField.Length <= index)) {
                        if ((this.EntryModeAddItem(value) == true)) {
                            return this.EntryModeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.entryModeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = entryModeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.entryModeField.Length); j = (j + 1)) {
                            array[k] = entryModeField[j];
                            k = (k + 1);
                        }
                        this.EntryMode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("d00e93c2-3c53-454c-83de-f2d464c3867a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class BalanceInquiryResponseType : IBalanceInquiryResponseType {
        private ResponseType responseField = new ResponseType();
        private PaymentAccountStatusType paymentAccountStatusField = new PaymentAccountStatusType();
        private LoyaltyAccountStatusType loyaltyAccountStatusField = new LoyaltyAccountStatusType();
        private bool responseFieldSpecified = false;
        private bool paymentAccountStatusFieldSpecified = false;
        private bool loyaltyAccountStatusFieldSpecified = false;
        public BalanceInquiryResponseType() {
        }
        public BalanceInquiryResponseType(BalanceInquiryResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(BalanceInquiryResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.PaymentAccountStatus = value.PaymentAccountStatus;
                this.LoyaltyAccountStatus = value.LoyaltyAccountStatus;
                this.ResponseSpecified = value.ResponseSpecified;
                this.PaymentAccountStatusSpecified = value.PaymentAccountStatusSpecified;
                this.LoyaltyAccountStatusSpecified = value.LoyaltyAccountStatusSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentAccountStatusType PaymentAccountStatus {
            get {
                return this.paymentAccountStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentAccountStatusType))
                            || false)) {
                    this.paymentAccountStatusField = new PaymentAccountStatusType();
                    this.paymentAccountStatusFieldSpecified = false;
                }
                else {
                    this.paymentAccountStatusField = value;
                    this.paymentAccountStatusFieldSpecified = this.PaymentAccountStatus.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountStatusType LoyaltyAccountStatus {
            get {
                return this.loyaltyAccountStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountStatusType))
                            || false)) {
                    this.loyaltyAccountStatusField = new LoyaltyAccountStatusType();
                    this.loyaltyAccountStatusFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountStatusField = value;
                    this.loyaltyAccountStatusFieldSpecified = this.LoyaltyAccountStatus.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentAccountStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentAccountStatusFieldSpecified || this.PaymentAccountStatus.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentAccountStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountStatusFieldSpecified || this.LoyaltyAccountStatus.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.PaymentAccountStatus != default(PaymentAccountStatusType))
                            && this.PaymentAccountStatusSpecified))
                            || ((this.LoyaltyAccountStatus != default(LoyaltyAccountStatusType))
                            && this.LoyaltyAccountStatusSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string BalanceInquiryResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "BalanceInquiryResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("42b6e420-3f41-4966-816e-1203e9995bef")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentAccountStatusType : IPaymentAccountStatusType {
        private PaymentInstrumentDataType paymentInstrumentDataField = new PaymentInstrumentDataType();
        private PaymentAcquirerDataType paymentAcquirerDataField = new PaymentAcquirerDataType();
        private LoyaltyAccountStatusType loyaltyAccountStatusField = new LoyaltyAccountStatusType();
        private string currencyField = default(string);
        private double currentBalanceField = default(double);
        private bool currentBalanceFieldSpecified = default(bool);
        private bool paymentInstrumentDataFieldSpecified = false;
        private bool paymentAcquirerDataFieldSpecified = false;
        private bool loyaltyAccountStatusFieldSpecified = false;
        private bool currencyFieldSpecified = false;
        public PaymentAccountStatusType() {
        }
        public PaymentAccountStatusType(PaymentAccountStatusType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentAccountStatusType))) {
            }
            else {
                this.PaymentInstrumentData = value.PaymentInstrumentData;
                this.PaymentAcquirerData = value.PaymentAcquirerData;
                this.LoyaltyAccountStatus = value.LoyaltyAccountStatus;
                this.Currency = value.Currency;
                this.CurrentBalance = value.CurrentBalance;
                this.CurrentBalanceSpecified = value.CurrentBalanceSpecified;
                this.PaymentInstrumentDataSpecified = value.PaymentInstrumentDataSpecified;
                this.PaymentAcquirerDataSpecified = value.PaymentAcquirerDataSpecified;
                this.LoyaltyAccountStatusSpecified = value.LoyaltyAccountStatusSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentInstrumentDataType PaymentInstrumentData {
            get {
                return this.paymentInstrumentDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentInstrumentDataType))
                            || false)) {
                    this.paymentInstrumentDataField = new PaymentInstrumentDataType();
                    this.paymentInstrumentDataFieldSpecified = false;
                }
                else {
                    this.paymentInstrumentDataField = value;
                    this.paymentInstrumentDataFieldSpecified = this.PaymentInstrumentData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentAcquirerDataType PaymentAcquirerData {
            get {
                return this.paymentAcquirerDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentAcquirerDataType))
                            || false)) {
                    this.paymentAcquirerDataField = new PaymentAcquirerDataType();
                    this.paymentAcquirerDataFieldSpecified = false;
                }
                else {
                    this.paymentAcquirerDataField = value;
                    this.paymentAcquirerDataFieldSpecified = this.PaymentAcquirerData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountStatusType LoyaltyAccountStatus {
            get {
                return this.loyaltyAccountStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountStatusType))
                            || false)) {
                    this.loyaltyAccountStatusField = new LoyaltyAccountStatusType();
                    this.loyaltyAccountStatusFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountStatusField = value;
                    this.loyaltyAccountStatusFieldSpecified = this.LoyaltyAccountStatus.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.currentBalanceField = default(double);
                    this.currentBalanceFieldSpecified = false;
                }
                else {
                    this.currentBalanceField = value;
                    this.currentBalanceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentBalanceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currentBalanceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currentBalanceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentInstrumentDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentInstrumentDataFieldSpecified || this.PaymentInstrumentData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentInstrumentDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentAcquirerDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentAcquirerDataFieldSpecified || this.PaymentAcquirerData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentAcquirerDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountStatusFieldSpecified || this.LoyaltyAccountStatus.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.PaymentInstrumentData != default(PaymentInstrumentDataType))
                            && this.PaymentInstrumentDataSpecified))
                            || ((this.PaymentAcquirerData != default(PaymentAcquirerDataType))
                            && this.PaymentAcquirerDataSpecified))
                            || ((this.LoyaltyAccountStatus != default(LoyaltyAccountStatusType))
                            && this.LoyaltyAccountStatusSpecified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified))
                            || ((this.CurrentBalance != default(double))
                            && this.CurrentBalanceSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentAccountStatusTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentAccountStatusType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("2fe3da15-fc28-41a7-a6ae-69d67a252056")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentAcquirerDataType : IPaymentAcquirerDataType {
        private TransactionIdentificationType acquirerTransactionIDField = new TransactionIdentificationType();
        private string approvalCodeField = default(string);
        private string acquirerIDField = default(string);
        private string merchantIDField = default(string);
        private string acquirerPOIIDField = default(string);
        private bool acquirerTransactionIDFieldSpecified = false;
        private bool approvalCodeFieldSpecified = false;
        private bool acquirerIDFieldSpecified = false;
        private bool merchantIDFieldSpecified = false;
        private bool acquirerPOIIDFieldSpecified = false;
        public PaymentAcquirerDataType() {
        }
        public PaymentAcquirerDataType(PaymentAcquirerDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentAcquirerDataType))) {
            }
            else {
                this.AcquirerTransactionID = value.AcquirerTransactionID;
                this.ApprovalCode = value.ApprovalCode;
                this.AcquirerID = value.AcquirerID;
                this.MerchantID = value.MerchantID;
                this.AcquirerPOIID = value.AcquirerPOIID;
                this.AcquirerTransactionIDSpecified = value.AcquirerTransactionIDSpecified;
                this.ApprovalCodeSpecified = value.ApprovalCodeSpecified;
                this.AcquirerIDSpecified = value.AcquirerIDSpecified;
                this.MerchantIDSpecified = value.MerchantIDSpecified;
                this.AcquirerPOIIDSpecified = value.AcquirerPOIIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType AcquirerTransactionID {
            get {
                return this.acquirerTransactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.acquirerTransactionIDField = new TransactionIdentificationType();
                    this.acquirerTransactionIDFieldSpecified = false;
                }
                else {
                    this.acquirerTransactionIDField = value;
                    this.acquirerTransactionIDFieldSpecified = this.AcquirerTransactionID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ApprovalCode {
            get {
                return this.approvalCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.approvalCodeField = default(string);
                    this.approvalCodeFieldSpecified = false;
                }
                else {
                    this.approvalCodeField = value;
                    this.approvalCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AcquirerID {
            get {
                return this.acquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.acquirerIDField = default(string);
                    this.acquirerIDFieldSpecified = false;
                }
                else {
                    this.acquirerIDField = value;
                    this.acquirerIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MerchantID {
            get {
                return this.merchantIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.merchantIDField = default(string);
                    this.merchantIDFieldSpecified = false;
                }
                else {
                    this.merchantIDField = value;
                    this.merchantIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AcquirerPOIID {
            get {
                return this.acquirerPOIIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.acquirerPOIIDField = default(string);
                    this.acquirerPOIIDFieldSpecified = false;
                }
                else {
                    this.acquirerPOIIDField = value;
                    this.acquirerPOIIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerTransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerTransactionIDFieldSpecified || this.AcquirerTransactionID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerTransactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ApprovalCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.approvalCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.approvalCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MerchantIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.merchantIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.merchantIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerPOIIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerPOIIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerPOIIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.AcquirerTransactionID != default(TransactionIdentificationType))
                            && this.AcquirerTransactionIDSpecified))
                            || ((this.ApprovalCode != default(string))
                            && this.ApprovalCodeSpecified))
                            || ((this.AcquirerID != default(string))
                            && this.AcquirerIDSpecified))
                            || ((this.MerchantID != default(string))
                            && this.MerchantIDSpecified))
                            || ((this.AcquirerPOIID != default(string))
                            && this.AcquirerPOIIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentAcquirerDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentAcquirerDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("4aea3898-7c4c-4e87-bdfe-e2cc1718a8f1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyAccountStatusType : ILoyaltyAccountStatusType {
        private LoyaltyAccountType loyaltyAccountField = new LoyaltyAccountType();
        private double currentBalanceField = default(double);
        private bool currentBalanceFieldSpecified = default(bool);
        private string loyaltyUnitField = default(string);
        private string currencyField = default(string);
        private bool loyaltyAccountFieldSpecified = false;
        private string loyaltyUnitDefaultValue = "Point";
        private bool loyaltyUnitFieldSpecified = false;
        private bool currencyFieldSpecified = false;
        public LoyaltyAccountStatusType() {
            this.loyaltyUnitField = this.loyaltyUnitDefaultValue;
        }
        public LoyaltyAccountStatusType(LoyaltyAccountStatusType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyAccountStatusType))) {
            }
            else {
                this.LoyaltyAccount = value.LoyaltyAccount;
                this.CurrentBalance = value.CurrentBalance;
                this.CurrentBalanceSpecified = value.CurrentBalanceSpecified;
                this.LoyaltyUnit = value.LoyaltyUnit;
                this.Currency = value.Currency;
                this.LoyaltyAccountSpecified = value.LoyaltyAccountSpecified;
                this.LoyaltyUnitSpecified = value.LoyaltyUnitSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountType LoyaltyAccount {
            get {
                return this.loyaltyAccountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountType))
                            || false)) {
                    this.loyaltyAccountField = new LoyaltyAccountType();
                    this.loyaltyAccountFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountField = value;
                    this.loyaltyAccountFieldSpecified = this.LoyaltyAccount.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.currentBalanceField = default(double);
                    this.currentBalanceFieldSpecified = false;
                }
                else {
                    this.currentBalanceField = value;
                    this.currentBalanceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentBalanceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currentBalanceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currentBalanceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Point")]
        public string LoyaltyUnit {
            get {
                return this.loyaltyUnitField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.LoyaltyUnitDefaultValue)
                            || (value == default(string)))) {
                    this.loyaltyUnitField = this.LoyaltyUnitDefaultValue;
                    this.loyaltyUnitFieldSpecified = false;
                }
                else {
                    this.loyaltyUnitField = value;
                    this.loyaltyUnitFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountFieldSpecified || this.LoyaltyAccount.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyUnitDefaultValue {
            get {
                return this.loyaltyUnitDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyUnitSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyUnitFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyUnitFieldSpecified = value;
                if ((this.loyaltyUnitFieldSpecified
                            && (this.loyaltyUnitField == default(string)))) {
                    this.loyaltyUnitField = this.loyaltyUnitDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.LoyaltyAccount != default(LoyaltyAccountType))
                            && this.LoyaltyAccountSpecified))
                            || ((this.CurrentBalance != default(double))
                            && this.CurrentBalanceSpecified))
                            || ((this.LoyaltyUnit != default(string))
                            && this.LoyaltyUnitSpecified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyAccountStatusTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyAccountStatusType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("73d38b8b-b7ff-41bf-a6a7-c2af32f25771")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyAccountType : ILoyaltyAccountType {
        private LoyaltyAccountIDType loyaltyAccountIDField = new LoyaltyAccountIDType();
        private string loyaltyBrandField = default(string);
        private bool loyaltyAccountIDFieldSpecified = false;
        private bool loyaltyBrandFieldSpecified = false;
        public LoyaltyAccountType() {
        }
        public LoyaltyAccountType(LoyaltyAccountType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyAccountType))) {
            }
            else {
                this.LoyaltyAccountID = value.LoyaltyAccountID;
                this.LoyaltyBrand = value.LoyaltyBrand;
                this.LoyaltyAccountIDSpecified = value.LoyaltyAccountIDSpecified;
                this.LoyaltyBrandSpecified = value.LoyaltyBrandSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountIDType LoyaltyAccountID {
            get {
                return this.loyaltyAccountIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountIDType))
                            || false)) {
                    this.loyaltyAccountIDField = new LoyaltyAccountIDType();
                    this.loyaltyAccountIDFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountIDField = value;
                    this.loyaltyAccountIDFieldSpecified = this.LoyaltyAccountID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LoyaltyBrand {
            get {
                return this.loyaltyBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.loyaltyBrandField = default(string);
                    this.loyaltyBrandFieldSpecified = false;
                }
                else {
                    this.loyaltyBrandField = value;
                    this.loyaltyBrandFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountIDFieldSpecified || this.LoyaltyAccountID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyBrandFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.LoyaltyAccountID != default(LoyaltyAccountIDType))
                            && this.LoyaltyAccountIDSpecified))
                            || ((this.LoyaltyBrand != default(string))
                            && this.LoyaltyBrandSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyAccountTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyAccountType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum BarcodeTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        EAN8,
        /// <remarks/>
        EAN13,
        /// <remarks/>
        UPCA,
        /// <remarks/>
        Code25,
        /// <remarks/>
        Code128,
        /// <remarks/>
        PDF417,
        /// <remarks/>
        QRCODE,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ed84758c-b7f3-4bf4-9123-08ff24867116")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class BatchRequestType : IBatchRequestType {
        private TransactionToPerformType[] transactionToPerformField = new TransactionToPerformType[0];
        private bool removeAllFlagField = default(bool);
        private bool removeAllFlagFieldSpecified = default(bool);
        private bool transactionToPerformFieldSpecified = false;
        public BatchRequestType() {
        }
        public BatchRequestType(BatchRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(BatchRequestType))) {
            }
            else {
                this.TransactionToPerform = value.TransactionToPerform;
                this.RemoveAllFlag = value.RemoveAllFlag;
                this.RemoveAllFlagSpecified = value.RemoveAllFlagSpecified;
                this.TransactionToPerformSpecified = value.TransactionToPerformSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TransactionToPerform", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionToPerformType[] TransactionToPerform {
            get {
                return this.transactionToPerformField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(TransactionToPerformType[]))
                            || false)) {
                    this.transactionToPerformField = new TransactionToPerformType[0];
                    this.transactionToPerformFieldSpecified = false;
                }
                else {
                    this.transactionToPerformField = value;
                    this.transactionToPerformFieldSpecified = (this.TransactionToPerformLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RemoveAllFlag {
            get {
                return this.removeAllFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.removeAllFlagField = default(bool);
                    this.removeAllFlagFieldSpecified = false;
                }
                else {
                    this.removeAllFlagField = value;
                    this.removeAllFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveAllFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.removeAllFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.removeAllFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionToPerformSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionToPerformFieldSpecified
                            || (this.TransactionToPerformLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionToPerformFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || (this.TransactionToPerformLength() != 0))
                            || ((this.RemoveAllFlag != default(bool))
                            && this.RemoveAllFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string BatchRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "BatchRequestType";
                // END ADDED BY XSD
            }
        }
        public int TransactionToPerformLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.transactionToPerformField == default(TransactionToPerformType[]))) {
                return 0;
            }
            else {
                return this.transactionToPerformField.Length;
            }
            // END ADDED BY XSD
        }
        public TransactionToPerformType TransactionToPerformGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.transactionToPerformField == default(TransactionToPerformType[]))) {
                    return default(TransactionToPerformType);
                }
                else {
                    if ((0 > index)) {
                        return default(TransactionToPerformType);
                    }
                    else {
                        if ((this.transactionToPerformField.Length <= index)) {
                            return default(TransactionToPerformType);
                        }
                        else {
                            return this.transactionToPerformField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(TransactionToPerformType);
            }
            // END ADDED BY XSD
        }
        public bool TransactionToPerformSetItem(int index, TransactionToPerformType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.transactionToPerformField == default(TransactionToPerformType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionToPerformField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.transactionToPerformField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionToPerformAddItem(TransactionToPerformType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.transactionToPerformField == default(TransactionToPerformType[]))) {
                    return false;
                }
                else {
                    TransactionToPerformType[] array = new TransactionToPerformType[(this.transactionToPerformField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.transactionToPerformField.Length); i = (i + 1)) {
                        array[i] = transactionToPerformField[i];
                    }
                    array[i] = value;
                    this.TransactionToPerform = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionToPerformRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.transactionToPerformField == default(TransactionToPerformType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionToPerformField.Length <= index)) {
                            return false;
                        }
                        else {
                            TransactionToPerformType[] array = new TransactionToPerformType[(this.transactionToPerformField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = transactionToPerformField[i];
                            }
                            for (i = (i + 1); (i < this.transactionToPerformField.Length); i = (i + 1)) {
                                array[i] = transactionToPerformField[i];
                            }
                            this.TransactionToPerform = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int TransactionToPerformInsertItem(int index, TransactionToPerformType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.transactionToPerformField == default(TransactionToPerformType[]))) {
                    return -1;
                }
                else {
                    if ((this.transactionToPerformField.Length <= index)) {
                        if ((this.TransactionToPerformAddItem(value) == true)) {
                            return this.TransactionToPerformLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        TransactionToPerformType[] array = new TransactionToPerformType[(this.transactionToPerformField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = transactionToPerformField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.transactionToPerformField.Length); j = (j + 1)) {
                            array[k] = transactionToPerformField[j];
                            k = (k + 1);
                        }
                        this.TransactionToPerform = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("545e99df-965a-4703-b514-eaf91de29c7c")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionToPerformType : ITransactionToPerformType {
        private object itemField = default(object);
        private bool itemFieldSpecified = false;
        public TransactionToPerformType() {
        }
        public TransactionToPerformType(TransactionToPerformType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionToPerformType))) {
            }
            else {
                this.Item = value.Item;
                this.ItemSpecified = value.ItemSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyRequest", typeof(LoyaltyRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentRequest", typeof(PaymentRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReversalRequest", typeof(ReversalRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(object))
                            || false)) {
                    this.itemField = default(object);
                    this.itemFieldSpecified = false;
                }
                else {
                    this.itemField = value;
                    this.itemFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.Item != default(object))
                            && this.ItemSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionToPerformTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionToPerformType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("f94db80f-0e3f-44a9-95cf-494032807ba3")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyRequestType : ILoyaltyRequestType {
        private SaleDataType saleDataField = new SaleDataType();
        private LoyaltyTransactionType loyaltyTransactionField = new LoyaltyTransactionType();
        private LoyaltyDataType[] loyaltyDataField = new LoyaltyDataType[0];
        private bool saleDataFieldSpecified = false;
        private bool loyaltyTransactionFieldSpecified = false;
        private bool loyaltyDataFieldSpecified = false;
        public LoyaltyRequestType() {
        }
        public LoyaltyRequestType(LoyaltyRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyRequestType))) {
            }
            else {
                this.SaleData = value.SaleData;
                this.LoyaltyTransaction = value.LoyaltyTransaction;
                this.LoyaltyData = value.LoyaltyData;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.LoyaltyTransactionSpecified = value.LoyaltyTransactionSpecified;
                this.LoyaltyDataSpecified = value.LoyaltyDataSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyTransactionType LoyaltyTransaction {
            get {
                return this.loyaltyTransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyTransactionType))
                            || false)) {
                    this.loyaltyTransactionField = new LoyaltyTransactionType();
                    this.loyaltyTransactionFieldSpecified = false;
                }
                else {
                    this.loyaltyTransactionField = value;
                    this.loyaltyTransactionFieldSpecified = this.LoyaltyTransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyDataType[] LoyaltyData {
            get {
                return this.loyaltyDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(LoyaltyDataType[]))
                            || false)) {
                    this.loyaltyDataField = new LoyaltyDataType[0];
                    this.loyaltyDataFieldSpecified = false;
                }
                else {
                    this.loyaltyDataField = value;
                    this.loyaltyDataFieldSpecified = (this.LoyaltyDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyTransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyTransactionFieldSpecified || this.LoyaltyTransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyTransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyDataFieldSpecified
                            || (this.LoyaltyDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.LoyaltyTransaction != default(LoyaltyTransactionType))
                            && this.LoyaltyTransactionSpecified))
                            || (this.LoyaltyDataLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyRequestType";
                // END ADDED BY XSD
            }
        }
        public int LoyaltyDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                return 0;
            }
            else {
                return this.loyaltyDataField.Length;
            }
            // END ADDED BY XSD
        }
        public LoyaltyDataType LoyaltyDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return default(LoyaltyDataType);
                }
                else {
                    if ((0 > index)) {
                        return default(LoyaltyDataType);
                    }
                    else {
                        if ((this.loyaltyDataField.Length <= index)) {
                            return default(LoyaltyDataType);
                        }
                        else {
                            return this.loyaltyDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(LoyaltyDataType);
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyDataSetItem(int index, LoyaltyDataType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loyaltyDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyDataAddItem(LoyaltyDataType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return false;
                }
                else {
                    LoyaltyDataType[] array = new LoyaltyDataType[(this.loyaltyDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loyaltyDataField.Length); i = (i + 1)) {
                        array[i] = loyaltyDataField[i];
                    }
                    array[i] = value;
                    this.LoyaltyData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            LoyaltyDataType[] array = new LoyaltyDataType[(this.loyaltyDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loyaltyDataField[i];
                            }
                            for (i = (i + 1); (i < this.loyaltyDataField.Length); i = (i + 1)) {
                                array[i] = loyaltyDataField[i];
                            }
                            this.LoyaltyData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyDataInsertItem(int index, LoyaltyDataType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return -1;
                }
                else {
                    if ((this.loyaltyDataField.Length <= index)) {
                        if ((this.LoyaltyDataAddItem(value) == true)) {
                            return this.LoyaltyDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        LoyaltyDataType[] array = new LoyaltyDataType[(this.loyaltyDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loyaltyDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loyaltyDataField.Length); j = (j + 1)) {
                            array[k] = loyaltyDataField[j];
                            k = (k + 1);
                        }
                        this.LoyaltyData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("06e7f76e-c4b8-4095-a434-7a161c55ad6d")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleDataType : ISaleDataType {
        private TransactionIdentificationType saleTransactionIDField = new TransactionIdentificationType();
        private SaleTerminalDataType saleTerminalDataField = new SaleTerminalDataType();
        private SponsoredMerchantType[] sponsoredMerchantField = new SponsoredMerchantType[0];
        private string saleToPOIDataField = default(string);
        private string saleToAcquirerDataField = default(string);
        private SaleToIssuerDataType saleToIssuerDataField = new SaleToIssuerDataType();
        private string operatorIDField = default(string);
        private string operatorLanguageField = default(string);
        private string shiftNumberField = default(string);
        private string saleReferenceIDField = default(string);
        private string tokenRequestedTypeField = default(string);
        private string customerOrderIDField = default(string);
        private string[] customerOrderReqField = new string[0];
        private bool saleTransactionIDFieldSpecified = false;
        private bool saleTerminalDataFieldSpecified = false;
        private bool sponsoredMerchantFieldSpecified = false;
        private bool saleToPOIDataFieldSpecified = false;
        private bool saleToAcquirerDataFieldSpecified = false;
        private bool saleToIssuerDataFieldSpecified = false;
        private bool operatorIDFieldSpecified = false;
        private bool operatorLanguageFieldSpecified = false;
        private bool shiftNumberFieldSpecified = false;
        private bool saleReferenceIDFieldSpecified = false;
        private bool tokenRequestedTypeFieldSpecified = false;
        private bool customerOrderIDFieldSpecified = false;
        private bool customerOrderReqFieldSpecified = false;
        public SaleDataType() {
        }
        public SaleDataType(SaleDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleDataType))) {
            }
            else {
                this.SaleTransactionID = value.SaleTransactionID;
                this.SaleTerminalData = value.SaleTerminalData;
                this.SponsoredMerchant = value.SponsoredMerchant;
                this.SaleToPOIData = value.SaleToPOIData;
                this.SaleToAcquirerData = value.SaleToAcquirerData;
                this.SaleToIssuerData = value.SaleToIssuerData;
                this.OperatorID = value.OperatorID;
                this.OperatorLanguage = value.OperatorLanguage;
                this.ShiftNumber = value.ShiftNumber;
                this.SaleReferenceID = value.SaleReferenceID;
                this.TokenRequestedType = value.TokenRequestedType;
                this.CustomerOrderID = value.CustomerOrderID;
                this.CustomerOrderReq = value.CustomerOrderReq;
                this.SaleTransactionIDSpecified = value.SaleTransactionIDSpecified;
                this.SaleTerminalDataSpecified = value.SaleTerminalDataSpecified;
                this.SponsoredMerchantSpecified = value.SponsoredMerchantSpecified;
                this.SaleToPOIDataSpecified = value.SaleToPOIDataSpecified;
                this.SaleToAcquirerDataSpecified = value.SaleToAcquirerDataSpecified;
                this.SaleToIssuerDataSpecified = value.SaleToIssuerDataSpecified;
                this.OperatorIDSpecified = value.OperatorIDSpecified;
                this.OperatorLanguageSpecified = value.OperatorLanguageSpecified;
                this.ShiftNumberSpecified = value.ShiftNumberSpecified;
                this.SaleReferenceIDSpecified = value.SaleReferenceIDSpecified;
                this.TokenRequestedTypeSpecified = value.TokenRequestedTypeSpecified;
                this.CustomerOrderIDSpecified = value.CustomerOrderIDSpecified;
                this.CustomerOrderReqSpecified = value.CustomerOrderReqSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType SaleTransactionID {
            get {
                return this.saleTransactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.saleTransactionIDField = new TransactionIdentificationType();
                    this.saleTransactionIDFieldSpecified = false;
                }
                else {
                    this.saleTransactionIDField = value;
                    this.saleTransactionIDFieldSpecified = this.SaleTransactionID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleTerminalDataType SaleTerminalData {
            get {
                return this.saleTerminalDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleTerminalDataType))
                            || false)) {
                    this.saleTerminalDataField = new SaleTerminalDataType();
                    this.saleTerminalDataFieldSpecified = false;
                }
                else {
                    this.saleTerminalDataField = value;
                    this.saleTerminalDataFieldSpecified = this.SaleTerminalData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SponsoredMerchant", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SponsoredMerchantType[] SponsoredMerchant {
            get {
                return this.sponsoredMerchantField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SponsoredMerchantType[]))
                            || false)) {
                    this.sponsoredMerchantField = new SponsoredMerchantType[0];
                    this.sponsoredMerchantFieldSpecified = false;
                }
                else {
                    this.sponsoredMerchantField = value;
                    this.sponsoredMerchantFieldSpecified = (this.SponsoredMerchantLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SaleToPOIData {
            get {
                return this.saleToPOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleToPOIDataField = default(string);
                    this.saleToPOIDataFieldSpecified = false;
                }
                else {
                    this.saleToPOIDataField = value;
                    this.saleToPOIDataFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SaleToAcquirerData {
            get {
                return this.saleToAcquirerDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleToAcquirerDataField = default(string);
                    this.saleToAcquirerDataFieldSpecified = false;
                }
                else {
                    this.saleToAcquirerDataField = value;
                    this.saleToAcquirerDataFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleToIssuerDataType SaleToIssuerData {
            get {
                return this.saleToIssuerDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleToIssuerDataType))
                            || false)) {
                    this.saleToIssuerDataField = new SaleToIssuerDataType();
                    this.saleToIssuerDataFieldSpecified = false;
                }
                else {
                    this.saleToIssuerDataField = value;
                    this.saleToIssuerDataFieldSpecified = this.SaleToIssuerData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OperatorID {
            get {
                return this.operatorIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.operatorIDField = default(string);
                    this.operatorIDFieldSpecified = false;
                }
                else {
                    this.operatorIDField = value;
                    this.operatorIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OperatorLanguage {
            get {
                return this.operatorLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.operatorLanguageField = default(string);
                    this.operatorLanguageFieldSpecified = false;
                }
                else {
                    this.operatorLanguageField = value;
                    this.operatorLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShiftNumber {
            get {
                return this.shiftNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.shiftNumberField = default(string);
                    this.shiftNumberFieldSpecified = false;
                }
                else {
                    this.shiftNumberField = value;
                    this.shiftNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleReferenceID {
            get {
                return this.saleReferenceIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleReferenceIDField = default(string);
                    this.saleReferenceIDFieldSpecified = false;
                }
                else {
                    this.saleReferenceIDField = value;
                    this.saleReferenceIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TokenRequestedType {
            get {
                return this.tokenRequestedTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.tokenRequestedTypeField = default(string);
                    this.tokenRequestedTypeFieldSpecified = false;
                }
                else {
                    this.tokenRequestedTypeField = value;
                    this.tokenRequestedTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerOrderID {
            get {
                return this.customerOrderIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerOrderIDField = default(string);
                    this.customerOrderIDFieldSpecified = false;
                }
                else {
                    this.customerOrderIDField = value;
                    this.customerOrderIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] CustomerOrderReq {
            get {
                return this.customerOrderReqField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.customerOrderReqField = new string[0];
                    this.customerOrderReqFieldSpecified = false;
                }
                else {
                    this.customerOrderReqField = value;
                    this.customerOrderReqFieldSpecified = (this.CustomerOrderReqLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleTransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleTransactionIDFieldSpecified || this.SaleTransactionID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleTransactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleTerminalDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleTerminalDataFieldSpecified || this.SaleTerminalData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleTerminalDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SponsoredMerchantSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.sponsoredMerchantFieldSpecified
                            || (this.SponsoredMerchantLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.sponsoredMerchantFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleToPOIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleToPOIDataFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleToPOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleToAcquirerDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleToAcquirerDataFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleToAcquirerDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleToIssuerDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleToIssuerDataFieldSpecified || this.SaleToIssuerData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleToIssuerDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OperatorIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.operatorIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.operatorIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OperatorLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.operatorLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.operatorLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ShiftNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.shiftNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.shiftNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleReferenceIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleReferenceIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleReferenceIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TokenRequestedTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.tokenRequestedTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.tokenRequestedTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderReqSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderReqFieldSpecified
                            || (this.CustomerOrderReqLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderReqFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((((((false
                            || ((this.SaleTransactionID != default(TransactionIdentificationType))
                            && this.SaleTransactionIDSpecified))
                            || ((this.SaleTerminalData != default(SaleTerminalDataType))
                            && this.SaleTerminalDataSpecified))
                            || ((this.SaleToIssuerData != default(SaleToIssuerDataType))
                            && this.SaleToIssuerDataSpecified))
                            || (this.SponsoredMerchantLength() != 0))
                            || (this.CustomerOrderReqLength() != 0))
                            || ((this.SaleToPOIData != default(string))
                            && this.SaleToPOIDataSpecified))
                            || ((this.SaleToAcquirerData != default(string))
                            && this.SaleToAcquirerDataSpecified))
                            || ((this.OperatorID != default(string))
                            && this.OperatorIDSpecified))
                            || ((this.OperatorLanguage != default(string))
                            && this.OperatorLanguageSpecified))
                            || ((this.ShiftNumber != default(string))
                            && this.ShiftNumberSpecified))
                            || ((this.SaleReferenceID != default(string))
                            && this.SaleReferenceIDSpecified))
                            || ((this.TokenRequestedType != default(string))
                            && this.TokenRequestedTypeSpecified))
                            || ((this.CustomerOrderID != default(string))
                            && this.CustomerOrderIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleDataType";
                // END ADDED BY XSD
            }
        }
        public int SponsoredMerchantLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.sponsoredMerchantField == default(SponsoredMerchantType[]))) {
                return 0;
            }
            else {
                return this.sponsoredMerchantField.Length;
            }
            // END ADDED BY XSD
        }
        public SponsoredMerchantType SponsoredMerchantGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.sponsoredMerchantField == default(SponsoredMerchantType[]))) {
                    return default(SponsoredMerchantType);
                }
                else {
                    if ((0 > index)) {
                        return default(SponsoredMerchantType);
                    }
                    else {
                        if ((this.sponsoredMerchantField.Length <= index)) {
                            return default(SponsoredMerchantType);
                        }
                        else {
                            return this.sponsoredMerchantField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SponsoredMerchantType);
            }
            // END ADDED BY XSD
        }
        public bool SponsoredMerchantSetItem(int index, SponsoredMerchantType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.sponsoredMerchantField == default(SponsoredMerchantType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.sponsoredMerchantField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.sponsoredMerchantField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SponsoredMerchantAddItem(SponsoredMerchantType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.sponsoredMerchantField == default(SponsoredMerchantType[]))) {
                    return false;
                }
                else {
                    SponsoredMerchantType[] array = new SponsoredMerchantType[(this.sponsoredMerchantField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.sponsoredMerchantField.Length); i = (i + 1)) {
                        array[i] = sponsoredMerchantField[i];
                    }
                    array[i] = value;
                    this.SponsoredMerchant = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SponsoredMerchantRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.sponsoredMerchantField == default(SponsoredMerchantType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.sponsoredMerchantField.Length <= index)) {
                            return false;
                        }
                        else {
                            SponsoredMerchantType[] array = new SponsoredMerchantType[(this.sponsoredMerchantField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = sponsoredMerchantField[i];
                            }
                            for (i = (i + 1); (i < this.sponsoredMerchantField.Length); i = (i + 1)) {
                                array[i] = sponsoredMerchantField[i];
                            }
                            this.SponsoredMerchant = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SponsoredMerchantInsertItem(int index, SponsoredMerchantType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.sponsoredMerchantField == default(SponsoredMerchantType[]))) {
                    return -1;
                }
                else {
                    if ((this.sponsoredMerchantField.Length <= index)) {
                        if ((this.SponsoredMerchantAddItem(value) == true)) {
                            return this.SponsoredMerchantLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SponsoredMerchantType[] array = new SponsoredMerchantType[(this.sponsoredMerchantField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = sponsoredMerchantField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.sponsoredMerchantField.Length); j = (j + 1)) {
                            array[k] = sponsoredMerchantField[j];
                            k = (k + 1);
                        }
                        this.SponsoredMerchant = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderReqLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.customerOrderReqField == default(string[]))) {
                return 0;
            }
            else {
                return this.customerOrderReqField.Length;
            }
            // END ADDED BY XSD
        }
        public string CustomerOrderReqGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.customerOrderReqField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.customerOrderReqField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderReqSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderReqField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.customerOrderReqField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderReqAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.customerOrderReqField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.customerOrderReqField.Length); i = (i + 1)) {
                        array[i] = customerOrderReqField[i];
                    }
                    array[i] = value;
                    this.CustomerOrderReq = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderReqRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderReqField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.customerOrderReqField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = customerOrderReqField[i];
                            }
                            for (i = (i + 1); (i < this.customerOrderReqField.Length); i = (i + 1)) {
                                array[i] = customerOrderReqField[i];
                            }
                            this.CustomerOrderReq = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderReqInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.customerOrderReqField.Length <= index)) {
                        if ((this.CustomerOrderReqAddItem(value) == true)) {
                            return this.CustomerOrderReqLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.customerOrderReqField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = customerOrderReqField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.customerOrderReqField.Length); j = (j + 1)) {
                            array[k] = customerOrderReqField[j];
                            k = (k + 1);
                        }
                        this.CustomerOrderReq = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("5a9c9b2f-80d0-45de-a2b1-f19654597d9e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleTerminalDataType : ISaleTerminalDataType {
        private string saleCapabilitiesField = default(string);
        private SaleProfileType saleProfileField = new SaleProfileType();
        private string terminalEnvironmentField = default(string);
        private string totalsGroupIDField = default(string);
        private bool saleCapabilitiesFieldSpecified = false;
        private bool saleProfileFieldSpecified = false;
        private bool terminalEnvironmentFieldSpecified = false;
        private bool totalsGroupIDFieldSpecified = false;
        public SaleTerminalDataType() {
        }
        public SaleTerminalDataType(SaleTerminalDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleTerminalDataType))) {
            }
            else {
                this.SaleCapabilities = value.SaleCapabilities;
                this.SaleProfile = value.SaleProfile;
                this.TerminalEnvironment = value.TerminalEnvironment;
                this.TotalsGroupID = value.TotalsGroupID;
                this.SaleCapabilitiesSpecified = value.SaleCapabilitiesSpecified;
                this.SaleProfileSpecified = value.SaleProfileSpecified;
                this.TerminalEnvironmentSpecified = value.TerminalEnvironmentSpecified;
                this.TotalsGroupIDSpecified = value.TotalsGroupIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SaleCapabilities {
            get {
                return this.saleCapabilitiesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleCapabilitiesField = default(string);
                    this.saleCapabilitiesFieldSpecified = false;
                }
                else {
                    this.saleCapabilitiesField = value;
                    this.saleCapabilitiesFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleProfileType SaleProfile {
            get {
                return this.saleProfileField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleProfileType))
                            || false)) {
                    this.saleProfileField = new SaleProfileType();
                    this.saleProfileFieldSpecified = false;
                }
                else {
                    this.saleProfileField = value;
                    this.saleProfileFieldSpecified = this.SaleProfile.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TerminalEnvironment {
            get {
                return this.terminalEnvironmentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.terminalEnvironmentField = default(string);
                    this.terminalEnvironmentFieldSpecified = false;
                }
                else {
                    this.terminalEnvironmentField = value;
                    this.terminalEnvironmentFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TotalsGroupID {
            get {
                return this.totalsGroupIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.totalsGroupIDField = default(string);
                    this.totalsGroupIDFieldSpecified = false;
                }
                else {
                    this.totalsGroupIDField = value;
                    this.totalsGroupIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleCapabilitiesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleCapabilitiesFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleCapabilitiesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleProfileSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleProfileFieldSpecified || this.SaleProfile.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleProfileFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TerminalEnvironmentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.terminalEnvironmentFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.terminalEnvironmentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TotalsGroupIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalsGroupIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalsGroupIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.SaleProfile != default(SaleProfileType))
                            && this.SaleProfileSpecified))
                            || ((this.SaleCapabilities != default(string))
                            && this.SaleCapabilitiesSpecified))
                            || ((this.TerminalEnvironment != default(string))
                            && this.TerminalEnvironmentSpecified))
                            || ((this.TotalsGroupID != default(string))
                            && this.TotalsGroupIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleTerminalDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleTerminalDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("560a6598-ca12-476b-bb98-3c55a00b7569")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleProfileType : ISaleProfileType {
        private string serviceProfilesField = default(string);
        private string genericProfileField = default(string);
        private bool serviceProfilesFieldSpecified = false;
        private string genericProfileDefaultValue = "Standard";
        private bool genericProfileFieldSpecified = false;
        public SaleProfileType() {
            this.genericProfileField = this.genericProfileDefaultValue;
        }
        public SaleProfileType(SaleProfileType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleProfileType))) {
            }
            else {
                this.ServiceProfiles = value.ServiceProfiles;
                this.GenericProfile = value.GenericProfile;
                this.ServiceProfilesSpecified = value.ServiceProfilesSpecified;
                this.GenericProfileSpecified = value.GenericProfileSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceProfiles {
            get {
                return this.serviceProfilesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.serviceProfilesField = default(string);
                    this.serviceProfilesFieldSpecified = false;
                }
                else {
                    this.serviceProfilesField = value;
                    this.serviceProfilesFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Standard")]
        public string GenericProfile {
            get {
                return this.genericProfileField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.GenericProfileDefaultValue)
                            || (value == default(string)))) {
                    this.genericProfileField = this.GenericProfileDefaultValue;
                    this.genericProfileFieldSpecified = false;
                }
                else {
                    this.genericProfileField = value;
                    this.genericProfileFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ServiceProfilesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.serviceProfilesFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.serviceProfilesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string GenericProfileDefaultValue {
            get {
                return this.genericProfileDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool GenericProfileSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.genericProfileFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.genericProfileFieldSpecified = value;
                if ((this.genericProfileFieldSpecified
                            && (this.genericProfileField == default(string)))) {
                    this.genericProfileField = this.genericProfileDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.ServiceProfiles != default(string))
                            && this.ServiceProfilesSpecified))
                            || ((this.GenericProfile != default(string))
                            && this.GenericProfileSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleProfileTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleProfileType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("d4d69611-45bc-4199-87a1-177b3134451a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SponsoredMerchantType : ISponsoredMerchantType {
        private string commonNameField = default(string);
        private string addressField = default(string);
        private string countryCodeField = default(string);
        private string merchantCategoryCodeField = default(string);
        private string registeredIdentifierField = default(string);
        private bool commonNameFieldSpecified = false;
        private bool addressFieldSpecified = false;
        private bool countryCodeFieldSpecified = false;
        private bool merchantCategoryCodeFieldSpecified = false;
        private bool registeredIdentifierFieldSpecified = false;
        public SponsoredMerchantType() {
        }
        public SponsoredMerchantType(SponsoredMerchantType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SponsoredMerchantType))) {
            }
            else {
                this.CommonName = value.CommonName;
                this.Address = value.Address;
                this.CountryCode = value.CountryCode;
                this.MerchantCategoryCode = value.MerchantCategoryCode;
                this.RegisteredIdentifier = value.RegisteredIdentifier;
                this.CommonNameSpecified = value.CommonNameSpecified;
                this.AddressSpecified = value.AddressSpecified;
                this.CountryCodeSpecified = value.CountryCodeSpecified;
                this.MerchantCategoryCodeSpecified = value.MerchantCategoryCodeSpecified;
                this.RegisteredIdentifierSpecified = value.RegisteredIdentifierSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CommonName {
            get {
                return this.commonNameField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.commonNameField = default(string);
                    this.commonNameFieldSpecified = false;
                }
                else {
                    this.commonNameField = value;
                    this.commonNameFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.addressField = default(string);
                    this.addressFieldSpecified = false;
                }
                else {
                    this.addressField = value;
                    this.addressFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.countryCodeField = default(string);
                    this.countryCodeFieldSpecified = false;
                }
                else {
                    this.countryCodeField = value;
                    this.countryCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MerchantCategoryCode {
            get {
                return this.merchantCategoryCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.merchantCategoryCodeField = default(string);
                    this.merchantCategoryCodeFieldSpecified = false;
                }
                else {
                    this.merchantCategoryCodeField = value;
                    this.merchantCategoryCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RegisteredIdentifier {
            get {
                return this.registeredIdentifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.registeredIdentifierField = default(string);
                    this.registeredIdentifierFieldSpecified = false;
                }
                else {
                    this.registeredIdentifierField = value;
                    this.registeredIdentifierFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CommonNameSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.commonNameFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.commonNameFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AddressSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.addressFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.addressFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CountryCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.countryCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.countryCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MerchantCategoryCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.merchantCategoryCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.merchantCategoryCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RegisteredIdentifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.registeredIdentifierFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.registeredIdentifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.CommonName != default(string))
                            && this.CommonNameSpecified))
                            || ((this.Address != default(string))
                            && this.AddressSpecified))
                            || ((this.CountryCode != default(string))
                            && this.CountryCodeSpecified))
                            || ((this.MerchantCategoryCode != default(string))
                            && this.MerchantCategoryCodeSpecified))
                            || ((this.RegisteredIdentifier != default(string))
                            && this.RegisteredIdentifierSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SponsoredMerchantTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SponsoredMerchantType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("395e4650-4474-4da6-96a5-3cbe84404820")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleToIssuerDataType : ISaleToIssuerDataType {
        private string statementReferenceField = default(string);
        private bool statementReferenceFieldSpecified = false;
        public SaleToIssuerDataType() {
        }
        public SaleToIssuerDataType(SaleToIssuerDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleToIssuerDataType))) {
            }
            else {
                this.StatementReference = value.StatementReference;
                this.StatementReferenceSpecified = value.StatementReferenceSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string StatementReference {
            get {
                return this.statementReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.statementReferenceField = default(string);
                    this.statementReferenceFieldSpecified = false;
                }
                else {
                    this.statementReferenceField = value;
                    this.statementReferenceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StatementReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.statementReferenceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.statementReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.StatementReference != default(string))
                            && this.StatementReferenceSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleToIssuerDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleToIssuerDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("6a285cf1-5c1b-431d-bfda-ac96d8f3d4c0")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyTransactionType : ILoyaltyTransactionType {
        private OriginalPOITransactionType originalPOITransactionField = new OriginalPOITransactionType();
        private TransactionConditionsType transactionConditionsField = new TransactionConditionsType();
        private SaleItemType[] saleItemField = new SaleItemType[0];
        private string loyaltyTransactionType1Field = default(string);
        private string currencyField = default(string);
        private double totalAmountField = default(double);
        private bool totalAmountFieldSpecified = default(bool);
        private bool originalPOITransactionFieldSpecified = false;
        private bool transactionConditionsFieldSpecified = false;
        private bool saleItemFieldSpecified = false;
        private bool loyaltyTransactionType1FieldSpecified = false;
        private bool currencyFieldSpecified = false;
        public LoyaltyTransactionType() {
        }
        public LoyaltyTransactionType(LoyaltyTransactionType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyTransactionType))) {
            }
            else {
                this.OriginalPOITransaction = value.OriginalPOITransaction;
                this.TransactionConditions = value.TransactionConditions;
                this.SaleItem = value.SaleItem;
                this.LoyaltyTransactionType1 = value.LoyaltyTransactionType1;
                this.Currency = value.Currency;
                this.TotalAmount = value.TotalAmount;
                this.TotalAmountSpecified = value.TotalAmountSpecified;
                this.OriginalPOITransactionSpecified = value.OriginalPOITransactionSpecified;
                this.TransactionConditionsSpecified = value.TransactionConditionsSpecified;
                this.SaleItemSpecified = value.SaleItemSpecified;
                this.LoyaltyTransactionType1Specified = value.LoyaltyTransactionType1Specified;
                this.CurrencySpecified = value.CurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OriginalPOITransactionType OriginalPOITransaction {
            get {
                return this.originalPOITransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OriginalPOITransactionType))
                            || false)) {
                    this.originalPOITransactionField = new OriginalPOITransactionType();
                    this.originalPOITransactionFieldSpecified = false;
                }
                else {
                    this.originalPOITransactionField = value;
                    this.originalPOITransactionFieldSpecified = this.OriginalPOITransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionConditionsType TransactionConditions {
            get {
                return this.transactionConditionsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionConditionsType))
                            || false)) {
                    this.transactionConditionsField = new TransactionConditionsType();
                    this.transactionConditionsFieldSpecified = false;
                }
                else {
                    this.transactionConditionsField = value;
                    this.transactionConditionsFieldSpecified = this.TransactionConditions.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SaleItem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleItemType[] SaleItem {
            get {
                return this.saleItemField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SaleItemType[]))
                            || false)) {
                    this.saleItemField = new SaleItemType[0];
                    this.saleItemFieldSpecified = false;
                }
                else {
                    this.saleItemField = value;
                    this.saleItemFieldSpecified = (this.SaleItemLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("LoyaltyTransactionType")]
        public string LoyaltyTransactionType1 {
            get {
                return this.loyaltyTransactionType1Field;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.loyaltyTransactionType1Field = default(string);
                    this.loyaltyTransactionType1FieldSpecified = false;
                }
                else {
                    this.loyaltyTransactionType1Field = value;
                    this.loyaltyTransactionType1FieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.totalAmountField = default(double);
                    this.totalAmountFieldSpecified = false;
                }
                else {
                    this.totalAmountField = value;
                    this.totalAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OriginalPOITransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.originalPOITransactionFieldSpecified || this.OriginalPOITransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.originalPOITransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionConditionsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionConditionsFieldSpecified || this.TransactionConditions.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionConditionsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleItemSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleItemFieldSpecified
                            || (this.SaleItemLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleItemFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyTransactionType1Specified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyTransactionType1FieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyTransactionType1FieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.OriginalPOITransaction != default(OriginalPOITransactionType))
                            && this.OriginalPOITransactionSpecified))
                            || ((this.TransactionConditions != default(TransactionConditionsType))
                            && this.TransactionConditionsSpecified))
                            || (this.SaleItemLength() != 0))
                            || ((this.LoyaltyTransactionType1 != default(string))
                            && this.LoyaltyTransactionType1Specified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified))
                            || ((this.TotalAmount != default(double))
                            && this.TotalAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyTransactionTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyTransactionType";
                // END ADDED BY XSD
            }
        }
        public int SaleItemLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.saleItemField == default(SaleItemType[]))) {
                return 0;
            }
            else {
                return this.saleItemField.Length;
            }
            // END ADDED BY XSD
        }
        public SaleItemType SaleItemGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return default(SaleItemType);
                }
                else {
                    if ((0 > index)) {
                        return default(SaleItemType);
                    }
                    else {
                        if ((this.saleItemField.Length <= index)) {
                            return default(SaleItemType);
                        }
                        else {
                            return this.saleItemField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SaleItemType);
            }
            // END ADDED BY XSD
        }
        public bool SaleItemSetItem(int index, SaleItemType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.saleItemField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.saleItemField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SaleItemAddItem(SaleItemType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return false;
                }
                else {
                    SaleItemType[] array = new SaleItemType[(this.saleItemField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.saleItemField.Length); i = (i + 1)) {
                        array[i] = saleItemField[i];
                    }
                    array[i] = value;
                    this.SaleItem = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SaleItemRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.saleItemField.Length <= index)) {
                            return false;
                        }
                        else {
                            SaleItemType[] array = new SaleItemType[(this.saleItemField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = saleItemField[i];
                            }
                            for (i = (i + 1); (i < this.saleItemField.Length); i = (i + 1)) {
                                array[i] = saleItemField[i];
                            }
                            this.SaleItem = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SaleItemInsertItem(int index, SaleItemType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return -1;
                }
                else {
                    if ((this.saleItemField.Length <= index)) {
                        if ((this.SaleItemAddItem(value) == true)) {
                            return this.SaleItemLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SaleItemType[] array = new SaleItemType[(this.saleItemField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = saleItemField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.saleItemField.Length); j = (j + 1)) {
                            array[k] = saleItemField[j];
                            k = (k + 1);
                        }
                        this.SaleItem = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("5e447b4e-0627-4c33-9019-2addf2054f25")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class OriginalPOITransactionType : IOriginalPOITransactionType {
        private TransactionIdentificationType pOITransactionIDField = new TransactionIdentificationType();
        private string approvalCodeField = default(string);
        private TransactionIdentificationType hostTransactionIDField = new TransactionIdentificationType();
        private string saleIDField = default(string);
        private string pOIIDField = default(string);
        private bool reuseCardDataFlagField = default(bool);
        private string customerLanguageField = default(string);
        private string acquirerIDField = default(string);
        private bool lastTransactionFlagField = default(bool);
        private bool lastTransactionFlagFieldSpecified = default(bool);
        private bool pOITransactionIDFieldSpecified = false;
        private bool approvalCodeFieldSpecified = false;
        private bool hostTransactionIDFieldSpecified = false;
        private bool saleIDFieldSpecified = false;
        private bool pOIIDFieldSpecified = false;
        private bool reuseCardDataFlagDefaultValue = true;
        private bool reuseCardDataFlagFieldSpecified = false;
        private bool customerLanguageFieldSpecified = false;
        private bool acquirerIDFieldSpecified = false;
        public OriginalPOITransactionType() {
            this.reuseCardDataFlagField = this.reuseCardDataFlagDefaultValue;
        }
        public OriginalPOITransactionType(OriginalPOITransactionType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(OriginalPOITransactionType))) {
            }
            else {
                this.POITransactionID = value.POITransactionID;
                this.ApprovalCode = value.ApprovalCode;
                this.HostTransactionID = value.HostTransactionID;
                this.SaleID = value.SaleID;
                this.POIID = value.POIID;
                this.ReuseCardDataFlag = value.ReuseCardDataFlag;
                this.CustomerLanguage = value.CustomerLanguage;
                this.AcquirerID = value.AcquirerID;
                this.LastTransactionFlag = value.LastTransactionFlag;
                this.LastTransactionFlagSpecified = value.LastTransactionFlagSpecified;
                this.POITransactionIDSpecified = value.POITransactionIDSpecified;
                this.ApprovalCodeSpecified = value.ApprovalCodeSpecified;
                this.HostTransactionIDSpecified = value.HostTransactionIDSpecified;
                this.SaleIDSpecified = value.SaleIDSpecified;
                this.POIIDSpecified = value.POIIDSpecified;
                this.ReuseCardDataFlagSpecified = value.ReuseCardDataFlagSpecified;
                this.CustomerLanguageSpecified = value.CustomerLanguageSpecified;
                this.AcquirerIDSpecified = value.AcquirerIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType POITransactionID {
            get {
                return this.pOITransactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.pOITransactionIDField = new TransactionIdentificationType();
                    this.pOITransactionIDFieldSpecified = false;
                }
                else {
                    this.pOITransactionIDField = value;
                    this.pOITransactionIDFieldSpecified = this.POITransactionID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ApprovalCode {
            get {
                return this.approvalCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.approvalCodeField = default(string);
                    this.approvalCodeFieldSpecified = false;
                }
                else {
                    this.approvalCodeField = value;
                    this.approvalCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType HostTransactionID {
            get {
                return this.hostTransactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.hostTransactionIDField = new TransactionIdentificationType();
                    this.hostTransactionIDFieldSpecified = false;
                }
                else {
                    this.hostTransactionIDField = value;
                    this.hostTransactionIDFieldSpecified = this.HostTransactionID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleID {
            get {
                return this.saleIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleIDField = default(string);
                    this.saleIDFieldSpecified = false;
                }
                else {
                    this.saleIDField = value;
                    this.saleIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIID {
            get {
                return this.pOIIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIIDField = default(string);
                    this.pOIIDFieldSpecified = false;
                }
                else {
                    this.pOIIDField = value;
                    this.pOIIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ReuseCardDataFlag {
            get {
                return this.reuseCardDataFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.ReuseCardDataFlagDefaultValue)
                            || false)) {
                    this.reuseCardDataFlagField = this.ReuseCardDataFlagDefaultValue;
                    this.reuseCardDataFlagFieldSpecified = false;
                }
                else {
                    this.reuseCardDataFlagField = value;
                    this.reuseCardDataFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerLanguage {
            get {
                return this.customerLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerLanguageField = default(string);
                    this.customerLanguageFieldSpecified = false;
                }
                else {
                    this.customerLanguageField = value;
                    this.customerLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AcquirerID {
            get {
                return this.acquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.acquirerIDField = default(string);
                    this.acquirerIDFieldSpecified = false;
                }
                else {
                    this.acquirerIDField = value;
                    this.acquirerIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool LastTransactionFlag {
            get {
                return this.lastTransactionFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.lastTransactionFlagField = default(bool);
                    this.lastTransactionFlagFieldSpecified = false;
                }
                else {
                    this.lastTransactionFlagField = value;
                    this.lastTransactionFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastTransactionFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.lastTransactionFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.lastTransactionFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POITransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOITransactionIDFieldSpecified || this.POITransactionID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOITransactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ApprovalCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.approvalCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.approvalCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool HostTransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.hostTransactionIDFieldSpecified || this.HostTransactionID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.hostTransactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReuseCardDataFlagDefaultValue {
            get {
                return this.reuseCardDataFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReuseCardDataFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reuseCardDataFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reuseCardDataFlagFieldSpecified = value;
                if ((this.reuseCardDataFlagFieldSpecified
                            && (this.reuseCardDataFlagField == default(bool)))) {
                    this.reuseCardDataFlagField = this.reuseCardDataFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((false
                            || ((this.POITransactionID != default(TransactionIdentificationType))
                            && this.POITransactionIDSpecified))
                            || ((this.HostTransactionID != default(TransactionIdentificationType))
                            && this.HostTransactionIDSpecified))
                            || ((this.ApprovalCode != default(string))
                            && this.ApprovalCodeSpecified))
                            || ((this.SaleID != default(string))
                            && this.SaleIDSpecified))
                            || ((this.POIID != default(string))
                            && this.POIIDSpecified))
                            || ((this.ReuseCardDataFlag != default(bool))
                            && this.ReuseCardDataFlagSpecified))
                            || ((this.CustomerLanguage != default(string))
                            && this.CustomerLanguageSpecified))
                            || ((this.AcquirerID != default(string))
                            && this.AcquirerIDSpecified))
                            || ((this.LastTransactionFlag != default(bool))
                            && this.LastTransactionFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string OriginalPOITransactionTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "OriginalPOITransactionType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("360360c1-eca0-46e2-aaa1-edb936013d8e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionConditionsType : ITransactionConditionsType {
        private string[] allowedPaymentBrandField = new string[0];
        private string[] acquirerIDField = new string[0];
        private string[] allowedLoyaltyBrandField = new string[0];
        private string[] forceEntryModeField = new string[0];
        private bool debitPreferredFlagField = default(bool);
        private string loyaltyHandlingField = default(string);
        private string customerLanguageField = default(string);
        private bool forceOnlineFlagField = default(bool);
        private string merchantCategoryCodeField = default(string);
        private bool allowedPaymentBrandFieldSpecified = false;
        private bool acquirerIDFieldSpecified = false;
        private bool allowedLoyaltyBrandFieldSpecified = false;
        private bool forceEntryModeFieldSpecified = false;
        private bool debitPreferredFlagDefaultValue = false;
        private bool debitPreferredFlagFieldSpecified = false;
        private string loyaltyHandlingDefaultValue = "Forbidden";
        private bool loyaltyHandlingFieldSpecified = false;
        private bool customerLanguageFieldSpecified = false;
        private bool forceOnlineFlagDefaultValue = false;
        private bool forceOnlineFlagFieldSpecified = false;
        private bool merchantCategoryCodeFieldSpecified = false;
        public TransactionConditionsType() {
            this.debitPreferredFlagField = this.debitPreferredFlagDefaultValue;
            this.loyaltyHandlingField = this.loyaltyHandlingDefaultValue;
            this.forceOnlineFlagField = this.forceOnlineFlagDefaultValue;
        }
        public TransactionConditionsType(TransactionConditionsType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionConditionsType))) {
            }
            else {
                this.AllowedPaymentBrand = value.AllowedPaymentBrand;
                this.AcquirerID = value.AcquirerID;
                this.AllowedLoyaltyBrand = value.AllowedLoyaltyBrand;
                this.ForceEntryMode = value.ForceEntryMode;
                this.DebitPreferredFlag = value.DebitPreferredFlag;
                this.LoyaltyHandling = value.LoyaltyHandling;
                this.CustomerLanguage = value.CustomerLanguage;
                this.ForceOnlineFlag = value.ForceOnlineFlag;
                this.MerchantCategoryCode = value.MerchantCategoryCode;
                this.AllowedPaymentBrandSpecified = value.AllowedPaymentBrandSpecified;
                this.AcquirerIDSpecified = value.AcquirerIDSpecified;
                this.AllowedLoyaltyBrandSpecified = value.AllowedLoyaltyBrandSpecified;
                this.ForceEntryModeSpecified = value.ForceEntryModeSpecified;
                this.DebitPreferredFlagSpecified = value.DebitPreferredFlagSpecified;
                this.LoyaltyHandlingSpecified = value.LoyaltyHandlingSpecified;
                this.CustomerLanguageSpecified = value.CustomerLanguageSpecified;
                this.ForceOnlineFlagSpecified = value.ForceOnlineFlagSpecified;
                this.MerchantCategoryCodeSpecified = value.MerchantCategoryCodeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedPaymentBrand", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AllowedPaymentBrand {
            get {
                return this.allowedPaymentBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.allowedPaymentBrandField = new string[0];
                    this.allowedPaymentBrandFieldSpecified = false;
                }
                else {
                    this.allowedPaymentBrandField = value;
                    this.allowedPaymentBrandFieldSpecified = (this.AllowedPaymentBrandLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AcquirerID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AcquirerID {
            get {
                return this.acquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.acquirerIDField = new string[0];
                    this.acquirerIDFieldSpecified = false;
                }
                else {
                    this.acquirerIDField = value;
                    this.acquirerIDFieldSpecified = (this.AcquirerIDLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedLoyaltyBrand", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AllowedLoyaltyBrand {
            get {
                return this.allowedLoyaltyBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.allowedLoyaltyBrandField = new string[0];
                    this.allowedLoyaltyBrandFieldSpecified = false;
                }
                else {
                    this.allowedLoyaltyBrandField = value;
                    this.allowedLoyaltyBrandFieldSpecified = (this.AllowedLoyaltyBrandLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ForceEntryMode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] ForceEntryMode {
            get {
                return this.forceEntryModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.forceEntryModeField = new string[0];
                    this.forceEntryModeFieldSpecified = false;
                }
                else {
                    this.forceEntryModeField = value;
                    this.forceEntryModeFieldSpecified = (this.ForceEntryModeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DebitPreferredFlag {
            get {
                return this.debitPreferredFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.DebitPreferredFlagDefaultValue)
                            || false)) {
                    this.debitPreferredFlagField = this.DebitPreferredFlagDefaultValue;
                    this.debitPreferredFlagFieldSpecified = false;
                }
                else {
                    this.debitPreferredFlagField = value;
                    this.debitPreferredFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Forbidden")]
        public string LoyaltyHandling {
            get {
                return this.loyaltyHandlingField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.LoyaltyHandlingDefaultValue)
                            || (value == default(string)))) {
                    this.loyaltyHandlingField = this.LoyaltyHandlingDefaultValue;
                    this.loyaltyHandlingFieldSpecified = false;
                }
                else {
                    this.loyaltyHandlingField = value;
                    this.loyaltyHandlingFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerLanguage {
            get {
                return this.customerLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerLanguageField = default(string);
                    this.customerLanguageFieldSpecified = false;
                }
                else {
                    this.customerLanguageField = value;
                    this.customerLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ForceOnlineFlag {
            get {
                return this.forceOnlineFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.ForceOnlineFlagDefaultValue)
                            || false)) {
                    this.forceOnlineFlagField = this.ForceOnlineFlagDefaultValue;
                    this.forceOnlineFlagFieldSpecified = false;
                }
                else {
                    this.forceOnlineFlagField = value;
                    this.forceOnlineFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MerchantCategoryCode {
            get {
                return this.merchantCategoryCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.merchantCategoryCodeField = default(string);
                    this.merchantCategoryCodeFieldSpecified = false;
                }
                else {
                    this.merchantCategoryCodeField = value;
                    this.merchantCategoryCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AllowedPaymentBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.allowedPaymentBrandFieldSpecified
                            || (this.AllowedPaymentBrandLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.allowedPaymentBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerIDFieldSpecified
                            || (this.AcquirerIDLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AllowedLoyaltyBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.allowedLoyaltyBrandFieldSpecified
                            || (this.AllowedLoyaltyBrandLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.allowedLoyaltyBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForceEntryModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.forceEntryModeFieldSpecified
                            || (this.ForceEntryModeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.forceEntryModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DebitPreferredFlagDefaultValue {
            get {
                return this.debitPreferredFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DebitPreferredFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.debitPreferredFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.debitPreferredFlagFieldSpecified = value;
                if ((this.debitPreferredFlagFieldSpecified
                            && (this.debitPreferredFlagField == default(bool)))) {
                    this.debitPreferredFlagField = this.debitPreferredFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyHandlingDefaultValue {
            get {
                return this.loyaltyHandlingDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyHandlingSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyHandlingFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyHandlingFieldSpecified = value;
                if ((this.loyaltyHandlingFieldSpecified
                            && (this.loyaltyHandlingField == default(string)))) {
                    this.loyaltyHandlingField = this.loyaltyHandlingDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForceOnlineFlagDefaultValue {
            get {
                return this.forceOnlineFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForceOnlineFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.forceOnlineFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.forceOnlineFlagFieldSpecified = value;
                if ((this.forceOnlineFlagFieldSpecified
                            && (this.forceOnlineFlagField == default(bool)))) {
                    this.forceOnlineFlagField = this.forceOnlineFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MerchantCategoryCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.merchantCategoryCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.merchantCategoryCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((false
                            || (this.AllowedPaymentBrandLength() != 0))
                            || (this.AcquirerIDLength() != 0))
                            || (this.AllowedLoyaltyBrandLength() != 0))
                            || (this.ForceEntryModeLength() != 0))
                            || ((this.DebitPreferredFlag != default(bool))
                            && this.DebitPreferredFlagSpecified))
                            || ((this.LoyaltyHandling != default(string))
                            && this.LoyaltyHandlingSpecified))
                            || ((this.CustomerLanguage != default(string))
                            && this.CustomerLanguageSpecified))
                            || ((this.ForceOnlineFlag != default(bool))
                            && this.ForceOnlineFlagSpecified))
                            || ((this.MerchantCategoryCode != default(string))
                            && this.MerchantCategoryCodeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionConditionsTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionConditionsType";
                // END ADDED BY XSD
            }
        }
        public int AllowedPaymentBrandLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.allowedPaymentBrandField == default(string[]))) {
                return 0;
            }
            else {
                return this.allowedPaymentBrandField.Length;
            }
            // END ADDED BY XSD
        }
        public string AllowedPaymentBrandGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.allowedPaymentBrandField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.allowedPaymentBrandField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AllowedPaymentBrandSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedPaymentBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.allowedPaymentBrandField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedPaymentBrandAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.allowedPaymentBrandField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.allowedPaymentBrandField.Length); i = (i + 1)) {
                        array[i] = allowedPaymentBrandField[i];
                    }
                    array[i] = value;
                    this.AllowedPaymentBrand = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedPaymentBrandRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedPaymentBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.allowedPaymentBrandField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = allowedPaymentBrandField[i];
                            }
                            for (i = (i + 1); (i < this.allowedPaymentBrandField.Length); i = (i + 1)) {
                                array[i] = allowedPaymentBrandField[i];
                            }
                            this.AllowedPaymentBrand = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AllowedPaymentBrandInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.allowedPaymentBrandField.Length <= index)) {
                        if ((this.AllowedPaymentBrandAddItem(value) == true)) {
                            return this.AllowedPaymentBrandLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.allowedPaymentBrandField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = allowedPaymentBrandField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.allowedPaymentBrandField.Length); j = (j + 1)) {
                            array[k] = allowedPaymentBrandField[j];
                            k = (k + 1);
                        }
                        this.AllowedPaymentBrand = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int AcquirerIDLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.acquirerIDField == default(string[]))) {
                return 0;
            }
            else {
                return this.acquirerIDField.Length;
            }
            // END ADDED BY XSD
        }
        public string AcquirerIDGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.acquirerIDField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.acquirerIDField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.acquirerIDField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.acquirerIDField.Length); i = (i + 1)) {
                        array[i] = acquirerIDField[i];
                    }
                    array[i] = value;
                    this.AcquirerID = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.acquirerIDField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = acquirerIDField[i];
                            }
                            for (i = (i + 1); (i < this.acquirerIDField.Length); i = (i + 1)) {
                                array[i] = acquirerIDField[i];
                            }
                            this.AcquirerID = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AcquirerIDInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.acquirerIDField.Length <= index)) {
                        if ((this.AcquirerIDAddItem(value) == true)) {
                            return this.AcquirerIDLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.acquirerIDField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = acquirerIDField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.acquirerIDField.Length); j = (j + 1)) {
                            array[k] = acquirerIDField[j];
                            k = (k + 1);
                        }
                        this.AcquirerID = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int AllowedLoyaltyBrandLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.allowedLoyaltyBrandField == default(string[]))) {
                return 0;
            }
            else {
                return this.allowedLoyaltyBrandField.Length;
            }
            // END ADDED BY XSD
        }
        public string AllowedLoyaltyBrandGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.allowedLoyaltyBrandField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.allowedLoyaltyBrandField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AllowedLoyaltyBrandSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedLoyaltyBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.allowedLoyaltyBrandField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedLoyaltyBrandAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.allowedLoyaltyBrandField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.allowedLoyaltyBrandField.Length); i = (i + 1)) {
                        array[i] = allowedLoyaltyBrandField[i];
                    }
                    array[i] = value;
                    this.AllowedLoyaltyBrand = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedLoyaltyBrandRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedLoyaltyBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.allowedLoyaltyBrandField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = allowedLoyaltyBrandField[i];
                            }
                            for (i = (i + 1); (i < this.allowedLoyaltyBrandField.Length); i = (i + 1)) {
                                array[i] = allowedLoyaltyBrandField[i];
                            }
                            this.AllowedLoyaltyBrand = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AllowedLoyaltyBrandInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.allowedLoyaltyBrandField.Length <= index)) {
                        if ((this.AllowedLoyaltyBrandAddItem(value) == true)) {
                            return this.AllowedLoyaltyBrandLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.allowedLoyaltyBrandField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = allowedLoyaltyBrandField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.allowedLoyaltyBrandField.Length); j = (j + 1)) {
                            array[k] = allowedLoyaltyBrandField[j];
                            k = (k + 1);
                        }
                        this.AllowedLoyaltyBrand = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int ForceEntryModeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.forceEntryModeField == default(string[]))) {
                return 0;
            }
            else {
                return this.forceEntryModeField.Length;
            }
            // END ADDED BY XSD
        }
        public string ForceEntryModeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.forceEntryModeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.forceEntryModeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.forceEntryModeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.forceEntryModeField.Length); i = (i + 1)) {
                        array[i] = forceEntryModeField[i];
                    }
                    array[i] = value;
                    this.ForceEntryMode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.forceEntryModeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = forceEntryModeField[i];
                            }
                            for (i = (i + 1); (i < this.forceEntryModeField.Length); i = (i + 1)) {
                                array[i] = forceEntryModeField[i];
                            }
                            this.ForceEntryMode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ForceEntryModeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.forceEntryModeField.Length <= index)) {
                        if ((this.ForceEntryModeAddItem(value) == true)) {
                            return this.ForceEntryModeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.forceEntryModeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = forceEntryModeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.forceEntryModeField.Length); j = (j + 1)) {
                            array[k] = forceEntryModeField[j];
                            k = (k + 1);
                        }
                        this.ForceEntryMode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ba913d76-c88c-44cf-895b-8da29ee981ec")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleItemType : ISaleItemType {
        private string unitOfMeasureField = default(string);
        private double quantityField = default(double);
        private bool quantityFieldSpecified = default(bool);
        private double unitPriceField = default(double);
        private bool unitPriceFieldSpecified = default(bool);
        private string taxCodeField = default(string);
        private string saleChannelField = default(string);
        private string productLabelField = default(string);
        private string additionalProductInfoField = default(string);
        private int itemIDField = default(int);
        private string productCodeField = default(string);
        private string eanUpcField = default(string);
        private double itemAmountField = default(double);
        private bool unitOfMeasureFieldSpecified = false;
        private bool taxCodeFieldSpecified = false;
        private bool saleChannelFieldSpecified = false;
        private bool productLabelFieldSpecified = false;
        private bool additionalProductInfoFieldSpecified = false;
        private bool itemIDFieldSpecified = false;
        private bool productCodeFieldSpecified = false;
        private bool eanUpcFieldSpecified = false;
        private bool itemAmountFieldSpecified = false;
        public SaleItemType() {
        }
        public SaleItemType(SaleItemType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleItemType))) {
            }
            else {
                this.UnitOfMeasure = value.UnitOfMeasure;
                this.Quantity = value.Quantity;
                this.QuantitySpecified = value.QuantitySpecified;
                this.UnitPrice = value.UnitPrice;
                this.UnitPriceSpecified = value.UnitPriceSpecified;
                this.TaxCode = value.TaxCode;
                this.SaleChannel = value.SaleChannel;
                this.ProductLabel = value.ProductLabel;
                this.AdditionalProductInfo = value.AdditionalProductInfo;
                this.ItemID = value.ItemID;
                this.ProductCode = value.ProductCode;
                this.EanUpc = value.EanUpc;
                this.ItemAmount = value.ItemAmount;
                this.UnitOfMeasureSpecified = value.UnitOfMeasureSpecified;
                this.TaxCodeSpecified = value.TaxCodeSpecified;
                this.SaleChannelSpecified = value.SaleChannelSpecified;
                this.ProductLabelSpecified = value.ProductLabelSpecified;
                this.AdditionalProductInfoSpecified = value.AdditionalProductInfoSpecified;
                this.ItemIDSpecified = value.ItemIDSpecified;
                this.ProductCodeSpecified = value.ProductCodeSpecified;
                this.EanUpcSpecified = value.EanUpcSpecified;
                this.ItemAmountSpecified = value.ItemAmountSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UnitOfMeasure {
            get {
                return this.unitOfMeasureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.unitOfMeasureField = default(string);
                    this.unitOfMeasureFieldSpecified = false;
                }
                else {
                    this.unitOfMeasureField = value;
                    this.unitOfMeasureFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double Quantity {
            get {
                return this.quantityField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.quantityField = default(double);
                    this.quantityFieldSpecified = false;
                }
                else {
                    this.quantityField = value;
                    this.quantityFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.quantityFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.quantityFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.unitPriceField = default(double);
                    this.unitPriceFieldSpecified = false;
                }
                else {
                    this.unitPriceField = value;
                    this.unitPriceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitPriceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.unitPriceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.unitPriceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TaxCode {
            get {
                return this.taxCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.taxCodeField = default(string);
                    this.taxCodeFieldSpecified = false;
                }
                else {
                    this.taxCodeField = value;
                    this.taxCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SaleChannel {
            get {
                return this.saleChannelField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleChannelField = default(string);
                    this.saleChannelFieldSpecified = false;
                }
                else {
                    this.saleChannelField = value;
                    this.saleChannelFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ProductLabel {
            get {
                return this.productLabelField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.productLabelField = default(string);
                    this.productLabelFieldSpecified = false;
                }
                else {
                    this.productLabelField = value;
                    this.productLabelFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AdditionalProductInfo {
            get {
                return this.additionalProductInfoField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.additionalProductInfoField = default(string);
                    this.additionalProductInfoFieldSpecified = false;
                }
                else {
                    this.additionalProductInfoField = value;
                    this.additionalProductInfoFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.itemIDField = default(int);
                    this.itemIDFieldSpecified = false;
                }
                else {
                    this.itemIDField = value;
                    this.itemIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.productCodeField = default(string);
                    this.productCodeFieldSpecified = false;
                }
                else {
                    this.productCodeField = value;
                    this.productCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EanUpc {
            get {
                return this.eanUpcField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.eanUpcField = default(string);
                    this.eanUpcFieldSpecified = false;
                }
                else {
                    this.eanUpcField = value;
                    this.eanUpcFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ItemAmount {
            get {
                return this.itemAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.itemAmountField = default(double);
                    this.itemAmountFieldSpecified = false;
                }
                else {
                    this.itemAmountField = value;
                    this.itemAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool UnitOfMeasureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.unitOfMeasureFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.unitOfMeasureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TaxCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.taxCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.taxCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleChannelSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleChannelFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleChannelFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProductLabelSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.productLabelFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.productLabelFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AdditionalProductInfoSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.additionalProductInfoFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.additionalProductInfoFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProductCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.productCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.productCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EanUpcSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.eanUpcFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.eanUpcFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((((false
                            || ((this.UnitOfMeasure != default(string))
                            && this.UnitOfMeasureSpecified))
                            || ((this.Quantity != default(double))
                            && this.QuantitySpecified))
                            || ((this.UnitPrice != default(double))
                            && this.UnitPriceSpecified))
                            || ((this.TaxCode != default(string))
                            && this.TaxCodeSpecified))
                            || ((this.SaleChannel != default(string))
                            && this.SaleChannelSpecified))
                            || ((this.ProductLabel != default(string))
                            && this.ProductLabelSpecified))
                            || ((this.AdditionalProductInfo != default(string))
                            && this.AdditionalProductInfoSpecified))
                            || ((this.ItemID != default(int))
                            && this.ItemIDSpecified))
                            || ((this.ProductCode != default(string))
                            && this.ProductCodeSpecified))
                            || ((this.EanUpc != default(string))
                            && this.EanUpcSpecified))
                            || ((this.ItemAmount != default(double))
                            && this.ItemAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleItemTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleItemType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3120c973-ff7b-4cff-abaa-ff8ca7eda572")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyDataType : ILoyaltyDataType {
        private TransactionIdentificationType cardAcquisitionReferenceField = new TransactionIdentificationType();
        private LoyaltyAccountIDType loyaltyAccountIDField = new LoyaltyAccountIDType();
        private LoyaltyAmountType loyaltyAmountField = new LoyaltyAmountType();
        private bool cardAcquisitionReferenceFieldSpecified = false;
        private bool loyaltyAccountIDFieldSpecified = false;
        private bool loyaltyAmountFieldSpecified = false;
        public LoyaltyDataType() {
        }
        public LoyaltyDataType(LoyaltyDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyDataType))) {
            }
            else {
                this.CardAcquisitionReference = value.CardAcquisitionReference;
                this.LoyaltyAccountID = value.LoyaltyAccountID;
                this.LoyaltyAmount = value.LoyaltyAmount;
                this.CardAcquisitionReferenceSpecified = value.CardAcquisitionReferenceSpecified;
                this.LoyaltyAccountIDSpecified = value.LoyaltyAccountIDSpecified;
                this.LoyaltyAmountSpecified = value.LoyaltyAmountSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType CardAcquisitionReference {
            get {
                return this.cardAcquisitionReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.cardAcquisitionReferenceField = new TransactionIdentificationType();
                    this.cardAcquisitionReferenceFieldSpecified = false;
                }
                else {
                    this.cardAcquisitionReferenceField = value;
                    this.cardAcquisitionReferenceFieldSpecified = this.CardAcquisitionReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountIDType LoyaltyAccountID {
            get {
                return this.loyaltyAccountIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountIDType))
                            || false)) {
                    this.loyaltyAccountIDField = new LoyaltyAccountIDType();
                    this.loyaltyAccountIDFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountIDField = value;
                    this.loyaltyAccountIDFieldSpecified = this.LoyaltyAccountID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAmountType LoyaltyAmount {
            get {
                return this.loyaltyAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAmountType))
                            || false)) {
                    this.loyaltyAmountField = new LoyaltyAmountType();
                    this.loyaltyAmountFieldSpecified = false;
                }
                else {
                    this.loyaltyAmountField = value;
                    this.loyaltyAmountFieldSpecified = this.LoyaltyAmount.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardAcquisitionReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardAcquisitionReferenceFieldSpecified || this.CardAcquisitionReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardAcquisitionReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountIDFieldSpecified || this.LoyaltyAccountID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAmountFieldSpecified || this.LoyaltyAmount.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.CardAcquisitionReference != default(TransactionIdentificationType))
                            && this.CardAcquisitionReferenceSpecified))
                            || ((this.LoyaltyAccountID != default(LoyaltyAccountIDType))
                            && this.LoyaltyAccountIDSpecified))
                            || ((this.LoyaltyAmount != default(LoyaltyAmountType))
                            && this.LoyaltyAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("fbd29be4-20dc-4411-9867-870cde378a08")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyAmountType : ILoyaltyAmountType {
        private string loyaltyUnitField = default(string);
        private string currencyField = default(string);
        private double valueField = default(double);
        private string loyaltyUnitDefaultValue = "Point";
        private bool loyaltyUnitFieldSpecified = false;
        private bool currencyFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public LoyaltyAmountType() {
            this.loyaltyUnitField = this.loyaltyUnitDefaultValue;
        }
        public LoyaltyAmountType(LoyaltyAmountType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyAmountType))) {
            }
            else {
                this.LoyaltyUnit = value.LoyaltyUnit;
                this.Currency = value.Currency;
                this.Value = value.Value;
                this.LoyaltyUnitSpecified = value.LoyaltyUnitSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Point")]
        public string LoyaltyUnit {
            get {
                return this.loyaltyUnitField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.LoyaltyUnitDefaultValue)
                            || (value == default(string)))) {
                    this.loyaltyUnitField = this.LoyaltyUnitDefaultValue;
                    this.loyaltyUnitFieldSpecified = false;
                }
                else {
                    this.loyaltyUnitField = value;
                    this.loyaltyUnitFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.valueField = default(double);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyUnitDefaultValue {
            get {
                return this.loyaltyUnitDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyUnitSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyUnitFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyUnitFieldSpecified = value;
                if ((this.loyaltyUnitFieldSpecified
                            && (this.loyaltyUnitField == default(string)))) {
                    this.loyaltyUnitField = this.loyaltyUnitDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.LoyaltyUnit != default(string))
                            && this.LoyaltyUnitSpecified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified))
                            || ((this.Value != default(double))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyAmountTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyAmountType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("a56f7430-a0d5-4d96-8e0b-bb4ae514735b")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentRequestType : IPaymentRequestType {
        private SaleDataType saleDataField = new SaleDataType();
        private PaymentTransactionType paymentTransactionField = new PaymentTransactionType();
        private PaymentDataType paymentDataField = new PaymentDataType();
        private LoyaltyDataType[] loyaltyDataField = new LoyaltyDataType[0];
        private bool saleDataFieldSpecified = false;
        private bool paymentTransactionFieldSpecified = false;
        private bool paymentDataFieldSpecified = false;
        private bool loyaltyDataFieldSpecified = false;
        public PaymentRequestType() {
        }
        public PaymentRequestType(PaymentRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentRequestType))) {
            }
            else {
                this.SaleData = value.SaleData;
                this.PaymentTransaction = value.PaymentTransaction;
                this.PaymentData = value.PaymentData;
                this.LoyaltyData = value.LoyaltyData;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.PaymentTransactionSpecified = value.PaymentTransactionSpecified;
                this.PaymentDataSpecified = value.PaymentDataSpecified;
                this.LoyaltyDataSpecified = value.LoyaltyDataSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentTransactionType PaymentTransaction {
            get {
                return this.paymentTransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentTransactionType))
                            || false)) {
                    this.paymentTransactionField = new PaymentTransactionType();
                    this.paymentTransactionFieldSpecified = false;
                }
                else {
                    this.paymentTransactionField = value;
                    this.paymentTransactionFieldSpecified = this.PaymentTransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentDataType PaymentData {
            get {
                return this.paymentDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentDataType))
                            || false)) {
                    this.paymentDataField = new PaymentDataType();
                    this.paymentDataFieldSpecified = false;
                }
                else {
                    this.paymentDataField = value;
                    this.paymentDataFieldSpecified = this.PaymentData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyDataType[] LoyaltyData {
            get {
                return this.loyaltyDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(LoyaltyDataType[]))
                            || false)) {
                    this.loyaltyDataField = new LoyaltyDataType[0];
                    this.loyaltyDataFieldSpecified = false;
                }
                else {
                    this.loyaltyDataField = value;
                    this.loyaltyDataFieldSpecified = (this.LoyaltyDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentTransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentTransactionFieldSpecified || this.PaymentTransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentTransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentDataFieldSpecified || this.PaymentData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyDataFieldSpecified
                            || (this.LoyaltyDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.PaymentTransaction != default(PaymentTransactionType))
                            && this.PaymentTransactionSpecified))
                            || ((this.PaymentData != default(PaymentDataType))
                            && this.PaymentDataSpecified))
                            || (this.LoyaltyDataLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentRequestType";
                // END ADDED BY XSD
            }
        }
        public int LoyaltyDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                return 0;
            }
            else {
                return this.loyaltyDataField.Length;
            }
            // END ADDED BY XSD
        }
        public LoyaltyDataType LoyaltyDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return default(LoyaltyDataType);
                }
                else {
                    if ((0 > index)) {
                        return default(LoyaltyDataType);
                    }
                    else {
                        if ((this.loyaltyDataField.Length <= index)) {
                            return default(LoyaltyDataType);
                        }
                        else {
                            return this.loyaltyDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(LoyaltyDataType);
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyDataSetItem(int index, LoyaltyDataType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loyaltyDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyDataAddItem(LoyaltyDataType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return false;
                }
                else {
                    LoyaltyDataType[] array = new LoyaltyDataType[(this.loyaltyDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loyaltyDataField.Length); i = (i + 1)) {
                        array[i] = loyaltyDataField[i];
                    }
                    array[i] = value;
                    this.LoyaltyData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            LoyaltyDataType[] array = new LoyaltyDataType[(this.loyaltyDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loyaltyDataField[i];
                            }
                            for (i = (i + 1); (i < this.loyaltyDataField.Length); i = (i + 1)) {
                                array[i] = loyaltyDataField[i];
                            }
                            this.LoyaltyData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyDataInsertItem(int index, LoyaltyDataType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loyaltyDataField == default(LoyaltyDataType[]))) {
                    return -1;
                }
                else {
                    if ((this.loyaltyDataField.Length <= index)) {
                        if ((this.LoyaltyDataAddItem(value) == true)) {
                            return this.LoyaltyDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        LoyaltyDataType[] array = new LoyaltyDataType[(this.loyaltyDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loyaltyDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loyaltyDataField.Length); j = (j + 1)) {
                            array[k] = loyaltyDataField[j];
                            k = (k + 1);
                        }
                        this.LoyaltyData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("6ccd504b-3424-4cc5-88ae-d26c74efd50b")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentTransactionType : IPaymentTransactionType {
        private AmountsReqType amountsReqField = new AmountsReqType();
        private OriginalPOITransactionType originalPOITransactionField = new OriginalPOITransactionType();
        private TransactionConditionsType transactionConditionsField = new TransactionConditionsType();
        private SaleItemType[] saleItemField = new SaleItemType[0];
        private bool amountsReqFieldSpecified = false;
        private bool originalPOITransactionFieldSpecified = false;
        private bool transactionConditionsFieldSpecified = false;
        private bool saleItemFieldSpecified = false;
        public PaymentTransactionType() {
        }
        public PaymentTransactionType(PaymentTransactionType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentTransactionType))) {
            }
            else {
                this.AmountsReq = value.AmountsReq;
                this.OriginalPOITransaction = value.OriginalPOITransaction;
                this.TransactionConditions = value.TransactionConditions;
                this.SaleItem = value.SaleItem;
                this.AmountsReqSpecified = value.AmountsReqSpecified;
                this.OriginalPOITransactionSpecified = value.OriginalPOITransactionSpecified;
                this.TransactionConditionsSpecified = value.TransactionConditionsSpecified;
                this.SaleItemSpecified = value.SaleItemSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AmountsReqType AmountsReq {
            get {
                return this.amountsReqField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AmountsReqType))
                            || false)) {
                    this.amountsReqField = new AmountsReqType();
                    this.amountsReqFieldSpecified = false;
                }
                else {
                    this.amountsReqField = value;
                    this.amountsReqFieldSpecified = this.AmountsReq.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OriginalPOITransactionType OriginalPOITransaction {
            get {
                return this.originalPOITransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OriginalPOITransactionType))
                            || false)) {
                    this.originalPOITransactionField = new OriginalPOITransactionType();
                    this.originalPOITransactionFieldSpecified = false;
                }
                else {
                    this.originalPOITransactionField = value;
                    this.originalPOITransactionFieldSpecified = this.OriginalPOITransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionConditionsType TransactionConditions {
            get {
                return this.transactionConditionsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionConditionsType))
                            || false)) {
                    this.transactionConditionsField = new TransactionConditionsType();
                    this.transactionConditionsFieldSpecified = false;
                }
                else {
                    this.transactionConditionsField = value;
                    this.transactionConditionsFieldSpecified = this.TransactionConditions.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SaleItem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleItemType[] SaleItem {
            get {
                return this.saleItemField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SaleItemType[]))
                            || false)) {
                    this.saleItemField = new SaleItemType[0];
                    this.saleItemFieldSpecified = false;
                }
                else {
                    this.saleItemField = value;
                    this.saleItemFieldSpecified = (this.SaleItemLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AmountsReqSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.amountsReqFieldSpecified || this.AmountsReq.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.amountsReqFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OriginalPOITransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.originalPOITransactionFieldSpecified || this.OriginalPOITransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.originalPOITransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionConditionsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionConditionsFieldSpecified || this.TransactionConditions.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionConditionsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleItemSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleItemFieldSpecified
                            || (this.SaleItemLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleItemFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.AmountsReq != default(AmountsReqType))
                            && this.AmountsReqSpecified))
                            || ((this.OriginalPOITransaction != default(OriginalPOITransactionType))
                            && this.OriginalPOITransactionSpecified))
                            || ((this.TransactionConditions != default(TransactionConditionsType))
                            && this.TransactionConditionsSpecified))
                            || (this.SaleItemLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentTransactionTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentTransactionType";
                // END ADDED BY XSD
            }
        }
        public int SaleItemLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.saleItemField == default(SaleItemType[]))) {
                return 0;
            }
            else {
                return this.saleItemField.Length;
            }
            // END ADDED BY XSD
        }
        public SaleItemType SaleItemGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return default(SaleItemType);
                }
                else {
                    if ((0 > index)) {
                        return default(SaleItemType);
                    }
                    else {
                        if ((this.saleItemField.Length <= index)) {
                            return default(SaleItemType);
                        }
                        else {
                            return this.saleItemField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SaleItemType);
            }
            // END ADDED BY XSD
        }
        public bool SaleItemSetItem(int index, SaleItemType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.saleItemField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.saleItemField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SaleItemAddItem(SaleItemType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return false;
                }
                else {
                    SaleItemType[] array = new SaleItemType[(this.saleItemField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.saleItemField.Length); i = (i + 1)) {
                        array[i] = saleItemField[i];
                    }
                    array[i] = value;
                    this.SaleItem = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SaleItemRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.saleItemField.Length <= index)) {
                            return false;
                        }
                        else {
                            SaleItemType[] array = new SaleItemType[(this.saleItemField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = saleItemField[i];
                            }
                            for (i = (i + 1); (i < this.saleItemField.Length); i = (i + 1)) {
                                array[i] = saleItemField[i];
                            }
                            this.SaleItem = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SaleItemInsertItem(int index, SaleItemType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.saleItemField == default(SaleItemType[]))) {
                    return -1;
                }
                else {
                    if ((this.saleItemField.Length <= index)) {
                        if ((this.SaleItemAddItem(value) == true)) {
                            return this.SaleItemLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SaleItemType[] array = new SaleItemType[(this.saleItemField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = saleItemField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.saleItemField.Length); j = (j + 1)) {
                            array[k] = saleItemField[j];
                            k = (k + 1);
                        }
                        this.SaleItem = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("9861c5af-a679-4206-a871-304650f7012a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentDataType : IPaymentDataType {
        private TransactionIdentificationType cardAcquisitionReferenceField = new TransactionIdentificationType();
        private string requestedValidityDateField = default(string);
        private InstalmentType instalmentField = new InstalmentType();
        private CustomerOrderType customerOrderField = new CustomerOrderType();
        private PaymentInstrumentDataType paymentInstrumentDataField = new PaymentInstrumentDataType();
        private string paymentTypeField = default(string);
        private bool splitPaymentFlagField = default(bool);
        private bool cardAcquisitionReferenceFieldSpecified = false;
        private bool requestedValidityDateFieldSpecified = false;
        private bool instalmentFieldSpecified = false;
        private bool customerOrderFieldSpecified = false;
        private bool paymentInstrumentDataFieldSpecified = false;
        private string paymentTypeDefaultValue = "Normal";
        private bool paymentTypeFieldSpecified = false;
        private bool splitPaymentFlagDefaultValue = false;
        private bool splitPaymentFlagFieldSpecified = false;
        public PaymentDataType() {
            this.paymentTypeField = this.paymentTypeDefaultValue;
            this.splitPaymentFlagField = this.splitPaymentFlagDefaultValue;
        }
        public PaymentDataType(PaymentDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentDataType))) {
            }
            else {
                this.CardAcquisitionReference = value.CardAcquisitionReference;
                this.RequestedValidityDate = value.RequestedValidityDate;
                this.Instalment = value.Instalment;
                this.CustomerOrder = value.CustomerOrder;
                this.PaymentInstrumentData = value.PaymentInstrumentData;
                this.PaymentType = value.PaymentType;
                this.SplitPaymentFlag = value.SplitPaymentFlag;
                this.CardAcquisitionReferenceSpecified = value.CardAcquisitionReferenceSpecified;
                this.RequestedValidityDateSpecified = value.RequestedValidityDateSpecified;
                this.InstalmentSpecified = value.InstalmentSpecified;
                this.CustomerOrderSpecified = value.CustomerOrderSpecified;
                this.PaymentInstrumentDataSpecified = value.PaymentInstrumentDataSpecified;
                this.PaymentTypeSpecified = value.PaymentTypeSpecified;
                this.SplitPaymentFlagSpecified = value.SplitPaymentFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType CardAcquisitionReference {
            get {
                return this.cardAcquisitionReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.cardAcquisitionReferenceField = new TransactionIdentificationType();
                    this.cardAcquisitionReferenceFieldSpecified = false;
                }
                else {
                    this.cardAcquisitionReferenceField = value;
                    this.cardAcquisitionReferenceFieldSpecified = this.CardAcquisitionReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RequestedValidityDate {
            get {
                return this.requestedValidityDateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.requestedValidityDateField = default(string);
                    this.requestedValidityDateFieldSpecified = false;
                }
                else {
                    this.requestedValidityDateField = value;
                    this.requestedValidityDateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstalmentType Instalment {
            get {
                return this.instalmentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(InstalmentType))
                            || false)) {
                    this.instalmentField = new InstalmentType();
                    this.instalmentFieldSpecified = false;
                }
                else {
                    this.instalmentField = value;
                    this.instalmentFieldSpecified = this.Instalment.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CustomerOrderType CustomerOrder {
            get {
                return this.customerOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CustomerOrderType))
                            || false)) {
                    this.customerOrderField = new CustomerOrderType();
                    this.customerOrderFieldSpecified = false;
                }
                else {
                    this.customerOrderField = value;
                    this.customerOrderFieldSpecified = this.CustomerOrder.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentInstrumentDataType PaymentInstrumentData {
            get {
                return this.paymentInstrumentDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentInstrumentDataType))
                            || false)) {
                    this.paymentInstrumentDataField = new PaymentInstrumentDataType();
                    this.paymentInstrumentDataFieldSpecified = false;
                }
                else {
                    this.paymentInstrumentDataField = value;
                    this.paymentInstrumentDataFieldSpecified = this.PaymentInstrumentData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Normal")]
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.PaymentTypeDefaultValue)
                            || (value == default(string)))) {
                    this.paymentTypeField = this.PaymentTypeDefaultValue;
                    this.paymentTypeFieldSpecified = false;
                }
                else {
                    this.paymentTypeField = value;
                    this.paymentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SplitPaymentFlag {
            get {
                return this.splitPaymentFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.SplitPaymentFlagDefaultValue)
                            || false)) {
                    this.splitPaymentFlagField = this.SplitPaymentFlagDefaultValue;
                    this.splitPaymentFlagFieldSpecified = false;
                }
                else {
                    this.splitPaymentFlagField = value;
                    this.splitPaymentFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardAcquisitionReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardAcquisitionReferenceFieldSpecified || this.CardAcquisitionReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardAcquisitionReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RequestedValidityDateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.requestedValidityDateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.requestedValidityDateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InstalmentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.instalmentFieldSpecified || this.Instalment.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.instalmentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderFieldSpecified || this.CustomerOrder.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentInstrumentDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentInstrumentDataFieldSpecified || this.PaymentInstrumentData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentInstrumentDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentTypeDefaultValue {
            get {
                return this.paymentTypeDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentTypeFieldSpecified = value;
                if ((this.paymentTypeFieldSpecified
                            && (this.paymentTypeField == default(string)))) {
                    this.paymentTypeField = this.paymentTypeDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SplitPaymentFlagDefaultValue {
            get {
                return this.splitPaymentFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SplitPaymentFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.splitPaymentFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.splitPaymentFlagFieldSpecified = value;
                if ((this.splitPaymentFlagFieldSpecified
                            && (this.splitPaymentFlagField == default(bool)))) {
                    this.splitPaymentFlagField = this.splitPaymentFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.CardAcquisitionReference != default(TransactionIdentificationType))
                            && this.CardAcquisitionReferenceSpecified))
                            || ((this.Instalment != default(InstalmentType))
                            && this.InstalmentSpecified))
                            || ((this.CustomerOrder != default(CustomerOrderType))
                            && this.CustomerOrderSpecified))
                            || ((this.PaymentInstrumentData != default(PaymentInstrumentDataType))
                            && this.PaymentInstrumentDataSpecified))
                            || ((this.RequestedValidityDate != default(string))
                            && this.RequestedValidityDateSpecified))
                            || ((this.PaymentType != default(string))
                            && this.PaymentTypeSpecified))
                            || ((this.SplitPaymentFlag != default(bool))
                            && this.SplitPaymentFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("8b3c5419-172d-48d6-905d-361180a0abd1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class InstalmentType : IInstalmentType {
        private string instalmentType1Field = default(string);
        private int sequenceNumberField = default(int);
        private string planIDField = default(string);
        private int periodField = default(int);
        private string periodUnitField = default(string);
        private string firstPaymentDateField = default(string);
        private int totalNbOfPaymentsField = default(int);
        private double cumulativeAmountField = default(double);
        private bool cumulativeAmountFieldSpecified = default(bool);
        private double firstAmountField = default(double);
        private bool firstAmountFieldSpecified = default(bool);
        private double chargesField = default(double);
        private bool chargesFieldSpecified = default(bool);
        private bool instalmentType1FieldSpecified = false;
        private bool sequenceNumberFieldSpecified = false;
        private bool planIDFieldSpecified = false;
        private bool periodFieldSpecified = false;
        private bool periodUnitFieldSpecified = false;
        private bool firstPaymentDateFieldSpecified = false;
        private bool totalNbOfPaymentsFieldSpecified = false;
        public InstalmentType() {
        }
        public InstalmentType(InstalmentType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(InstalmentType))) {
            }
            else {
                this.InstalmentType1 = value.InstalmentType1;
                this.SequenceNumber = value.SequenceNumber;
                this.PlanID = value.PlanID;
                this.Period = value.Period;
                this.PeriodUnit = value.PeriodUnit;
                this.FirstPaymentDate = value.FirstPaymentDate;
                this.TotalNbOfPayments = value.TotalNbOfPayments;
                this.CumulativeAmount = value.CumulativeAmount;
                this.CumulativeAmountSpecified = value.CumulativeAmountSpecified;
                this.FirstAmount = value.FirstAmount;
                this.FirstAmountSpecified = value.FirstAmountSpecified;
                this.Charges = value.Charges;
                this.ChargesSpecified = value.ChargesSpecified;
                this.InstalmentType1Specified = value.InstalmentType1Specified;
                this.SequenceNumberSpecified = value.SequenceNumberSpecified;
                this.PlanIDSpecified = value.PlanIDSpecified;
                this.PeriodSpecified = value.PeriodSpecified;
                this.PeriodUnitSpecified = value.PeriodUnitSpecified;
                this.FirstPaymentDateSpecified = value.FirstPaymentDateSpecified;
                this.TotalNbOfPaymentsSpecified = value.TotalNbOfPaymentsSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InstalmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InstalmentType1 {
            get {
                return this.instalmentType1Field;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.instalmentType1Field = default(string);
                    this.instalmentType1FieldSpecified = false;
                }
                else {
                    this.instalmentType1Field = value;
                    this.instalmentType1FieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.sequenceNumberField = default(int);
                    this.sequenceNumberFieldSpecified = false;
                }
                else {
                    this.sequenceNumberField = value;
                    this.sequenceNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PlanID {
            get {
                return this.planIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.planIDField = default(string);
                    this.planIDFieldSpecified = false;
                }
                else {
                    this.planIDField = value;
                    this.planIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Period {
            get {
                return this.periodField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.periodField = default(int);
                    this.periodFieldSpecified = false;
                }
                else {
                    this.periodField = value;
                    this.periodFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PeriodUnit {
            get {
                return this.periodUnitField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.periodUnitField = default(string);
                    this.periodUnitFieldSpecified = false;
                }
                else {
                    this.periodUnitField = value;
                    this.periodUnitFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FirstPaymentDate {
            get {
                return this.firstPaymentDateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.firstPaymentDateField = default(string);
                    this.firstPaymentDateFieldSpecified = false;
                }
                else {
                    this.firstPaymentDateField = value;
                    this.firstPaymentDateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TotalNbOfPayments {
            get {
                return this.totalNbOfPaymentsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.totalNbOfPaymentsField = default(int);
                    this.totalNbOfPaymentsFieldSpecified = false;
                }
                else {
                    this.totalNbOfPaymentsField = value;
                    this.totalNbOfPaymentsFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CumulativeAmount {
            get {
                return this.cumulativeAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.cumulativeAmountField = default(double);
                    this.cumulativeAmountFieldSpecified = false;
                }
                else {
                    this.cumulativeAmountField = value;
                    this.cumulativeAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CumulativeAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cumulativeAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cumulativeAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double FirstAmount {
            get {
                return this.firstAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.firstAmountField = default(double);
                    this.firstAmountFieldSpecified = false;
                }
                else {
                    this.firstAmountField = value;
                    this.firstAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.firstAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.firstAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Charges {
            get {
                return this.chargesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.chargesField = default(double);
                    this.chargesFieldSpecified = false;
                }
                else {
                    this.chargesField = value;
                    this.chargesFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChargesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.chargesFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.chargesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InstalmentType1Specified {
            get {
                // BEGIN ADDED BY XSD
                return (this.instalmentType1FieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.instalmentType1FieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SequenceNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.sequenceNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.sequenceNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PlanIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.planIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.planIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PeriodSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.periodFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.periodFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PeriodUnitSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.periodUnitFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.periodUnitFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool FirstPaymentDateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.firstPaymentDateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.firstPaymentDateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TotalNbOfPaymentsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalNbOfPaymentsFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalNbOfPaymentsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((((false
                            || ((this.InstalmentType1 != default(string))
                            && this.InstalmentType1Specified))
                            || ((this.SequenceNumber != default(int))
                            && this.SequenceNumberSpecified))
                            || ((this.PlanID != default(string))
                            && this.PlanIDSpecified))
                            || ((this.Period != default(int))
                            && this.PeriodSpecified))
                            || ((this.PeriodUnit != default(string))
                            && this.PeriodUnitSpecified))
                            || ((this.FirstPaymentDate != default(string))
                            && this.FirstPaymentDateSpecified))
                            || ((this.TotalNbOfPayments != default(int))
                            && this.TotalNbOfPaymentsSpecified))
                            || ((this.CumulativeAmount != default(double))
                            && this.CumulativeAmountSpecified))
                            || ((this.FirstAmount != default(double))
                            && this.FirstAmountSpecified))
                            || ((this.Charges != default(double))
                            && this.ChargesSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string InstalmentTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "InstalmentType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("f86422f2-cfc6-457f-87ff-2eb17d73e239")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ReversalRequestType : IReversalRequestType {
        private SaleDataType saleDataField = new SaleDataType();
        private OriginalPOITransactionType originalPOITransactionField = new OriginalPOITransactionType();
        private CustomerOrderType customerOrderField = new CustomerOrderType();
        private string reversalReasonField = default(string);
        private double reversedAmountField = default(double);
        private bool reversedAmountFieldSpecified = default(bool);
        private bool saleDataFieldSpecified = false;
        private bool originalPOITransactionFieldSpecified = false;
        private bool customerOrderFieldSpecified = false;
        private bool reversalReasonFieldSpecified = false;
        public ReversalRequestType() {
        }
        public ReversalRequestType(ReversalRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ReversalRequestType))) {
            }
            else {
                this.SaleData = value.SaleData;
                this.OriginalPOITransaction = value.OriginalPOITransaction;
                this.CustomerOrder = value.CustomerOrder;
                this.ReversalReason = value.ReversalReason;
                this.ReversedAmount = value.ReversedAmount;
                this.ReversedAmountSpecified = value.ReversedAmountSpecified;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.OriginalPOITransactionSpecified = value.OriginalPOITransactionSpecified;
                this.CustomerOrderSpecified = value.CustomerOrderSpecified;
                this.ReversalReasonSpecified = value.ReversalReasonSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OriginalPOITransactionType OriginalPOITransaction {
            get {
                return this.originalPOITransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OriginalPOITransactionType))
                            || false)) {
                    this.originalPOITransactionField = new OriginalPOITransactionType();
                    this.originalPOITransactionFieldSpecified = false;
                }
                else {
                    this.originalPOITransactionField = value;
                    this.originalPOITransactionFieldSpecified = this.OriginalPOITransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CustomerOrderType CustomerOrder {
            get {
                return this.customerOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CustomerOrderType))
                            || false)) {
                    this.customerOrderField = new CustomerOrderType();
                    this.customerOrderFieldSpecified = false;
                }
                else {
                    this.customerOrderField = value;
                    this.customerOrderFieldSpecified = this.CustomerOrder.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReversalReason {
            get {
                return this.reversalReasonField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.reversalReasonField = default(string);
                    this.reversalReasonFieldSpecified = false;
                }
                else {
                    this.reversalReasonField = value;
                    this.reversalReasonFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ReversedAmount {
            get {
                return this.reversedAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.reversedAmountField = default(double);
                    this.reversedAmountFieldSpecified = false;
                }
                else {
                    this.reversedAmountField = value;
                    this.reversedAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReversedAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reversedAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reversedAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OriginalPOITransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.originalPOITransactionFieldSpecified || this.OriginalPOITransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.originalPOITransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderFieldSpecified || this.CustomerOrder.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReversalReasonSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reversalReasonFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reversalReasonFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.OriginalPOITransaction != default(OriginalPOITransactionType))
                            && this.OriginalPOITransactionSpecified))
                            || ((this.CustomerOrder != default(CustomerOrderType))
                            && this.CustomerOrderSpecified))
                            || ((this.ReversalReason != default(string))
                            && this.ReversalReasonSpecified))
                            || ((this.ReversedAmount != default(double))
                            && this.ReversedAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ReversalRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ReversalRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("bef70190-c98e-46e7-bf98-e1ba775621e4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class BatchResponseType : IBatchResponseType {
        private ResponseType responseField = new ResponseType();
        private PerformedTransactionType[] performedTransactionField = new PerformedTransactionType[0];
        private bool responseFieldSpecified = false;
        private bool performedTransactionFieldSpecified = false;
        public BatchResponseType() {
        }
        public BatchResponseType(BatchResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(BatchResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.PerformedTransaction = value.PerformedTransaction;
                this.ResponseSpecified = value.ResponseSpecified;
                this.PerformedTransactionSpecified = value.PerformedTransactionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PerformedTransaction", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PerformedTransactionType[] PerformedTransaction {
            get {
                return this.performedTransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(PerformedTransactionType[]))
                            || false)) {
                    this.performedTransactionField = new PerformedTransactionType[0];
                    this.performedTransactionFieldSpecified = false;
                }
                else {
                    this.performedTransactionField = value;
                    this.performedTransactionFieldSpecified = (this.PerformedTransactionLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PerformedTransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.performedTransactionFieldSpecified
                            || (this.PerformedTransactionLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.performedTransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || (this.PerformedTransactionLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string BatchResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "BatchResponseType";
                // END ADDED BY XSD
            }
        }
        public int PerformedTransactionLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.performedTransactionField == default(PerformedTransactionType[]))) {
                return 0;
            }
            else {
                return this.performedTransactionField.Length;
            }
            // END ADDED BY XSD
        }
        public PerformedTransactionType PerformedTransactionGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.performedTransactionField == default(PerformedTransactionType[]))) {
                    return default(PerformedTransactionType);
                }
                else {
                    if ((0 > index)) {
                        return default(PerformedTransactionType);
                    }
                    else {
                        if ((this.performedTransactionField.Length <= index)) {
                            return default(PerformedTransactionType);
                        }
                        else {
                            return this.performedTransactionField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(PerformedTransactionType);
            }
            // END ADDED BY XSD
        }
        public bool PerformedTransactionSetItem(int index, PerformedTransactionType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.performedTransactionField == default(PerformedTransactionType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.performedTransactionField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.performedTransactionField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PerformedTransactionAddItem(PerformedTransactionType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.performedTransactionField == default(PerformedTransactionType[]))) {
                    return false;
                }
                else {
                    PerformedTransactionType[] array = new PerformedTransactionType[(this.performedTransactionField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.performedTransactionField.Length); i = (i + 1)) {
                        array[i] = performedTransactionField[i];
                    }
                    array[i] = value;
                    this.PerformedTransaction = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PerformedTransactionRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.performedTransactionField == default(PerformedTransactionType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.performedTransactionField.Length <= index)) {
                            return false;
                        }
                        else {
                            PerformedTransactionType[] array = new PerformedTransactionType[(this.performedTransactionField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = performedTransactionField[i];
                            }
                            for (i = (i + 1); (i < this.performedTransactionField.Length); i = (i + 1)) {
                                array[i] = performedTransactionField[i];
                            }
                            this.PerformedTransaction = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int PerformedTransactionInsertItem(int index, PerformedTransactionType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.performedTransactionField == default(PerformedTransactionType[]))) {
                    return -1;
                }
                else {
                    if ((this.performedTransactionField.Length <= index)) {
                        if ((this.PerformedTransactionAddItem(value) == true)) {
                            return this.PerformedTransactionLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        PerformedTransactionType[] array = new PerformedTransactionType[(this.performedTransactionField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = performedTransactionField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.performedTransactionField.Length); j = (j + 1)) {
                            array[k] = performedTransactionField[j];
                            k = (k + 1);
                        }
                        this.PerformedTransaction = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("90d15d6f-b44b-4a25-b091-5c535d55b10c")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PerformedTransactionType : IPerformedTransactionType {
        private ResponseType responseField = new ResponseType();
        private SaleDataType saleDataField = new SaleDataType();
        private POIDataType pOIDataField = new POIDataType();
        private PaymentResultType paymentResultField = new PaymentResultType();
        private LoyaltyResultType[] loyaltyResultField = new LoyaltyResultType[0];
        private double reversedAmountField = default(double);
        private bool reversedAmountFieldSpecified = default(bool);
        private bool responseFieldSpecified = false;
        private bool saleDataFieldSpecified = false;
        private bool pOIDataFieldSpecified = false;
        private bool paymentResultFieldSpecified = false;
        private bool loyaltyResultFieldSpecified = false;
        public PerformedTransactionType() {
        }
        public PerformedTransactionType(PerformedTransactionType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PerformedTransactionType))) {
            }
            else {
                this.Response = value.Response;
                this.SaleData = value.SaleData;
                this.POIData = value.POIData;
                this.PaymentResult = value.PaymentResult;
                this.LoyaltyResult = value.LoyaltyResult;
                this.ReversedAmount = value.ReversedAmount;
                this.ReversedAmountSpecified = value.ReversedAmountSpecified;
                this.ResponseSpecified = value.ResponseSpecified;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.POIDataSpecified = value.POIDataSpecified;
                this.PaymentResultSpecified = value.PaymentResultSpecified;
                this.LoyaltyResultSpecified = value.LoyaltyResultSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIDataType POIData {
            get {
                return this.pOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIDataType))
                            || false)) {
                    this.pOIDataField = new POIDataType();
                    this.pOIDataFieldSpecified = false;
                }
                else {
                    this.pOIDataField = value;
                    this.pOIDataFieldSpecified = this.POIData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentResultType PaymentResult {
            get {
                return this.paymentResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentResultType))
                            || false)) {
                    this.paymentResultField = new PaymentResultType();
                    this.paymentResultFieldSpecified = false;
                }
                else {
                    this.paymentResultField = value;
                    this.paymentResultFieldSpecified = this.PaymentResult.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyResult", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyResultType[] LoyaltyResult {
            get {
                return this.loyaltyResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(LoyaltyResultType[]))
                            || false)) {
                    this.loyaltyResultField = new LoyaltyResultType[0];
                    this.loyaltyResultFieldSpecified = false;
                }
                else {
                    this.loyaltyResultField = value;
                    this.loyaltyResultFieldSpecified = (this.LoyaltyResultLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ReversedAmount {
            get {
                return this.reversedAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.reversedAmountField = default(double);
                    this.reversedAmountFieldSpecified = false;
                }
                else {
                    this.reversedAmountField = value;
                    this.reversedAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReversedAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reversedAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reversedAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIDataFieldSpecified || this.POIData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentResultFieldSpecified || this.PaymentResult.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyResultFieldSpecified
                            || (this.LoyaltyResultLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.POIData != default(POIDataType))
                            && this.POIDataSpecified))
                            || ((this.PaymentResult != default(PaymentResultType))
                            && this.PaymentResultSpecified))
                            || (this.LoyaltyResultLength() != 0))
                            || ((this.ReversedAmount != default(double))
                            && this.ReversedAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PerformedTransactionTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PerformedTransactionType";
                // END ADDED BY XSD
            }
        }
        public int LoyaltyResultLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                return 0;
            }
            else {
                return this.loyaltyResultField.Length;
            }
            // END ADDED BY XSD
        }
        public LoyaltyResultType LoyaltyResultGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return default(LoyaltyResultType);
                }
                else {
                    if ((0 > index)) {
                        return default(LoyaltyResultType);
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return default(LoyaltyResultType);
                        }
                        else {
                            return this.loyaltyResultField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(LoyaltyResultType);
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultSetItem(int index, LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loyaltyResultField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultAddItem(LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loyaltyResultField.Length); i = (i + 1)) {
                        array[i] = loyaltyResultField[i];
                    }
                    array[i] = value;
                    this.LoyaltyResult = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loyaltyResultField[i];
                            }
                            for (i = (i + 1); (i < this.loyaltyResultField.Length); i = (i + 1)) {
                                array[i] = loyaltyResultField[i];
                            }
                            this.LoyaltyResult = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyResultInsertItem(int index, LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return -1;
                }
                else {
                    if ((this.loyaltyResultField.Length <= index)) {
                        if ((this.LoyaltyResultAddItem(value) == true)) {
                            return this.LoyaltyResultLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loyaltyResultField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loyaltyResultField.Length); j = (j + 1)) {
                            array[k] = loyaltyResultField[j];
                            k = (k + 1);
                        }
                        this.LoyaltyResult = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("00912a91-fd9d-493a-9906-a8373b233768")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class POIDataType : IPOIDataType {
        private TransactionIdentificationType pOITransactionIDField = new TransactionIdentificationType();
        private string pOIReconciliationIDField = default(string);
        private bool pOITransactionIDFieldSpecified = false;
        private bool pOIReconciliationIDFieldSpecified = false;
        public POIDataType() {
        }
        public POIDataType(POIDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(POIDataType))) {
            }
            else {
                this.POITransactionID = value.POITransactionID;
                this.POIReconciliationID = value.POIReconciliationID;
                this.POITransactionIDSpecified = value.POITransactionIDSpecified;
                this.POIReconciliationIDSpecified = value.POIReconciliationIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType POITransactionID {
            get {
                return this.pOITransactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.pOITransactionIDField = new TransactionIdentificationType();
                    this.pOITransactionIDFieldSpecified = false;
                }
                else {
                    this.pOITransactionIDField = value;
                    this.pOITransactionIDFieldSpecified = this.POITransactionID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIReconciliationID {
            get {
                return this.pOIReconciliationIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIReconciliationIDField = default(string);
                    this.pOIReconciliationIDFieldSpecified = false;
                }
                else {
                    this.pOIReconciliationIDField = value;
                    this.pOIReconciliationIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POITransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOITransactionIDFieldSpecified || this.POITransactionID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOITransactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIReconciliationIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIReconciliationIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIReconciliationIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.POITransactionID != default(TransactionIdentificationType))
                            && this.POITransactionIDSpecified))
                            || ((this.POIReconciliationID != default(string))
                            && this.POIReconciliationIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string POIDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "POIDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("7acacbc6-a34f-4336-ad00-8b92ec0a6a01")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentResultType : IPaymentResultType {
        private PaymentInstrumentDataType paymentInstrumentDataField = new PaymentInstrumentDataType();
        private AmountsRespType amountsRespField = new AmountsRespType();
        private InstalmentType instalmentField = new InstalmentType();
        private CurrencyConversionType[] currencyConversionField = new CurrencyConversionType[0];
        private CapturedSignatureType capturedSignatureField = new CapturedSignatureType();
        private ContentInformationType protectedSignatureField = new ContentInformationType();
        private PaymentAcquirerDataType paymentAcquirerDataField = new PaymentAcquirerDataType();
        private string paymentTypeField = default(string);
        private bool merchantOverrideFlagField = default(bool);
        private string customerLanguageField = default(string);
        private bool onlineFlagField = default(bool);
        private string[] authenticationMethodField = new string[0];
        private string validityDateField = default(string);
        private bool paymentInstrumentDataFieldSpecified = false;
        private bool amountsRespFieldSpecified = false;
        private bool instalmentFieldSpecified = false;
        private bool currencyConversionFieldSpecified = false;
        private bool capturedSignatureFieldSpecified = false;
        private bool protectedSignatureFieldSpecified = false;
        private bool paymentAcquirerDataFieldSpecified = false;
        private string paymentTypeDefaultValue = "Normal";
        private bool paymentTypeFieldSpecified = false;
        private bool merchantOverrideFlagDefaultValue = false;
        private bool merchantOverrideFlagFieldSpecified = false;
        private bool customerLanguageFieldSpecified = false;
        private bool onlineFlagDefaultValue = true;
        private bool onlineFlagFieldSpecified = false;
        private bool authenticationMethodFieldSpecified = false;
        private bool validityDateFieldSpecified = false;
        public PaymentResultType() {
            this.paymentTypeField = this.paymentTypeDefaultValue;
            this.merchantOverrideFlagField = this.merchantOverrideFlagDefaultValue;
            this.onlineFlagField = this.onlineFlagDefaultValue;
        }
        public PaymentResultType(PaymentResultType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentResultType))) {
            }
            else {
                this.PaymentInstrumentData = value.PaymentInstrumentData;
                this.AmountsResp = value.AmountsResp;
                this.Instalment = value.Instalment;
                this.CurrencyConversion = value.CurrencyConversion;
                this.CapturedSignature = value.CapturedSignature;
                this.ProtectedSignature = value.ProtectedSignature;
                this.PaymentAcquirerData = value.PaymentAcquirerData;
                this.PaymentType = value.PaymentType;
                this.MerchantOverrideFlag = value.MerchantOverrideFlag;
                this.CustomerLanguage = value.CustomerLanguage;
                this.OnlineFlag = value.OnlineFlag;
                this.AuthenticationMethod = value.AuthenticationMethod;
                this.ValidityDate = value.ValidityDate;
                this.PaymentInstrumentDataSpecified = value.PaymentInstrumentDataSpecified;
                this.AmountsRespSpecified = value.AmountsRespSpecified;
                this.InstalmentSpecified = value.InstalmentSpecified;
                this.CurrencyConversionSpecified = value.CurrencyConversionSpecified;
                this.CapturedSignatureSpecified = value.CapturedSignatureSpecified;
                this.ProtectedSignatureSpecified = value.ProtectedSignatureSpecified;
                this.PaymentAcquirerDataSpecified = value.PaymentAcquirerDataSpecified;
                this.PaymentTypeSpecified = value.PaymentTypeSpecified;
                this.MerchantOverrideFlagSpecified = value.MerchantOverrideFlagSpecified;
                this.CustomerLanguageSpecified = value.CustomerLanguageSpecified;
                this.OnlineFlagSpecified = value.OnlineFlagSpecified;
                this.AuthenticationMethodSpecified = value.AuthenticationMethodSpecified;
                this.ValidityDateSpecified = value.ValidityDateSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentInstrumentDataType PaymentInstrumentData {
            get {
                return this.paymentInstrumentDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentInstrumentDataType))
                            || false)) {
                    this.paymentInstrumentDataField = new PaymentInstrumentDataType();
                    this.paymentInstrumentDataFieldSpecified = false;
                }
                else {
                    this.paymentInstrumentDataField = value;
                    this.paymentInstrumentDataFieldSpecified = this.PaymentInstrumentData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AmountsRespType AmountsResp {
            get {
                return this.amountsRespField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AmountsRespType))
                            || false)) {
                    this.amountsRespField = new AmountsRespType();
                    this.amountsRespFieldSpecified = false;
                }
                else {
                    this.amountsRespField = value;
                    this.amountsRespFieldSpecified = this.AmountsResp.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InstalmentType Instalment {
            get {
                return this.instalmentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(InstalmentType))
                            || false)) {
                    this.instalmentField = new InstalmentType();
                    this.instalmentFieldSpecified = false;
                }
                else {
                    this.instalmentField = value;
                    this.instalmentFieldSpecified = this.Instalment.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CurrencyConversion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CurrencyConversionType[] CurrencyConversion {
            get {
                return this.currencyConversionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CurrencyConversionType[]))
                            || false)) {
                    this.currencyConversionField = new CurrencyConversionType[0];
                    this.currencyConversionFieldSpecified = false;
                }
                else {
                    this.currencyConversionField = value;
                    this.currencyConversionFieldSpecified = (this.CurrencyConversionLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapturedSignatureType CapturedSignature {
            get {
                return this.capturedSignatureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CapturedSignatureType))
                            || false)) {
                    this.capturedSignatureField = new CapturedSignatureType();
                    this.capturedSignatureFieldSpecified = false;
                }
                else {
                    this.capturedSignatureField = value;
                    this.capturedSignatureFieldSpecified = this.CapturedSignature.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContentInformationType ProtectedSignature {
            get {
                return this.protectedSignatureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ContentInformationType))
                            || false)) {
                    this.protectedSignatureField = new ContentInformationType();
                    this.protectedSignatureFieldSpecified = false;
                }
                else {
                    this.protectedSignatureField = value;
                    this.protectedSignatureFieldSpecified = this.ProtectedSignature.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentAcquirerDataType PaymentAcquirerData {
            get {
                return this.paymentAcquirerDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentAcquirerDataType))
                            || false)) {
                    this.paymentAcquirerDataField = new PaymentAcquirerDataType();
                    this.paymentAcquirerDataFieldSpecified = false;
                }
                else {
                    this.paymentAcquirerDataField = value;
                    this.paymentAcquirerDataFieldSpecified = this.PaymentAcquirerData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Normal")]
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.PaymentTypeDefaultValue)
                            || (value == default(string)))) {
                    this.paymentTypeField = this.PaymentTypeDefaultValue;
                    this.paymentTypeFieldSpecified = false;
                }
                else {
                    this.paymentTypeField = value;
                    this.paymentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool MerchantOverrideFlag {
            get {
                return this.merchantOverrideFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.MerchantOverrideFlagDefaultValue)
                            || false)) {
                    this.merchantOverrideFlagField = this.MerchantOverrideFlagDefaultValue;
                    this.merchantOverrideFlagFieldSpecified = false;
                }
                else {
                    this.merchantOverrideFlagField = value;
                    this.merchantOverrideFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerLanguage {
            get {
                return this.customerLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerLanguageField = default(string);
                    this.customerLanguageFieldSpecified = false;
                }
                else {
                    this.customerLanguageField = value;
                    this.customerLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool OnlineFlag {
            get {
                return this.onlineFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.OnlineFlagDefaultValue)
                            || false)) {
                    this.onlineFlagField = this.OnlineFlagDefaultValue;
                    this.onlineFlagFieldSpecified = false;
                }
                else {
                    this.onlineFlagField = value;
                    this.onlineFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] AuthenticationMethod {
            get {
                return this.authenticationMethodField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.authenticationMethodField = new string[0];
                    this.authenticationMethodFieldSpecified = false;
                }
                else {
                    this.authenticationMethodField = value;
                    this.authenticationMethodFieldSpecified = (this.AuthenticationMethodLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ValidityDate {
            get {
                return this.validityDateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.validityDateField = default(string);
                    this.validityDateFieldSpecified = false;
                }
                else {
                    this.validityDateField = value;
                    this.validityDateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentInstrumentDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentInstrumentDataFieldSpecified || this.PaymentInstrumentData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentInstrumentDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AmountsRespSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.amountsRespFieldSpecified || this.AmountsResp.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.amountsRespFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InstalmentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.instalmentFieldSpecified || this.Instalment.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.instalmentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencyConversionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyConversionFieldSpecified
                            || (this.CurrencyConversionLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyConversionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CapturedSignatureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.capturedSignatureFieldSpecified || this.CapturedSignature.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.capturedSignatureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProtectedSignatureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.protectedSignatureFieldSpecified || this.ProtectedSignature.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.protectedSignatureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentAcquirerDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentAcquirerDataFieldSpecified || this.PaymentAcquirerData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentAcquirerDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentTypeDefaultValue {
            get {
                return this.paymentTypeDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentTypeFieldSpecified = value;
                if ((this.paymentTypeFieldSpecified
                            && (this.paymentTypeField == default(string)))) {
                    this.paymentTypeField = this.paymentTypeDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MerchantOverrideFlagDefaultValue {
            get {
                return this.merchantOverrideFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MerchantOverrideFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.merchantOverrideFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.merchantOverrideFlagFieldSpecified = value;
                if ((this.merchantOverrideFlagFieldSpecified
                            && (this.merchantOverrideFlagField == default(bool)))) {
                    this.merchantOverrideFlagField = this.merchantOverrideFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OnlineFlagDefaultValue {
            get {
                return this.onlineFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OnlineFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.onlineFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.onlineFlagFieldSpecified = value;
                if ((this.onlineFlagFieldSpecified
                            && (this.onlineFlagField == default(bool)))) {
                    this.onlineFlagField = this.onlineFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AuthenticationMethodSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.authenticationMethodFieldSpecified
                            || (this.AuthenticationMethodLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.authenticationMethodFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValidityDateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.validityDateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.validityDateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((((((false
                            || ((this.PaymentInstrumentData != default(PaymentInstrumentDataType))
                            && this.PaymentInstrumentDataSpecified))
                            || ((this.AmountsResp != default(AmountsRespType))
                            && this.AmountsRespSpecified))
                            || ((this.Instalment != default(InstalmentType))
                            && this.InstalmentSpecified))
                            || ((this.CapturedSignature != default(CapturedSignatureType))
                            && this.CapturedSignatureSpecified))
                            || ((this.ProtectedSignature != default(ContentInformationType))
                            && this.ProtectedSignatureSpecified))
                            || ((this.PaymentAcquirerData != default(PaymentAcquirerDataType))
                            && this.PaymentAcquirerDataSpecified))
                            || (this.CurrencyConversionLength() != 0))
                            || (this.AuthenticationMethodLength() != 0))
                            || ((this.PaymentType != default(string))
                            && this.PaymentTypeSpecified))
                            || ((this.MerchantOverrideFlag != default(bool))
                            && this.MerchantOverrideFlagSpecified))
                            || ((this.CustomerLanguage != default(string))
                            && this.CustomerLanguageSpecified))
                            || ((this.OnlineFlag != default(bool))
                            && this.OnlineFlagSpecified))
                            || ((this.ValidityDate != default(string))
                            && this.ValidityDateSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentResultTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentResultType";
                // END ADDED BY XSD
            }
        }
        public int CurrencyConversionLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.currencyConversionField == default(CurrencyConversionType[]))) {
                return 0;
            }
            else {
                return this.currencyConversionField.Length;
            }
            // END ADDED BY XSD
        }
        public CurrencyConversionType CurrencyConversionGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.currencyConversionField == default(CurrencyConversionType[]))) {
                    return default(CurrencyConversionType);
                }
                else {
                    if ((0 > index)) {
                        return default(CurrencyConversionType);
                    }
                    else {
                        if ((this.currencyConversionField.Length <= index)) {
                            return default(CurrencyConversionType);
                        }
                        else {
                            return this.currencyConversionField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CurrencyConversionType);
            }
            // END ADDED BY XSD
        }
        public bool CurrencyConversionSetItem(int index, CurrencyConversionType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.currencyConversionField == default(CurrencyConversionType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.currencyConversionField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.currencyConversionField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CurrencyConversionAddItem(CurrencyConversionType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.currencyConversionField == default(CurrencyConversionType[]))) {
                    return false;
                }
                else {
                    CurrencyConversionType[] array = new CurrencyConversionType[(this.currencyConversionField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.currencyConversionField.Length); i = (i + 1)) {
                        array[i] = currencyConversionField[i];
                    }
                    array[i] = value;
                    this.CurrencyConversion = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CurrencyConversionRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.currencyConversionField == default(CurrencyConversionType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.currencyConversionField.Length <= index)) {
                            return false;
                        }
                        else {
                            CurrencyConversionType[] array = new CurrencyConversionType[(this.currencyConversionField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = currencyConversionField[i];
                            }
                            for (i = (i + 1); (i < this.currencyConversionField.Length); i = (i + 1)) {
                                array[i] = currencyConversionField[i];
                            }
                            this.CurrencyConversion = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CurrencyConversionInsertItem(int index, CurrencyConversionType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.currencyConversionField == default(CurrencyConversionType[]))) {
                    return -1;
                }
                else {
                    if ((this.currencyConversionField.Length <= index)) {
                        if ((this.CurrencyConversionAddItem(value) == true)) {
                            return this.CurrencyConversionLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CurrencyConversionType[] array = new CurrencyConversionType[(this.currencyConversionField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = currencyConversionField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.currencyConversionField.Length); j = (j + 1)) {
                            array[k] = currencyConversionField[j];
                            k = (k + 1);
                        }
                        this.CurrencyConversion = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int AuthenticationMethodLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.authenticationMethodField == default(string[]))) {
                return 0;
            }
            else {
                return this.authenticationMethodField.Length;
            }
            // END ADDED BY XSD
        }
        public string AuthenticationMethodGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.authenticationMethodField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.authenticationMethodField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.authenticationMethodField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AuthenticationMethodSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.authenticationMethodField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.authenticationMethodField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.authenticationMethodField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AuthenticationMethodAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.authenticationMethodField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.authenticationMethodField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.authenticationMethodField.Length); i = (i + 1)) {
                        array[i] = authenticationMethodField[i];
                    }
                    array[i] = value;
                    this.AuthenticationMethod = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AuthenticationMethodRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.authenticationMethodField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.authenticationMethodField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.authenticationMethodField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = authenticationMethodField[i];
                            }
                            for (i = (i + 1); (i < this.authenticationMethodField.Length); i = (i + 1)) {
                                array[i] = authenticationMethodField[i];
                            }
                            this.AuthenticationMethod = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AuthenticationMethodInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.authenticationMethodField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.authenticationMethodField.Length <= index)) {
                        if ((this.AuthenticationMethodAddItem(value) == true)) {
                            return this.AuthenticationMethodLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.authenticationMethodField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = authenticationMethodField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.authenticationMethodField.Length); j = (j + 1)) {
                            array[k] = authenticationMethodField[j];
                            k = (k + 1);
                        }
                        this.AuthenticationMethod = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("0ef7e32f-6102-441a-98d5-32577d525c82")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CurrencyConversionType : ICurrencyConversionType {
        private AmountType convertedAmountField = new AmountType();
        private double commissionField = default(double);
        private bool commissionFieldSpecified = default(bool);
        private string declarationField = default(string);
        private bool customerApprovedFlagField = default(bool);
        private double rateField = default(double);
        private bool rateFieldSpecified = default(bool);
        private double markupField = default(double);
        private bool markupFieldSpecified = default(bool);
        private bool convertedAmountFieldSpecified = false;
        private bool declarationFieldSpecified = false;
        private bool customerApprovedFlagDefaultValue = true;
        private bool customerApprovedFlagFieldSpecified = false;
        public CurrencyConversionType() {
            this.customerApprovedFlagField = this.customerApprovedFlagDefaultValue;
        }
        public CurrencyConversionType(CurrencyConversionType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CurrencyConversionType))) {
            }
            else {
                this.ConvertedAmount = value.ConvertedAmount;
                this.Commission = value.Commission;
                this.CommissionSpecified = value.CommissionSpecified;
                this.Declaration = value.Declaration;
                this.CustomerApprovedFlag = value.CustomerApprovedFlag;
                this.Rate = value.Rate;
                this.RateSpecified = value.RateSpecified;
                this.Markup = value.Markup;
                this.MarkupSpecified = value.MarkupSpecified;
                this.ConvertedAmountSpecified = value.ConvertedAmountSpecified;
                this.DeclarationSpecified = value.DeclarationSpecified;
                this.CustomerApprovedFlagSpecified = value.CustomerApprovedFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AmountType ConvertedAmount {
            get {
                return this.convertedAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AmountType))
                            || false)) {
                    this.convertedAmountField = new AmountType();
                    this.convertedAmountFieldSpecified = false;
                }
                else {
                    this.convertedAmountField = value;
                    this.convertedAmountFieldSpecified = this.ConvertedAmount.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double Commission {
            get {
                return this.commissionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.commissionField = default(double);
                    this.commissionFieldSpecified = false;
                }
                else {
                    this.commissionField = value;
                    this.commissionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.commissionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.commissionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Declaration {
            get {
                return this.declarationField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.declarationField = default(string);
                    this.declarationFieldSpecified = false;
                }
                else {
                    this.declarationField = value;
                    this.declarationFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CustomerApprovedFlag {
            get {
                return this.customerApprovedFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.CustomerApprovedFlagDefaultValue)
                            || false)) {
                    this.customerApprovedFlagField = this.CustomerApprovedFlagDefaultValue;
                    this.customerApprovedFlagFieldSpecified = false;
                }
                else {
                    this.customerApprovedFlagField = value;
                    this.customerApprovedFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.rateField = default(double);
                    this.rateFieldSpecified = false;
                }
                else {
                    this.rateField = value;
                    this.rateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.rateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.rateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Markup {
            get {
                return this.markupField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.markupField = default(double);
                    this.markupFieldSpecified = false;
                }
                else {
                    this.markupField = value;
                    this.markupFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkupSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.markupFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.markupFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ConvertedAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.convertedAmountFieldSpecified || this.ConvertedAmount.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.convertedAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DeclarationSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.declarationFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.declarationFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerApprovedFlagDefaultValue {
            get {
                return this.customerApprovedFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerApprovedFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerApprovedFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerApprovedFlagFieldSpecified = value;
                if ((this.customerApprovedFlagFieldSpecified
                            && (this.customerApprovedFlagField == default(bool)))) {
                    this.customerApprovedFlagField = this.customerApprovedFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.ConvertedAmount != default(AmountType))
                            && this.ConvertedAmountSpecified))
                            || ((this.Commission != default(double))
                            && this.CommissionSpecified))
                            || ((this.Declaration != default(string))
                            && this.DeclarationSpecified))
                            || ((this.CustomerApprovedFlag != default(bool))
                            && this.CustomerApprovedFlagSpecified))
                            || ((this.Rate != default(double))
                            && this.RateSpecified))
                            || ((this.Markup != default(double))
                            && this.MarkupSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CurrencyConversionTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CurrencyConversionType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("6302a8ad-291b-4b91-a9fa-3a2d9653015f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class AmountType : IAmountType {
        private string currencyField = default(string);
        private double valueField = default(double);
        private bool currencyFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public AmountType() {
        }
        public AmountType(AmountType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(AmountType))) {
            }
            else {
                this.Currency = value.Currency;
                this.Value = value.Value;
                this.CurrencySpecified = value.CurrencySpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.valueField = default(double);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified))
                            || ((this.Value != default(double))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string AmountTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "AmountType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("13cd8d2e-d654-45cc-a219-706543b50628")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CapturedSignatureType : ICapturedSignatureType {
        private RawSignatureType rawSignatureField = new RawSignatureType();
        private SignatureImageType signatureImageField = new SignatureImageType();
        private bool rawSignatureFieldSpecified = false;
        private bool signatureImageFieldSpecified = false;
        public CapturedSignatureType() {
        }
        public CapturedSignatureType(CapturedSignatureType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CapturedSignatureType))) {
            }
            else {
                this.RawSignature = value.RawSignature;
                this.SignatureImage = value.SignatureImage;
                this.RawSignatureSpecified = value.RawSignatureSpecified;
                this.SignatureImageSpecified = value.SignatureImageSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RawSignatureType RawSignature {
            get {
                return this.rawSignatureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(RawSignatureType))
                            || false)) {
                    this.rawSignatureField = new RawSignatureType();
                    this.rawSignatureFieldSpecified = false;
                }
                else {
                    this.rawSignatureField = value;
                    this.rawSignatureFieldSpecified = this.RawSignature.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SignatureImageType SignatureImage {
            get {
                return this.signatureImageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SignatureImageType))
                            || false)) {
                    this.signatureImageField = new SignatureImageType();
                    this.signatureImageFieldSpecified = false;
                }
                else {
                    this.signatureImageField = value;
                    this.signatureImageFieldSpecified = this.SignatureImage.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RawSignatureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.rawSignatureFieldSpecified || this.RawSignature.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.rawSignatureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SignatureImageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.signatureImageFieldSpecified || this.SignatureImage.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.signatureImageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.RawSignature != default(RawSignatureType))
                            && this.RawSignatureSpecified))
                            || ((this.SignatureImage != default(SignatureImageType))
                            && this.SignatureImageSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CapturedSignatureTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CapturedSignatureType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("04a774bd-51d5-422b-8676-96d7595df59c")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class RawSignatureType : IRawSignatureType {
        private AreaSizeType areaSizeField = new AreaSizeType();
        private SignaturePointType[] signaturePointField = new SignaturePointType[0];
        private bool areaSizeFieldSpecified = false;
        private bool signaturePointFieldSpecified = false;
        public RawSignatureType() {
        }
        public RawSignatureType(RawSignatureType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(RawSignatureType))) {
            }
            else {
                this.AreaSize = value.AreaSize;
                this.SignaturePoint = value.SignaturePoint;
                this.AreaSizeSpecified = value.AreaSizeSpecified;
                this.SignaturePointSpecified = value.SignaturePointSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AreaSizeType AreaSize {
            get {
                return this.areaSizeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(AreaSizeType))
                            || false)) {
                    this.areaSizeField = new AreaSizeType();
                    this.areaSizeFieldSpecified = false;
                }
                else {
                    this.areaSizeField = value;
                    this.areaSizeFieldSpecified = this.AreaSize.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SignaturePoint", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SignaturePointType[] SignaturePoint {
            get {
                return this.signaturePointField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SignaturePointType[]))
                            || false)) {
                    this.signaturePointField = new SignaturePointType[0];
                    this.signaturePointFieldSpecified = false;
                }
                else {
                    this.signaturePointField = value;
                    this.signaturePointFieldSpecified = (this.SignaturePointLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AreaSizeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.areaSizeFieldSpecified || this.AreaSize.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.areaSizeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SignaturePointSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.signaturePointFieldSpecified
                            || (this.SignaturePointLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.signaturePointFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.AreaSize != default(AreaSizeType))
                            && this.AreaSizeSpecified))
                            || (this.SignaturePointLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string RawSignatureTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "RawSignatureType";
                // END ADDED BY XSD
            }
        }
        public int SignaturePointLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.signaturePointField == default(SignaturePointType[]))) {
                return 0;
            }
            else {
                return this.signaturePointField.Length;
            }
            // END ADDED BY XSD
        }
        public SignaturePointType SignaturePointGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.signaturePointField == default(SignaturePointType[]))) {
                    return default(SignaturePointType);
                }
                else {
                    if ((0 > index)) {
                        return default(SignaturePointType);
                    }
                    else {
                        if ((this.signaturePointField.Length <= index)) {
                            return default(SignaturePointType);
                        }
                        else {
                            return this.signaturePointField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SignaturePointType);
            }
            // END ADDED BY XSD
        }
        public bool SignaturePointSetItem(int index, SignaturePointType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.signaturePointField == default(SignaturePointType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.signaturePointField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.signaturePointField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SignaturePointAddItem(SignaturePointType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.signaturePointField == default(SignaturePointType[]))) {
                    return false;
                }
                else {
                    SignaturePointType[] array = new SignaturePointType[(this.signaturePointField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.signaturePointField.Length); i = (i + 1)) {
                        array[i] = signaturePointField[i];
                    }
                    array[i] = value;
                    this.SignaturePoint = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SignaturePointRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.signaturePointField == default(SignaturePointType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.signaturePointField.Length <= index)) {
                            return false;
                        }
                        else {
                            SignaturePointType[] array = new SignaturePointType[(this.signaturePointField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = signaturePointField[i];
                            }
                            for (i = (i + 1); (i < this.signaturePointField.Length); i = (i + 1)) {
                                array[i] = signaturePointField[i];
                            }
                            this.SignaturePoint = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SignaturePointInsertItem(int index, SignaturePointType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.signaturePointField == default(SignaturePointType[]))) {
                    return -1;
                }
                else {
                    if ((this.signaturePointField.Length <= index)) {
                        if ((this.SignaturePointAddItem(value) == true)) {
                            return this.SignaturePointLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SignaturePointType[] array = new SignaturePointType[(this.signaturePointField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = signaturePointField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.signaturePointField.Length); j = (j + 1)) {
                            array[k] = signaturePointField[j];
                            k = (k + 1);
                        }
                        this.SignaturePoint = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("01c4a99c-1a2c-4405-a605-2bdfbd8d36b4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SignaturePointType : ISignaturePointType {
        private string xField = default(string);
        private string yField = default(string);
        private bool xFieldSpecified = false;
        private bool yFieldSpecified = false;
        public SignaturePointType() {
        }
        public SignaturePointType(SignaturePointType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SignaturePointType))) {
            }
            else {
                this.X = value.X;
                this.Y = value.Y;
                this.XSpecified = value.XSpecified;
                this.YSpecified = value.YSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string X {
            get {
                return this.xField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.xField = default(string);
                    this.xFieldSpecified = false;
                }
                else {
                    this.xField = value;
                    this.xFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Y {
            get {
                return this.yField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.yField = default(string);
                    this.yFieldSpecified = false;
                }
                else {
                    this.yField = value;
                    this.yFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool XSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.xFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.xFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool YSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.yFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.yFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.X != default(string))
                            && this.XSpecified))
                            || ((this.Y != default(string))
                            && this.YSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SignaturePointTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SignaturePointType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("00cd3cd9-5806-4792-a7b6-82a68468f201")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SignatureImageType : ISignatureImageType {
        private string imageFormatField = default(string);
        private byte[] imageDataField = new byte[0];
        private string imageReferenceField = default(string);
        private bool imageFormatFieldSpecified = false;
        private bool imageDataFieldSpecified = false;
        private bool imageReferenceFieldSpecified = false;
        public SignatureImageType() {
        }
        public SignatureImageType(SignatureImageType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SignatureImageType))) {
            }
            else {
                this.ImageFormat = value.ImageFormat;
                this.ImageData = value.ImageData;
                this.ImageReference = value.ImageReference;
                this.ImageFormatSpecified = value.ImageFormatSpecified;
                this.ImageDataSpecified = value.ImageDataSpecified;
                this.ImageReferenceSpecified = value.ImageReferenceSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ImageFormat {
            get {
                return this.imageFormatField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.imageFormatField = default(string);
                    this.imageFormatFieldSpecified = false;
                }
                else {
                    this.imageFormatField = value;
                    this.imageFormatFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] ImageData {
            get {
                return this.imageDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.imageDataField = new byte[0];
                    this.imageDataFieldSpecified = false;
                }
                else {
                    this.imageDataField = value;
                    this.imageDataFieldSpecified = (this.ImageDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ImageReference {
            get {
                return this.imageReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.imageReferenceField = default(string);
                    this.imageReferenceFieldSpecified = false;
                }
                else {
                    this.imageReferenceField = value;
                    this.imageReferenceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ImageFormatSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.imageFormatFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.imageFormatFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ImageDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.imageDataFieldSpecified
                            || (this.ImageDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.imageDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ImageReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.imageReferenceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.imageReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || (this.ImageDataLength() != 0))
                            || ((this.ImageFormat != default(string))
                            && this.ImageFormatSpecified))
                            || ((this.ImageReference != default(string))
                            && this.ImageReferenceSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SignatureImageTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SignatureImageType";
                // END ADDED BY XSD
            }
        }
        public int ImageDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.imageDataField == default(byte[]))) {
                return 0;
            }
            else {
                return this.imageDataField.Length;
            }
            // END ADDED BY XSD
        }
        public byte ImageDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.imageDataField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.imageDataField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.imageDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool ImageDataSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.imageDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.imageDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.imageDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ImageDataAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.imageDataField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.imageDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.imageDataField.Length); i = (i + 1)) {
                        array[i] = imageDataField[i];
                    }
                    array[i] = value;
                    this.ImageData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ImageDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.imageDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.imageDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.imageDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = imageDataField[i];
                            }
                            for (i = (i + 1); (i < this.imageDataField.Length); i = (i + 1)) {
                                array[i] = imageDataField[i];
                            }
                            this.ImageData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ImageDataInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.imageDataField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.imageDataField.Length <= index)) {
                        if ((this.ImageDataAddItem(value) == true)) {
                            return this.ImageDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.imageDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = imageDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.imageDataField.Length); j = (j + 1)) {
                            array[k] = imageDataField[j];
                            k = (k + 1);
                        }
                        this.ImageData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("0bfdcc73-4756-4443-a1e3-090571dcfeda")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyResultType : ILoyaltyResultType {
        private LoyaltyAccountType loyaltyAccountField = new LoyaltyAccountType();
        private LoyaltyAmountType loyaltyAmountField = new LoyaltyAmountType();
        private LoyaltyAcquirerDataType loyaltyAcquirerDataField = new LoyaltyAcquirerDataType();
        private RebatesType rebatesField = new RebatesType();
        private double currentBalanceField = default(double);
        private bool currentBalanceFieldSpecified = default(bool);
        private bool loyaltyAccountFieldSpecified = false;
        private bool loyaltyAmountFieldSpecified = false;
        private bool loyaltyAcquirerDataFieldSpecified = false;
        private bool rebatesFieldSpecified = false;
        public LoyaltyResultType() {
        }
        public LoyaltyResultType(LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyResultType))) {
            }
            else {
                this.LoyaltyAccount = value.LoyaltyAccount;
                this.LoyaltyAmount = value.LoyaltyAmount;
                this.LoyaltyAcquirerData = value.LoyaltyAcquirerData;
                this.Rebates = value.Rebates;
                this.CurrentBalance = value.CurrentBalance;
                this.CurrentBalanceSpecified = value.CurrentBalanceSpecified;
                this.LoyaltyAccountSpecified = value.LoyaltyAccountSpecified;
                this.LoyaltyAmountSpecified = value.LoyaltyAmountSpecified;
                this.LoyaltyAcquirerDataSpecified = value.LoyaltyAcquirerDataSpecified;
                this.RebatesSpecified = value.RebatesSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountType LoyaltyAccount {
            get {
                return this.loyaltyAccountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAccountType))
                            || false)) {
                    this.loyaltyAccountField = new LoyaltyAccountType();
                    this.loyaltyAccountFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountField = value;
                    this.loyaltyAccountFieldSpecified = this.LoyaltyAccount.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAmountType LoyaltyAmount {
            get {
                return this.loyaltyAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAmountType))
                            || false)) {
                    this.loyaltyAmountField = new LoyaltyAmountType();
                    this.loyaltyAmountFieldSpecified = false;
                }
                else {
                    this.loyaltyAmountField = value;
                    this.loyaltyAmountFieldSpecified = this.LoyaltyAmount.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAcquirerDataType LoyaltyAcquirerData {
            get {
                return this.loyaltyAcquirerDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(LoyaltyAcquirerDataType))
                            || false)) {
                    this.loyaltyAcquirerDataField = new LoyaltyAcquirerDataType();
                    this.loyaltyAcquirerDataFieldSpecified = false;
                }
                else {
                    this.loyaltyAcquirerDataField = value;
                    this.loyaltyAcquirerDataFieldSpecified = this.LoyaltyAcquirerData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RebatesType Rebates {
            get {
                return this.rebatesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(RebatesType))
                            || false)) {
                    this.rebatesField = new RebatesType();
                    this.rebatesFieldSpecified = false;
                }
                else {
                    this.rebatesField = value;
                    this.rebatesFieldSpecified = this.Rebates.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.currentBalanceField = default(double);
                    this.currentBalanceFieldSpecified = false;
                }
                else {
                    this.currentBalanceField = value;
                    this.currentBalanceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentBalanceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currentBalanceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currentBalanceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountFieldSpecified || this.LoyaltyAccount.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAmountFieldSpecified || this.LoyaltyAmount.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAcquirerDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAcquirerDataFieldSpecified || this.LoyaltyAcquirerData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAcquirerDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RebatesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.rebatesFieldSpecified || this.Rebates.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.rebatesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.LoyaltyAccount != default(LoyaltyAccountType))
                            && this.LoyaltyAccountSpecified))
                            || ((this.LoyaltyAmount != default(LoyaltyAmountType))
                            && this.LoyaltyAmountSpecified))
                            || ((this.LoyaltyAcquirerData != default(LoyaltyAcquirerDataType))
                            && this.LoyaltyAcquirerDataSpecified))
                            || ((this.Rebates != default(RebatesType))
                            && this.RebatesSpecified))
                            || ((this.CurrentBalance != default(double))
                            && this.CurrentBalanceSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyResultTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyResultType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("bced178b-0c9f-445b-8a86-e0ace6819981")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyAcquirerDataType : ILoyaltyAcquirerDataType {
        private string approvalCodeField = default(string);
        private TransactionIdentificationType loyaltyTransactionIDField = new TransactionIdentificationType();
        private string loyaltyAcquirerIDField = default(string);
        private string hostReconciliationIDField = default(string);
        private bool approvalCodeFieldSpecified = false;
        private bool loyaltyTransactionIDFieldSpecified = false;
        private bool loyaltyAcquirerIDFieldSpecified = false;
        private bool hostReconciliationIDFieldSpecified = false;
        public LoyaltyAcquirerDataType() {
        }
        public LoyaltyAcquirerDataType(LoyaltyAcquirerDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyAcquirerDataType))) {
            }
            else {
                this.ApprovalCode = value.ApprovalCode;
                this.LoyaltyTransactionID = value.LoyaltyTransactionID;
                this.LoyaltyAcquirerID = value.LoyaltyAcquirerID;
                this.HostReconciliationID = value.HostReconciliationID;
                this.ApprovalCodeSpecified = value.ApprovalCodeSpecified;
                this.LoyaltyTransactionIDSpecified = value.LoyaltyTransactionIDSpecified;
                this.LoyaltyAcquirerIDSpecified = value.LoyaltyAcquirerIDSpecified;
                this.HostReconciliationIDSpecified = value.HostReconciliationIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ApprovalCode {
            get {
                return this.approvalCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.approvalCodeField = default(string);
                    this.approvalCodeFieldSpecified = false;
                }
                else {
                    this.approvalCodeField = value;
                    this.approvalCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType LoyaltyTransactionID {
            get {
                return this.loyaltyTransactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.loyaltyTransactionIDField = new TransactionIdentificationType();
                    this.loyaltyTransactionIDFieldSpecified = false;
                }
                else {
                    this.loyaltyTransactionIDField = value;
                    this.loyaltyTransactionIDFieldSpecified = this.LoyaltyTransactionID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LoyaltyAcquirerID {
            get {
                return this.loyaltyAcquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.loyaltyAcquirerIDField = default(string);
                    this.loyaltyAcquirerIDFieldSpecified = false;
                }
                else {
                    this.loyaltyAcquirerIDField = value;
                    this.loyaltyAcquirerIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string HostReconciliationID {
            get {
                return this.hostReconciliationIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.hostReconciliationIDField = default(string);
                    this.hostReconciliationIDFieldSpecified = false;
                }
                else {
                    this.hostReconciliationIDField = value;
                    this.hostReconciliationIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ApprovalCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.approvalCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.approvalCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyTransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyTransactionIDFieldSpecified || this.LoyaltyTransactionID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyTransactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAcquirerIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAcquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool HostReconciliationIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.hostReconciliationIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.hostReconciliationIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.LoyaltyTransactionID != default(TransactionIdentificationType))
                            && this.LoyaltyTransactionIDSpecified))
                            || ((this.ApprovalCode != default(string))
                            && this.ApprovalCodeSpecified))
                            || ((this.LoyaltyAcquirerID != default(string))
                            && this.LoyaltyAcquirerIDSpecified))
                            || ((this.HostReconciliationID != default(string))
                            && this.HostReconciliationIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyAcquirerDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyAcquirerDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3056eacd-52ba-4ff4-8bce-7b0b52197edb")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class RebatesType : IRebatesType {
        private double totalRebateField = default(double);
        private bool totalRebateFieldSpecified = default(bool);
        private string rebateLabelField = default(string);
        private SaleItemRebateType[] saleItemRebateField = new SaleItemRebateType[0];
        private bool rebateLabelFieldSpecified = false;
        private bool saleItemRebateFieldSpecified = false;
        public RebatesType() {
        }
        public RebatesType(RebatesType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(RebatesType))) {
            }
            else {
                this.TotalRebate = value.TotalRebate;
                this.TotalRebateSpecified = value.TotalRebateSpecified;
                this.RebateLabel = value.RebateLabel;
                this.SaleItemRebate = value.SaleItemRebate;
                this.RebateLabelSpecified = value.RebateLabelSpecified;
                this.SaleItemRebateSpecified = value.SaleItemRebateSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double TotalRebate {
            get {
                return this.totalRebateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.totalRebateField = default(double);
                    this.totalRebateFieldSpecified = false;
                }
                else {
                    this.totalRebateField = value;
                    this.totalRebateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalRebateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalRebateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalRebateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RebateLabel {
            get {
                return this.rebateLabelField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.rebateLabelField = default(string);
                    this.rebateLabelFieldSpecified = false;
                }
                else {
                    this.rebateLabelField = value;
                    this.rebateLabelFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SaleItemRebate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleItemRebateType[] SaleItemRebate {
            get {
                return this.saleItemRebateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SaleItemRebateType[]))
                            || false)) {
                    this.saleItemRebateField = new SaleItemRebateType[0];
                    this.saleItemRebateFieldSpecified = false;
                }
                else {
                    this.saleItemRebateField = value;
                    this.saleItemRebateFieldSpecified = (this.SaleItemRebateLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RebateLabelSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.rebateLabelFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.rebateLabelFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleItemRebateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleItemRebateFieldSpecified
                            || (this.SaleItemRebateLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleItemRebateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || (this.SaleItemRebateLength() != 0))
                            || ((this.TotalRebate != default(double))
                            && this.TotalRebateSpecified))
                            || ((this.RebateLabel != default(string))
                            && this.RebateLabelSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string RebatesTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "RebatesType";
                // END ADDED BY XSD
            }
        }
        public int SaleItemRebateLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.saleItemRebateField == default(SaleItemRebateType[]))) {
                return 0;
            }
            else {
                return this.saleItemRebateField.Length;
            }
            // END ADDED BY XSD
        }
        public SaleItemRebateType SaleItemRebateGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.saleItemRebateField == default(SaleItemRebateType[]))) {
                    return default(SaleItemRebateType);
                }
                else {
                    if ((0 > index)) {
                        return default(SaleItemRebateType);
                    }
                    else {
                        if ((this.saleItemRebateField.Length <= index)) {
                            return default(SaleItemRebateType);
                        }
                        else {
                            return this.saleItemRebateField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SaleItemRebateType);
            }
            // END ADDED BY XSD
        }
        public bool SaleItemRebateSetItem(int index, SaleItemRebateType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.saleItemRebateField == default(SaleItemRebateType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.saleItemRebateField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.saleItemRebateField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SaleItemRebateAddItem(SaleItemRebateType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.saleItemRebateField == default(SaleItemRebateType[]))) {
                    return false;
                }
                else {
                    SaleItemRebateType[] array = new SaleItemRebateType[(this.saleItemRebateField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.saleItemRebateField.Length); i = (i + 1)) {
                        array[i] = saleItemRebateField[i];
                    }
                    array[i] = value;
                    this.SaleItemRebate = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SaleItemRebateRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.saleItemRebateField == default(SaleItemRebateType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.saleItemRebateField.Length <= index)) {
                            return false;
                        }
                        else {
                            SaleItemRebateType[] array = new SaleItemRebateType[(this.saleItemRebateField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = saleItemRebateField[i];
                            }
                            for (i = (i + 1); (i < this.saleItemRebateField.Length); i = (i + 1)) {
                                array[i] = saleItemRebateField[i];
                            }
                            this.SaleItemRebate = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SaleItemRebateInsertItem(int index, SaleItemRebateType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.saleItemRebateField == default(SaleItemRebateType[]))) {
                    return -1;
                }
                else {
                    if ((this.saleItemRebateField.Length <= index)) {
                        if ((this.SaleItemRebateAddItem(value) == true)) {
                            return this.SaleItemRebateLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SaleItemRebateType[] array = new SaleItemRebateType[(this.saleItemRebateField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = saleItemRebateField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.saleItemRebateField.Length); j = (j + 1)) {
                            array[k] = saleItemRebateField[j];
                            k = (k + 1);
                        }
                        this.SaleItemRebate = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("1add3f78-75d8-4481-9ca2-82f435b2c47d")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleItemRebateType : ISaleItemRebateType {
        private string unitOfMeasureField = default(string);
        private double quantityField = default(double);
        private bool quantityFieldSpecified = default(bool);
        private string rebateLabelField = default(string);
        private int itemIDField = default(int);
        private string productCodeField = default(string);
        private string eanUpcField = default(string);
        private double itemAmountField = default(double);
        private bool itemAmountFieldSpecified = default(bool);
        private bool unitOfMeasureFieldSpecified = false;
        private bool rebateLabelFieldSpecified = false;
        private bool itemIDFieldSpecified = false;
        private bool productCodeFieldSpecified = false;
        private bool eanUpcFieldSpecified = false;
        public SaleItemRebateType() {
        }
        public SaleItemRebateType(SaleItemRebateType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleItemRebateType))) {
            }
            else {
                this.UnitOfMeasure = value.UnitOfMeasure;
                this.Quantity = value.Quantity;
                this.QuantitySpecified = value.QuantitySpecified;
                this.RebateLabel = value.RebateLabel;
                this.ItemID = value.ItemID;
                this.ProductCode = value.ProductCode;
                this.EanUpc = value.EanUpc;
                this.ItemAmount = value.ItemAmount;
                this.ItemAmountSpecified = value.ItemAmountSpecified;
                this.UnitOfMeasureSpecified = value.UnitOfMeasureSpecified;
                this.RebateLabelSpecified = value.RebateLabelSpecified;
                this.ItemIDSpecified = value.ItemIDSpecified;
                this.ProductCodeSpecified = value.ProductCodeSpecified;
                this.EanUpcSpecified = value.EanUpcSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UnitOfMeasure {
            get {
                return this.unitOfMeasureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.unitOfMeasureField = default(string);
                    this.unitOfMeasureFieldSpecified = false;
                }
                else {
                    this.unitOfMeasureField = value;
                    this.unitOfMeasureFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double Quantity {
            get {
                return this.quantityField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.quantityField = default(double);
                    this.quantityFieldSpecified = false;
                }
                else {
                    this.quantityField = value;
                    this.quantityFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.quantityFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.quantityFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RebateLabel {
            get {
                return this.rebateLabelField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.rebateLabelField = default(string);
                    this.rebateLabelFieldSpecified = false;
                }
                else {
                    this.rebateLabelField = value;
                    this.rebateLabelFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ItemID {
            get {
                return this.itemIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.itemIDField = default(int);
                    this.itemIDFieldSpecified = false;
                }
                else {
                    this.itemIDField = value;
                    this.itemIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.productCodeField = default(string);
                    this.productCodeFieldSpecified = false;
                }
                else {
                    this.productCodeField = value;
                    this.productCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EanUpc {
            get {
                return this.eanUpcField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.eanUpcField = default(string);
                    this.eanUpcFieldSpecified = false;
                }
                else {
                    this.eanUpcField = value;
                    this.eanUpcFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ItemAmount {
            get {
                return this.itemAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.itemAmountField = default(double);
                    this.itemAmountFieldSpecified = false;
                }
                else {
                    this.itemAmountField = value;
                    this.itemAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool UnitOfMeasureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.unitOfMeasureFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.unitOfMeasureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RebateLabelSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.rebateLabelFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.rebateLabelFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProductCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.productCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.productCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EanUpcSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.eanUpcFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.eanUpcFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.UnitOfMeasure != default(string))
                            && this.UnitOfMeasureSpecified))
                            || ((this.Quantity != default(double))
                            && this.QuantitySpecified))
                            || ((this.RebateLabel != default(string))
                            && this.RebateLabelSpecified))
                            || ((this.ItemID != default(int))
                            && this.ItemIDSpecified))
                            || ((this.ProductCode != default(string))
                            && this.ProductCodeSpecified))
                            || ((this.EanUpc != default(string))
                            && this.EanUpcSpecified))
                            || ((this.ItemAmount != default(double))
                            && this.ItemAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleItemRebateTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleItemRebateType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("50fbcb39-9e6a-4455-bab9-a369dce77410")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardAcquisitionRequestType : ICardAcquisitionRequestType {
        private SaleDataType saleDataField = new SaleDataType();
        private CardAcquisitionTransactionType cardAcquisitionTransactionField = new CardAcquisitionTransactionType();
        private bool saleDataFieldSpecified = false;
        private bool cardAcquisitionTransactionFieldSpecified = false;
        public CardAcquisitionRequestType() {
        }
        public CardAcquisitionRequestType(CardAcquisitionRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardAcquisitionRequestType))) {
            }
            else {
                this.SaleData = value.SaleData;
                this.CardAcquisitionTransaction = value.CardAcquisitionTransaction;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.CardAcquisitionTransactionSpecified = value.CardAcquisitionTransactionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CardAcquisitionTransactionType CardAcquisitionTransaction {
            get {
                return this.cardAcquisitionTransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CardAcquisitionTransactionType))
                            || false)) {
                    this.cardAcquisitionTransactionField = new CardAcquisitionTransactionType();
                    this.cardAcquisitionTransactionFieldSpecified = false;
                }
                else {
                    this.cardAcquisitionTransactionField = value;
                    this.cardAcquisitionTransactionFieldSpecified = this.CardAcquisitionTransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardAcquisitionTransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardAcquisitionTransactionFieldSpecified || this.CardAcquisitionTransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardAcquisitionTransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.CardAcquisitionTransaction != default(CardAcquisitionTransactionType))
                            && this.CardAcquisitionTransactionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardAcquisitionRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardAcquisitionRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("c2b39ca2-e9a9-4034-a8e8-2b00bc973308")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardAcquisitionTransactionType : ICardAcquisitionTransactionType {
        private string[] allowedPaymentBrandField = new string[0];
        private string[] allowedLoyaltyBrandField = new string[0];
        private string[] forceEntryModeField = new string[0];
        private string loyaltyHandlingField = default(string);
        private string customerLanguageField = default(string);
        private bool forceCustomerSelectionFlagField = default(bool);
        private double totalAmountField = default(double);
        private bool totalAmountFieldSpecified = default(bool);
        private string paymentTypeField = default(string);
        private bool cashBackFlagField = default(bool);
        private bool cashBackFlagFieldSpecified = default(bool);
        private bool allowedPaymentBrandFieldSpecified = false;
        private bool allowedLoyaltyBrandFieldSpecified = false;
        private bool forceEntryModeFieldSpecified = false;
        private string loyaltyHandlingDefaultValue = "Allowed";
        private bool loyaltyHandlingFieldSpecified = false;
        private bool customerLanguageFieldSpecified = false;
        private bool forceCustomerSelectionFlagDefaultValue = false;
        private bool forceCustomerSelectionFlagFieldSpecified = false;
        private bool paymentTypeFieldSpecified = false;
        public CardAcquisitionTransactionType() {
            this.loyaltyHandlingField = this.loyaltyHandlingDefaultValue;
            this.forceCustomerSelectionFlagField = this.forceCustomerSelectionFlagDefaultValue;
        }
        public CardAcquisitionTransactionType(CardAcquisitionTransactionType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardAcquisitionTransactionType))) {
            }
            else {
                this.AllowedPaymentBrand = value.AllowedPaymentBrand;
                this.AllowedLoyaltyBrand = value.AllowedLoyaltyBrand;
                this.ForceEntryMode = value.ForceEntryMode;
                this.LoyaltyHandling = value.LoyaltyHandling;
                this.CustomerLanguage = value.CustomerLanguage;
                this.ForceCustomerSelectionFlag = value.ForceCustomerSelectionFlag;
                this.TotalAmount = value.TotalAmount;
                this.TotalAmountSpecified = value.TotalAmountSpecified;
                this.PaymentType = value.PaymentType;
                this.CashBackFlag = value.CashBackFlag;
                this.CashBackFlagSpecified = value.CashBackFlagSpecified;
                this.AllowedPaymentBrandSpecified = value.AllowedPaymentBrandSpecified;
                this.AllowedLoyaltyBrandSpecified = value.AllowedLoyaltyBrandSpecified;
                this.ForceEntryModeSpecified = value.ForceEntryModeSpecified;
                this.LoyaltyHandlingSpecified = value.LoyaltyHandlingSpecified;
                this.CustomerLanguageSpecified = value.CustomerLanguageSpecified;
                this.ForceCustomerSelectionFlagSpecified = value.ForceCustomerSelectionFlagSpecified;
                this.PaymentTypeSpecified = value.PaymentTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedPaymentBrand", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AllowedPaymentBrand {
            get {
                return this.allowedPaymentBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.allowedPaymentBrandField = new string[0];
                    this.allowedPaymentBrandFieldSpecified = false;
                }
                else {
                    this.allowedPaymentBrandField = value;
                    this.allowedPaymentBrandFieldSpecified = (this.AllowedPaymentBrandLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedLoyaltyBrand", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AllowedLoyaltyBrand {
            get {
                return this.allowedLoyaltyBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.allowedLoyaltyBrandField = new string[0];
                    this.allowedLoyaltyBrandFieldSpecified = false;
                }
                else {
                    this.allowedLoyaltyBrandField = value;
                    this.allowedLoyaltyBrandFieldSpecified = (this.AllowedLoyaltyBrandLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ForceEntryMode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] ForceEntryMode {
            get {
                return this.forceEntryModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.forceEntryModeField = new string[0];
                    this.forceEntryModeFieldSpecified = false;
                }
                else {
                    this.forceEntryModeField = value;
                    this.forceEntryModeFieldSpecified = (this.ForceEntryModeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Allowed")]
        public string LoyaltyHandling {
            get {
                return this.loyaltyHandlingField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.LoyaltyHandlingDefaultValue)
                            || (value == default(string)))) {
                    this.loyaltyHandlingField = this.LoyaltyHandlingDefaultValue;
                    this.loyaltyHandlingFieldSpecified = false;
                }
                else {
                    this.loyaltyHandlingField = value;
                    this.loyaltyHandlingFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerLanguage {
            get {
                return this.customerLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerLanguageField = default(string);
                    this.customerLanguageFieldSpecified = false;
                }
                else {
                    this.customerLanguageField = value;
                    this.customerLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ForceCustomerSelectionFlag {
            get {
                return this.forceCustomerSelectionFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.ForceCustomerSelectionFlagDefaultValue)
                            || false)) {
                    this.forceCustomerSelectionFlagField = this.ForceCustomerSelectionFlagDefaultValue;
                    this.forceCustomerSelectionFlagFieldSpecified = false;
                }
                else {
                    this.forceCustomerSelectionFlagField = value;
                    this.forceCustomerSelectionFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.totalAmountField = default(double);
                    this.totalAmountFieldSpecified = false;
                }
                else {
                    this.totalAmountField = value;
                    this.totalAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.paymentTypeField = default(string);
                    this.paymentTypeFieldSpecified = false;
                }
                else {
                    this.paymentTypeField = value;
                    this.paymentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CashBackFlag {
            get {
                return this.cashBackFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.cashBackFlagField = default(bool);
                    this.cashBackFlagFieldSpecified = false;
                }
                else {
                    this.cashBackFlagField = value;
                    this.cashBackFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CashBackFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cashBackFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cashBackFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AllowedPaymentBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.allowedPaymentBrandFieldSpecified
                            || (this.AllowedPaymentBrandLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.allowedPaymentBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AllowedLoyaltyBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.allowedLoyaltyBrandFieldSpecified
                            || (this.AllowedLoyaltyBrandLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.allowedLoyaltyBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForceEntryModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.forceEntryModeFieldSpecified
                            || (this.ForceEntryModeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.forceEntryModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyHandlingDefaultValue {
            get {
                return this.loyaltyHandlingDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyHandlingSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyHandlingFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyHandlingFieldSpecified = value;
                if ((this.loyaltyHandlingFieldSpecified
                            && (this.loyaltyHandlingField == default(string)))) {
                    this.loyaltyHandlingField = this.loyaltyHandlingDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForceCustomerSelectionFlagDefaultValue {
            get {
                return this.forceCustomerSelectionFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForceCustomerSelectionFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.forceCustomerSelectionFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.forceCustomerSelectionFlagFieldSpecified = value;
                if ((this.forceCustomerSelectionFlagFieldSpecified
                            && (this.forceCustomerSelectionFlagField == default(bool)))) {
                    this.forceCustomerSelectionFlagField = this.forceCustomerSelectionFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((false
                            || (this.AllowedPaymentBrandLength() != 0))
                            || (this.AllowedLoyaltyBrandLength() != 0))
                            || (this.ForceEntryModeLength() != 0))
                            || ((this.LoyaltyHandling != default(string))
                            && this.LoyaltyHandlingSpecified))
                            || ((this.CustomerLanguage != default(string))
                            && this.CustomerLanguageSpecified))
                            || ((this.ForceCustomerSelectionFlag != default(bool))
                            && this.ForceCustomerSelectionFlagSpecified))
                            || ((this.TotalAmount != default(double))
                            && this.TotalAmountSpecified))
                            || ((this.PaymentType != default(string))
                            && this.PaymentTypeSpecified))
                            || ((this.CashBackFlag != default(bool))
                            && this.CashBackFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardAcquisitionTransactionTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardAcquisitionTransactionType";
                // END ADDED BY XSD
            }
        }
        public int AllowedPaymentBrandLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.allowedPaymentBrandField == default(string[]))) {
                return 0;
            }
            else {
                return this.allowedPaymentBrandField.Length;
            }
            // END ADDED BY XSD
        }
        public string AllowedPaymentBrandGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.allowedPaymentBrandField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.allowedPaymentBrandField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AllowedPaymentBrandSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedPaymentBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.allowedPaymentBrandField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedPaymentBrandAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.allowedPaymentBrandField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.allowedPaymentBrandField.Length); i = (i + 1)) {
                        array[i] = allowedPaymentBrandField[i];
                    }
                    array[i] = value;
                    this.AllowedPaymentBrand = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedPaymentBrandRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedPaymentBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.allowedPaymentBrandField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = allowedPaymentBrandField[i];
                            }
                            for (i = (i + 1); (i < this.allowedPaymentBrandField.Length); i = (i + 1)) {
                                array[i] = allowedPaymentBrandField[i];
                            }
                            this.AllowedPaymentBrand = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AllowedPaymentBrandInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.allowedPaymentBrandField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.allowedPaymentBrandField.Length <= index)) {
                        if ((this.AllowedPaymentBrandAddItem(value) == true)) {
                            return this.AllowedPaymentBrandLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.allowedPaymentBrandField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = allowedPaymentBrandField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.allowedPaymentBrandField.Length); j = (j + 1)) {
                            array[k] = allowedPaymentBrandField[j];
                            k = (k + 1);
                        }
                        this.AllowedPaymentBrand = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int AllowedLoyaltyBrandLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.allowedLoyaltyBrandField == default(string[]))) {
                return 0;
            }
            else {
                return this.allowedLoyaltyBrandField.Length;
            }
            // END ADDED BY XSD
        }
        public string AllowedLoyaltyBrandGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.allowedLoyaltyBrandField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.allowedLoyaltyBrandField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AllowedLoyaltyBrandSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedLoyaltyBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.allowedLoyaltyBrandField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedLoyaltyBrandAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.allowedLoyaltyBrandField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.allowedLoyaltyBrandField.Length); i = (i + 1)) {
                        array[i] = allowedLoyaltyBrandField[i];
                    }
                    array[i] = value;
                    this.AllowedLoyaltyBrand = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AllowedLoyaltyBrandRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.allowedLoyaltyBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.allowedLoyaltyBrandField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = allowedLoyaltyBrandField[i];
                            }
                            for (i = (i + 1); (i < this.allowedLoyaltyBrandField.Length); i = (i + 1)) {
                                array[i] = allowedLoyaltyBrandField[i];
                            }
                            this.AllowedLoyaltyBrand = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AllowedLoyaltyBrandInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.allowedLoyaltyBrandField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.allowedLoyaltyBrandField.Length <= index)) {
                        if ((this.AllowedLoyaltyBrandAddItem(value) == true)) {
                            return this.AllowedLoyaltyBrandLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.allowedLoyaltyBrandField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = allowedLoyaltyBrandField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.allowedLoyaltyBrandField.Length); j = (j + 1)) {
                            array[k] = allowedLoyaltyBrandField[j];
                            k = (k + 1);
                        }
                        this.AllowedLoyaltyBrand = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int ForceEntryModeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.forceEntryModeField == default(string[]))) {
                return 0;
            }
            else {
                return this.forceEntryModeField.Length;
            }
            // END ADDED BY XSD
        }
        public string ForceEntryModeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.forceEntryModeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.forceEntryModeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.forceEntryModeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.forceEntryModeField.Length); i = (i + 1)) {
                        array[i] = forceEntryModeField[i];
                    }
                    array[i] = value;
                    this.ForceEntryMode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.forceEntryModeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = forceEntryModeField[i];
                            }
                            for (i = (i + 1); (i < this.forceEntryModeField.Length); i = (i + 1)) {
                                array[i] = forceEntryModeField[i];
                            }
                            this.ForceEntryMode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ForceEntryModeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.forceEntryModeField.Length <= index)) {
                        if ((this.ForceEntryModeAddItem(value) == true)) {
                            return this.ForceEntryModeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.forceEntryModeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = forceEntryModeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.forceEntryModeField.Length); j = (j + 1)) {
                            array[k] = forceEntryModeField[j];
                            k = (k + 1);
                        }
                        this.ForceEntryMode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("6da2fd23-feee-476c-ad5c-7ef26d966eb1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardAcquisitionResponseType : ICardAcquisitionResponseType {
        private ResponseType responseField = new ResponseType();
        private SaleDataType saleDataField = new SaleDataType();
        private POIDataType pOIDataField = new POIDataType();
        private string[] paymentBrandField = new string[0];
        private PaymentInstrumentDataType paymentInstrumentDataField = new PaymentInstrumentDataType();
        private LoyaltyAccountType[] loyaltyAccountField = new LoyaltyAccountType[0];
        private CustomerOrderType[] customerOrderField = new CustomerOrderType[0];
        private bool responseFieldSpecified = false;
        private bool saleDataFieldSpecified = false;
        private bool pOIDataFieldSpecified = false;
        private bool paymentBrandFieldSpecified = false;
        private bool paymentInstrumentDataFieldSpecified = false;
        private bool loyaltyAccountFieldSpecified = false;
        private bool customerOrderFieldSpecified = false;
        public CardAcquisitionResponseType() {
        }
        public CardAcquisitionResponseType(CardAcquisitionResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardAcquisitionResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.SaleData = value.SaleData;
                this.POIData = value.POIData;
                this.PaymentBrand = value.PaymentBrand;
                this.PaymentInstrumentData = value.PaymentInstrumentData;
                this.LoyaltyAccount = value.LoyaltyAccount;
                this.CustomerOrder = value.CustomerOrder;
                this.ResponseSpecified = value.ResponseSpecified;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.POIDataSpecified = value.POIDataSpecified;
                this.PaymentBrandSpecified = value.PaymentBrandSpecified;
                this.PaymentInstrumentDataSpecified = value.PaymentInstrumentDataSpecified;
                this.LoyaltyAccountSpecified = value.LoyaltyAccountSpecified;
                this.CustomerOrderSpecified = value.CustomerOrderSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIDataType POIData {
            get {
                return this.pOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIDataType))
                            || false)) {
                    this.pOIDataField = new POIDataType();
                    this.pOIDataFieldSpecified = false;
                }
                else {
                    this.pOIDataField = value;
                    this.pOIDataFieldSpecified = this.POIData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PaymentBrand", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] PaymentBrand {
            get {
                return this.paymentBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.paymentBrandField = new string[0];
                    this.paymentBrandFieldSpecified = false;
                }
                else {
                    this.paymentBrandField = value;
                    this.paymentBrandFieldSpecified = (this.PaymentBrandLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentInstrumentDataType PaymentInstrumentData {
            get {
                return this.paymentInstrumentDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentInstrumentDataType))
                            || false)) {
                    this.paymentInstrumentDataField = new PaymentInstrumentDataType();
                    this.paymentInstrumentDataFieldSpecified = false;
                }
                else {
                    this.paymentInstrumentDataField = value;
                    this.paymentInstrumentDataFieldSpecified = this.PaymentInstrumentData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyAccount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyAccountType[] LoyaltyAccount {
            get {
                return this.loyaltyAccountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(LoyaltyAccountType[]))
                            || false)) {
                    this.loyaltyAccountField = new LoyaltyAccountType[0];
                    this.loyaltyAccountFieldSpecified = false;
                }
                else {
                    this.loyaltyAccountField = value;
                    this.loyaltyAccountFieldSpecified = (this.LoyaltyAccountLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomerOrder", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CustomerOrderType[] CustomerOrder {
            get {
                return this.customerOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CustomerOrderType[]))
                            || false)) {
                    this.customerOrderField = new CustomerOrderType[0];
                    this.customerOrderFieldSpecified = false;
                }
                else {
                    this.customerOrderField = value;
                    this.customerOrderFieldSpecified = (this.CustomerOrderLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIDataFieldSpecified || this.POIData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentBrandFieldSpecified
                            || (this.PaymentBrandLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentInstrumentDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentInstrumentDataFieldSpecified || this.PaymentInstrumentData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentInstrumentDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyAccountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyAccountFieldSpecified
                            || (this.LoyaltyAccountLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyAccountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderFieldSpecified
                            || (this.CustomerOrderLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.POIData != default(POIDataType))
                            && this.POIDataSpecified))
                            || ((this.PaymentInstrumentData != default(PaymentInstrumentDataType))
                            && this.PaymentInstrumentDataSpecified))
                            || (this.PaymentBrandLength() != 0))
                            || (this.LoyaltyAccountLength() != 0))
                            || (this.CustomerOrderLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardAcquisitionResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardAcquisitionResponseType";
                // END ADDED BY XSD
            }
        }
        public int PaymentBrandLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.paymentBrandField == default(string[]))) {
                return 0;
            }
            else {
                return this.paymentBrandField.Length;
            }
            // END ADDED BY XSD
        }
        public string PaymentBrandGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.paymentBrandField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.paymentBrandField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.paymentBrandField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool PaymentBrandSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.paymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.paymentBrandField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentBrandAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.paymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.paymentBrandField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.paymentBrandField.Length); i = (i + 1)) {
                        array[i] = paymentBrandField[i];
                    }
                    array[i] = value;
                    this.PaymentBrand = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentBrandRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.paymentBrandField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentBrandField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.paymentBrandField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = paymentBrandField[i];
                            }
                            for (i = (i + 1); (i < this.paymentBrandField.Length); i = (i + 1)) {
                                array[i] = paymentBrandField[i];
                            }
                            this.PaymentBrand = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int PaymentBrandInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.paymentBrandField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.paymentBrandField.Length <= index)) {
                        if ((this.PaymentBrandAddItem(value) == true)) {
                            return this.PaymentBrandLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.paymentBrandField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = paymentBrandField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.paymentBrandField.Length); j = (j + 1)) {
                            array[k] = paymentBrandField[j];
                            k = (k + 1);
                        }
                        this.PaymentBrand = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyAccountLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loyaltyAccountField == default(LoyaltyAccountType[]))) {
                return 0;
            }
            else {
                return this.loyaltyAccountField.Length;
            }
            // END ADDED BY XSD
        }
        public LoyaltyAccountType LoyaltyAccountGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loyaltyAccountField == default(LoyaltyAccountType[]))) {
                    return default(LoyaltyAccountType);
                }
                else {
                    if ((0 > index)) {
                        return default(LoyaltyAccountType);
                    }
                    else {
                        if ((this.loyaltyAccountField.Length <= index)) {
                            return default(LoyaltyAccountType);
                        }
                        else {
                            return this.loyaltyAccountField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(LoyaltyAccountType);
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyAccountSetItem(int index, LoyaltyAccountType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loyaltyAccountField == default(LoyaltyAccountType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyAccountField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loyaltyAccountField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyAccountAddItem(LoyaltyAccountType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loyaltyAccountField == default(LoyaltyAccountType[]))) {
                    return false;
                }
                else {
                    LoyaltyAccountType[] array = new LoyaltyAccountType[(this.loyaltyAccountField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loyaltyAccountField.Length); i = (i + 1)) {
                        array[i] = loyaltyAccountField[i];
                    }
                    array[i] = value;
                    this.LoyaltyAccount = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyAccountRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loyaltyAccountField == default(LoyaltyAccountType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyAccountField.Length <= index)) {
                            return false;
                        }
                        else {
                            LoyaltyAccountType[] array = new LoyaltyAccountType[(this.loyaltyAccountField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loyaltyAccountField[i];
                            }
                            for (i = (i + 1); (i < this.loyaltyAccountField.Length); i = (i + 1)) {
                                array[i] = loyaltyAccountField[i];
                            }
                            this.LoyaltyAccount = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyAccountInsertItem(int index, LoyaltyAccountType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loyaltyAccountField == default(LoyaltyAccountType[]))) {
                    return -1;
                }
                else {
                    if ((this.loyaltyAccountField.Length <= index)) {
                        if ((this.LoyaltyAccountAddItem(value) == true)) {
                            return this.LoyaltyAccountLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        LoyaltyAccountType[] array = new LoyaltyAccountType[(this.loyaltyAccountField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loyaltyAccountField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loyaltyAccountField.Length); j = (j + 1)) {
                            array[k] = loyaltyAccountField[j];
                            k = (k + 1);
                        }
                        this.LoyaltyAccount = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.customerOrderField == default(CustomerOrderType[]))) {
                return 0;
            }
            else {
                return this.customerOrderField.Length;
            }
            // END ADDED BY XSD
        }
        public CustomerOrderType CustomerOrderGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return default(CustomerOrderType);
                }
                else {
                    if ((0 > index)) {
                        return default(CustomerOrderType);
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return default(CustomerOrderType);
                        }
                        else {
                            return this.customerOrderField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CustomerOrderType);
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderSetItem(int index, CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.customerOrderField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderAddItem(CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.customerOrderField.Length); i = (i + 1)) {
                        array[i] = customerOrderField[i];
                    }
                    array[i] = value;
                    this.CustomerOrder = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = customerOrderField[i];
                            }
                            for (i = (i + 1); (i < this.customerOrderField.Length); i = (i + 1)) {
                                array[i] = customerOrderField[i];
                            }
                            this.CustomerOrder = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderInsertItem(int index, CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return -1;
                }
                else {
                    if ((this.customerOrderField.Length <= index)) {
                        if ((this.CustomerOrderAddItem(value) == true)) {
                            return this.CustomerOrderLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = customerOrderField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.customerOrderField.Length); j = (j + 1)) {
                            array[k] = customerOrderField[j];
                            k = (k + 1);
                        }
                        this.CustomerOrder = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("0a342b52-1543-45fc-98bc-c924469444c1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardholderPINType : ICardholderPINType {
        private ContentInformationType encrPINBlockField = new ContentInformationType();
        private string pINFormatField = default(string);
        private string additionalInputField = default(string);
        private bool encrPINBlockFieldSpecified = false;
        private bool pINFormatFieldSpecified = false;
        private bool additionalInputFieldSpecified = false;
        public CardholderPINType() {
        }
        public CardholderPINType(CardholderPINType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardholderPINType))) {
            }
            else {
                this.EncrPINBlock = value.EncrPINBlock;
                this.PINFormat = value.PINFormat;
                this.AdditionalInput = value.AdditionalInput;
                this.EncrPINBlockSpecified = value.EncrPINBlockSpecified;
                this.PINFormatSpecified = value.PINFormatSpecified;
                this.AdditionalInputSpecified = value.AdditionalInputSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContentInformationType EncrPINBlock {
            get {
                return this.encrPINBlockField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ContentInformationType))
                            || false)) {
                    this.encrPINBlockField = new ContentInformationType();
                    this.encrPINBlockFieldSpecified = false;
                }
                else {
                    this.encrPINBlockField = value;
                    this.encrPINBlockFieldSpecified = this.EncrPINBlock.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PINFormat {
            get {
                return this.pINFormatField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pINFormatField = default(string);
                    this.pINFormatFieldSpecified = false;
                }
                else {
                    this.pINFormatField = value;
                    this.pINFormatFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AdditionalInput {
            get {
                return this.additionalInputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.additionalInputField = default(string);
                    this.additionalInputFieldSpecified = false;
                }
                else {
                    this.additionalInputField = value;
                    this.additionalInputFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EncrPINBlockSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.encrPINBlockFieldSpecified || this.EncrPINBlock.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.encrPINBlockFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PINFormatSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pINFormatFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pINFormatFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AdditionalInputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.additionalInputFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.additionalInputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.EncrPINBlock != default(ContentInformationType))
                            && this.EncrPINBlockSpecified))
                            || ((this.PINFormat != default(string))
                            && this.PINFormatSpecified))
                            || ((this.AdditionalInput != default(string))
                            && this.AdditionalInputSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardholderPINTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardholderPINType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("f0cc6487-9201-4a07-870b-429aa919879f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardReaderAPDURequestType : ICardReaderAPDURequestType {
        private byte[] aPDUDataField = new byte[0];
        private byte[] aPDUClassField = new byte[0];
        private byte[] aPDUInstructionField = new byte[0];
        private byte[] aPDUPar1Field = new byte[0];
        private byte[] aPDUPar2Field = new byte[0];
        private byte[] aPDUExpectedLengthField = new byte[0];
        private bool aPDUDataFieldSpecified = false;
        private bool aPDUClassFieldSpecified = false;
        private bool aPDUInstructionFieldSpecified = false;
        private bool aPDUPar1FieldSpecified = false;
        private bool aPDUPar2FieldSpecified = false;
        private bool aPDUExpectedLengthFieldSpecified = false;
        public CardReaderAPDURequestType() {
        }
        public CardReaderAPDURequestType(CardReaderAPDURequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardReaderAPDURequestType))) {
            }
            else {
                this.APDUData = value.APDUData;
                this.APDUClass = value.APDUClass;
                this.APDUInstruction = value.APDUInstruction;
                this.APDUPar1 = value.APDUPar1;
                this.APDUPar2 = value.APDUPar2;
                this.APDUExpectedLength = value.APDUExpectedLength;
                this.APDUDataSpecified = value.APDUDataSpecified;
                this.APDUClassSpecified = value.APDUClassSpecified;
                this.APDUInstructionSpecified = value.APDUInstructionSpecified;
                this.APDUPar1Specified = value.APDUPar1Specified;
                this.APDUPar2Specified = value.APDUPar2Specified;
                this.APDUExpectedLengthSpecified = value.APDUExpectedLengthSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] APDUData {
            get {
                return this.aPDUDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aPDUDataField = new byte[0];
                    this.aPDUDataFieldSpecified = false;
                }
                else {
                    this.aPDUDataField = value;
                    this.aPDUDataFieldSpecified = (this.APDUDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] APDUClass {
            get {
                return this.aPDUClassField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aPDUClassField = new byte[0];
                    this.aPDUClassFieldSpecified = false;
                }
                else {
                    this.aPDUClassField = value;
                    this.aPDUClassFieldSpecified = (this.APDUClassLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] APDUInstruction {
            get {
                return this.aPDUInstructionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aPDUInstructionField = new byte[0];
                    this.aPDUInstructionFieldSpecified = false;
                }
                else {
                    this.aPDUInstructionField = value;
                    this.aPDUInstructionFieldSpecified = (this.APDUInstructionLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] APDUPar1 {
            get {
                return this.aPDUPar1Field;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aPDUPar1Field = new byte[0];
                    this.aPDUPar1FieldSpecified = false;
                }
                else {
                    this.aPDUPar1Field = value;
                    this.aPDUPar1FieldSpecified = (this.APDUPar1Length() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] APDUPar2 {
            get {
                return this.aPDUPar2Field;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aPDUPar2Field = new byte[0];
                    this.aPDUPar2FieldSpecified = false;
                }
                else {
                    this.aPDUPar2Field = value;
                    this.aPDUPar2FieldSpecified = (this.APDUPar2Length() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] APDUExpectedLength {
            get {
                return this.aPDUExpectedLengthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aPDUExpectedLengthField = new byte[0];
                    this.aPDUExpectedLengthFieldSpecified = false;
                }
                else {
                    this.aPDUExpectedLengthField = value;
                    this.aPDUExpectedLengthFieldSpecified = (this.APDUExpectedLengthLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool APDUDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aPDUDataFieldSpecified
                            || (this.APDUDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aPDUDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool APDUClassSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aPDUClassFieldSpecified
                            || (this.APDUClassLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aPDUClassFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool APDUInstructionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aPDUInstructionFieldSpecified
                            || (this.APDUInstructionLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aPDUInstructionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool APDUPar1Specified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aPDUPar1FieldSpecified
                            || (this.APDUPar1Length() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aPDUPar1FieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool APDUPar2Specified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aPDUPar2FieldSpecified
                            || (this.APDUPar2Length() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aPDUPar2FieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool APDUExpectedLengthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aPDUExpectedLengthFieldSpecified
                            || (this.APDUExpectedLengthLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aPDUExpectedLengthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || (this.APDUDataLength() != 0))
                            || (this.APDUClassLength() != 0))
                            || (this.APDUInstructionLength() != 0))
                            || (this.APDUPar1Length() != 0))
                            || (this.APDUPar2Length() != 0))
                            || (this.APDUExpectedLengthLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardReaderAPDURequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardReaderAPDURequestType";
                // END ADDED BY XSD
            }
        }
        public int APDUDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aPDUDataField == default(byte[]))) {
                return 0;
            }
            else {
                return this.aPDUDataField.Length;
            }
            // END ADDED BY XSD
        }
        public byte APDUDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aPDUDataField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aPDUDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool APDUDataSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aPDUDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUDataAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aPDUDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aPDUDataField.Length); i = (i + 1)) {
                        array[i] = aPDUDataField[i];
                    }
                    array[i] = value;
                    this.APDUData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aPDUDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aPDUDataField[i];
                            }
                            for (i = (i + 1); (i < this.aPDUDataField.Length); i = (i + 1)) {
                                array[i] = aPDUDataField[i];
                            }
                            this.APDUData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int APDUDataInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aPDUDataField.Length <= index)) {
                        if ((this.APDUDataAddItem(value) == true)) {
                            return this.APDUDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aPDUDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aPDUDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aPDUDataField.Length); j = (j + 1)) {
                            array[k] = aPDUDataField[j];
                            k = (k + 1);
                        }
                        this.APDUData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int APDUClassLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aPDUClassField == default(byte[]))) {
                return 0;
            }
            else {
                return this.aPDUClassField.Length;
            }
            // END ADDED BY XSD
        }
        public byte APDUClassGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aPDUClassField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aPDUClassField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aPDUClassField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool APDUClassSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aPDUClassField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUClassField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aPDUClassField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUClassAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aPDUClassField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aPDUClassField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aPDUClassField.Length); i = (i + 1)) {
                        array[i] = aPDUClassField[i];
                    }
                    array[i] = value;
                    this.APDUClass = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUClassRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aPDUClassField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUClassField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aPDUClassField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aPDUClassField[i];
                            }
                            for (i = (i + 1); (i < this.aPDUClassField.Length); i = (i + 1)) {
                                array[i] = aPDUClassField[i];
                            }
                            this.APDUClass = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int APDUClassInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aPDUClassField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aPDUClassField.Length <= index)) {
                        if ((this.APDUClassAddItem(value) == true)) {
                            return this.APDUClassLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aPDUClassField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aPDUClassField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aPDUClassField.Length); j = (j + 1)) {
                            array[k] = aPDUClassField[j];
                            k = (k + 1);
                        }
                        this.APDUClass = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int APDUInstructionLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aPDUInstructionField == default(byte[]))) {
                return 0;
            }
            else {
                return this.aPDUInstructionField.Length;
            }
            // END ADDED BY XSD
        }
        public byte APDUInstructionGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aPDUInstructionField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aPDUInstructionField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aPDUInstructionField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool APDUInstructionSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aPDUInstructionField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUInstructionField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aPDUInstructionField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUInstructionAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aPDUInstructionField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aPDUInstructionField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aPDUInstructionField.Length); i = (i + 1)) {
                        array[i] = aPDUInstructionField[i];
                    }
                    array[i] = value;
                    this.APDUInstruction = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUInstructionRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aPDUInstructionField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUInstructionField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aPDUInstructionField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aPDUInstructionField[i];
                            }
                            for (i = (i + 1); (i < this.aPDUInstructionField.Length); i = (i + 1)) {
                                array[i] = aPDUInstructionField[i];
                            }
                            this.APDUInstruction = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int APDUInstructionInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aPDUInstructionField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aPDUInstructionField.Length <= index)) {
                        if ((this.APDUInstructionAddItem(value) == true)) {
                            return this.APDUInstructionLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aPDUInstructionField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aPDUInstructionField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aPDUInstructionField.Length); j = (j + 1)) {
                            array[k] = aPDUInstructionField[j];
                            k = (k + 1);
                        }
                        this.APDUInstruction = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int APDUPar1Length() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aPDUPar1Field == default(byte[]))) {
                return 0;
            }
            else {
                return this.aPDUPar1Field.Length;
            }
            // END ADDED BY XSD
        }
        public byte APDUPar1GetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aPDUPar1Field == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aPDUPar1Field.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aPDUPar1Field[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool APDUPar1SetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aPDUPar1Field == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUPar1Field.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aPDUPar1Field[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUPar1AddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aPDUPar1Field == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aPDUPar1Field.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aPDUPar1Field.Length); i = (i + 1)) {
                        array[i] = aPDUPar1Field[i];
                    }
                    array[i] = value;
                    this.APDUPar1 = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUPar1RemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aPDUPar1Field == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUPar1Field.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aPDUPar1Field.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aPDUPar1Field[i];
                            }
                            for (i = (i + 1); (i < this.aPDUPar1Field.Length); i = (i + 1)) {
                                array[i] = aPDUPar1Field[i];
                            }
                            this.APDUPar1 = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int APDUPar1InsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aPDUPar1Field == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aPDUPar1Field.Length <= index)) {
                        if ((this.APDUPar1AddItem(value) == true)) {
                            return this.APDUPar1Length();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aPDUPar1Field.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aPDUPar1Field[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aPDUPar1Field.Length); j = (j + 1)) {
                            array[k] = aPDUPar1Field[j];
                            k = (k + 1);
                        }
                        this.APDUPar1 = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int APDUPar2Length() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aPDUPar2Field == default(byte[]))) {
                return 0;
            }
            else {
                return this.aPDUPar2Field.Length;
            }
            // END ADDED BY XSD
        }
        public byte APDUPar2GetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aPDUPar2Field == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aPDUPar2Field.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aPDUPar2Field[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool APDUPar2SetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aPDUPar2Field == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUPar2Field.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aPDUPar2Field[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUPar2AddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aPDUPar2Field == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aPDUPar2Field.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aPDUPar2Field.Length); i = (i + 1)) {
                        array[i] = aPDUPar2Field[i];
                    }
                    array[i] = value;
                    this.APDUPar2 = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUPar2RemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aPDUPar2Field == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUPar2Field.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aPDUPar2Field.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aPDUPar2Field[i];
                            }
                            for (i = (i + 1); (i < this.aPDUPar2Field.Length); i = (i + 1)) {
                                array[i] = aPDUPar2Field[i];
                            }
                            this.APDUPar2 = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int APDUPar2InsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aPDUPar2Field == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aPDUPar2Field.Length <= index)) {
                        if ((this.APDUPar2AddItem(value) == true)) {
                            return this.APDUPar2Length();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aPDUPar2Field.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aPDUPar2Field[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aPDUPar2Field.Length); j = (j + 1)) {
                            array[k] = aPDUPar2Field[j];
                            k = (k + 1);
                        }
                        this.APDUPar2 = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int APDUExpectedLengthLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aPDUExpectedLengthField == default(byte[]))) {
                return 0;
            }
            else {
                return this.aPDUExpectedLengthField.Length;
            }
            // END ADDED BY XSD
        }
        public byte APDUExpectedLengthGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aPDUExpectedLengthField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aPDUExpectedLengthField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aPDUExpectedLengthField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool APDUExpectedLengthSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aPDUExpectedLengthField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUExpectedLengthField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aPDUExpectedLengthField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUExpectedLengthAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aPDUExpectedLengthField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aPDUExpectedLengthField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aPDUExpectedLengthField.Length); i = (i + 1)) {
                        array[i] = aPDUExpectedLengthField[i];
                    }
                    array[i] = value;
                    this.APDUExpectedLength = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUExpectedLengthRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aPDUExpectedLengthField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUExpectedLengthField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aPDUExpectedLengthField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aPDUExpectedLengthField[i];
                            }
                            for (i = (i + 1); (i < this.aPDUExpectedLengthField.Length); i = (i + 1)) {
                                array[i] = aPDUExpectedLengthField[i];
                            }
                            this.APDUExpectedLength = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int APDUExpectedLengthInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aPDUExpectedLengthField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aPDUExpectedLengthField.Length <= index)) {
                        if ((this.APDUExpectedLengthAddItem(value) == true)) {
                            return this.APDUExpectedLengthLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aPDUExpectedLengthField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aPDUExpectedLengthField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aPDUExpectedLengthField.Length); j = (j + 1)) {
                            array[k] = aPDUExpectedLengthField[j];
                            k = (k + 1);
                        }
                        this.APDUExpectedLength = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("c3d33cf6-9f2a-4b02-a760-970c6fcb157b")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardReaderAPDUResponseType : ICardReaderAPDUResponseType {
        private ResponseType responseField = new ResponseType();
        private byte[] aPDUDataField = new byte[0];
        private byte[] cardStatusWordsField = new byte[0];
        private bool responseFieldSpecified = false;
        private bool aPDUDataFieldSpecified = false;
        private bool cardStatusWordsFieldSpecified = false;
        public CardReaderAPDUResponseType() {
        }
        public CardReaderAPDUResponseType(CardReaderAPDUResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardReaderAPDUResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.APDUData = value.APDUData;
                this.CardStatusWords = value.CardStatusWords;
                this.ResponseSpecified = value.ResponseSpecified;
                this.APDUDataSpecified = value.APDUDataSpecified;
                this.CardStatusWordsSpecified = value.CardStatusWordsSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] APDUData {
            get {
                return this.aPDUDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aPDUDataField = new byte[0];
                    this.aPDUDataFieldSpecified = false;
                }
                else {
                    this.aPDUDataField = value;
                    this.aPDUDataFieldSpecified = (this.APDUDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] CardStatusWords {
            get {
                return this.cardStatusWordsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.cardStatusWordsField = new byte[0];
                    this.cardStatusWordsFieldSpecified = false;
                }
                else {
                    this.cardStatusWordsField = value;
                    this.cardStatusWordsFieldSpecified = (this.CardStatusWordsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool APDUDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aPDUDataFieldSpecified
                            || (this.APDUDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aPDUDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardStatusWordsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardStatusWordsFieldSpecified
                            || (this.CardStatusWordsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardStatusWordsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || (this.APDUDataLength() != 0))
                            || (this.CardStatusWordsLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardReaderAPDUResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardReaderAPDUResponseType";
                // END ADDED BY XSD
            }
        }
        public int APDUDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aPDUDataField == default(byte[]))) {
                return 0;
            }
            else {
                return this.aPDUDataField.Length;
            }
            // END ADDED BY XSD
        }
        public byte APDUDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aPDUDataField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aPDUDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool APDUDataSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aPDUDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUDataAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aPDUDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aPDUDataField.Length); i = (i + 1)) {
                        array[i] = aPDUDataField[i];
                    }
                    array[i] = value;
                    this.APDUData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool APDUDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aPDUDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aPDUDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aPDUDataField[i];
                            }
                            for (i = (i + 1); (i < this.aPDUDataField.Length); i = (i + 1)) {
                                array[i] = aPDUDataField[i];
                            }
                            this.APDUData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int APDUDataInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aPDUDataField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aPDUDataField.Length <= index)) {
                        if ((this.APDUDataAddItem(value) == true)) {
                            return this.APDUDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aPDUDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aPDUDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aPDUDataField.Length); j = (j + 1)) {
                            array[k] = aPDUDataField[j];
                            k = (k + 1);
                        }
                        this.APDUData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int CardStatusWordsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.cardStatusWordsField == default(byte[]))) {
                return 0;
            }
            else {
                return this.cardStatusWordsField.Length;
            }
            // END ADDED BY XSD
        }
        public byte CardStatusWordsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.cardStatusWordsField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.cardStatusWordsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool CardStatusWordsSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.cardStatusWordsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.cardStatusWordsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CardStatusWordsAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.cardStatusWordsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.cardStatusWordsField.Length); i = (i + 1)) {
                        array[i] = cardStatusWordsField[i];
                    }
                    array[i] = value;
                    this.CardStatusWords = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CardStatusWordsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.cardStatusWordsField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.cardStatusWordsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = cardStatusWordsField[i];
                            }
                            for (i = (i + 1); (i < this.cardStatusWordsField.Length); i = (i + 1)) {
                                array[i] = cardStatusWordsField[i];
                            }
                            this.CardStatusWords = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CardStatusWordsInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.cardStatusWordsField.Length <= index)) {
                        if ((this.CardStatusWordsAddItem(value) == true)) {
                            return this.CardStatusWordsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.cardStatusWordsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = cardStatusWordsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.cardStatusWordsField.Length); j = (j + 1)) {
                            array[k] = cardStatusWordsField[j];
                            k = (k + 1);
                        }
                        this.CardStatusWords = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("844b0000-3e70-475f-af0b-0835546f1408")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardReaderInitRequestType : ICardReaderInitRequestType {
        private string[] forceEntryModeField = new string[0];
        private DisplayOutputType displayOutputField = new DisplayOutputType();
        private bool warmResetFlagField = default(bool);
        private bool warmResetFlagFieldSpecified = default(bool);
        private bool leaveCardFlagField = default(bool);
        private int maxWaitingTimeField = default(int);
        private bool forceEntryModeFieldSpecified = false;
        private bool displayOutputFieldSpecified = false;
        private bool leaveCardFlagDefaultValue = true;
        private bool leaveCardFlagFieldSpecified = false;
        private bool maxWaitingTimeFieldSpecified = false;
        public CardReaderInitRequestType() {
            this.leaveCardFlagField = this.leaveCardFlagDefaultValue;
        }
        public CardReaderInitRequestType(CardReaderInitRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardReaderInitRequestType))) {
            }
            else {
                this.ForceEntryMode = value.ForceEntryMode;
                this.DisplayOutput = value.DisplayOutput;
                this.WarmResetFlag = value.WarmResetFlag;
                this.WarmResetFlagSpecified = value.WarmResetFlagSpecified;
                this.LeaveCardFlag = value.LeaveCardFlag;
                this.MaxWaitingTime = value.MaxWaitingTime;
                this.ForceEntryModeSpecified = value.ForceEntryModeSpecified;
                this.DisplayOutputSpecified = value.DisplayOutputSpecified;
                this.LeaveCardFlagSpecified = value.LeaveCardFlagSpecified;
                this.MaxWaitingTimeSpecified = value.MaxWaitingTimeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ForceEntryMode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] ForceEntryMode {
            get {
                return this.forceEntryModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.forceEntryModeField = new string[0];
                    this.forceEntryModeFieldSpecified = false;
                }
                else {
                    this.forceEntryModeField = value;
                    this.forceEntryModeFieldSpecified = (this.ForceEntryModeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DisplayOutputType DisplayOutput {
            get {
                return this.displayOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(DisplayOutputType))
                            || false)) {
                    this.displayOutputField = new DisplayOutputType();
                    this.displayOutputFieldSpecified = false;
                }
                else {
                    this.displayOutputField = value;
                    this.displayOutputFieldSpecified = this.DisplayOutput.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool WarmResetFlag {
            get {
                return this.warmResetFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.warmResetFlagField = default(bool);
                    this.warmResetFlagFieldSpecified = false;
                }
                else {
                    this.warmResetFlagField = value;
                    this.warmResetFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WarmResetFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.warmResetFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.warmResetFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool LeaveCardFlag {
            get {
                return this.leaveCardFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.LeaveCardFlagDefaultValue)
                            || false)) {
                    this.leaveCardFlagField = this.LeaveCardFlagDefaultValue;
                    this.leaveCardFlagFieldSpecified = false;
                }
                else {
                    this.leaveCardFlagField = value;
                    this.leaveCardFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxWaitingTime {
            get {
                return this.maxWaitingTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxWaitingTimeField = default(int);
                    this.maxWaitingTimeFieldSpecified = false;
                }
                else {
                    this.maxWaitingTimeField = value;
                    this.maxWaitingTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ForceEntryModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.forceEntryModeFieldSpecified
                            || (this.ForceEntryModeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.forceEntryModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisplayOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.displayOutputFieldSpecified || this.DisplayOutput.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.displayOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LeaveCardFlagDefaultValue {
            get {
                return this.leaveCardFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LeaveCardFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.leaveCardFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.leaveCardFlagFieldSpecified = value;
                if ((this.leaveCardFlagFieldSpecified
                            && (this.leaveCardFlagField == default(bool)))) {
                    this.leaveCardFlagField = this.leaveCardFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxWaitingTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxWaitingTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxWaitingTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.DisplayOutput != default(DisplayOutputType))
                            && this.DisplayOutputSpecified))
                            || (this.ForceEntryModeLength() != 0))
                            || ((this.WarmResetFlag != default(bool))
                            && this.WarmResetFlagSpecified))
                            || ((this.LeaveCardFlag != default(bool))
                            && this.LeaveCardFlagSpecified))
                            || ((this.MaxWaitingTime != default(int))
                            && this.MaxWaitingTimeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardReaderInitRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardReaderInitRequestType";
                // END ADDED BY XSD
            }
        }
        public int ForceEntryModeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.forceEntryModeField == default(string[]))) {
                return 0;
            }
            else {
                return this.forceEntryModeField.Length;
            }
            // END ADDED BY XSD
        }
        public string ForceEntryModeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.forceEntryModeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.forceEntryModeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.forceEntryModeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.forceEntryModeField.Length); i = (i + 1)) {
                        array[i] = forceEntryModeField[i];
                    }
                    array[i] = value;
                    this.ForceEntryMode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ForceEntryModeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.forceEntryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.forceEntryModeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = forceEntryModeField[i];
                            }
                            for (i = (i + 1); (i < this.forceEntryModeField.Length); i = (i + 1)) {
                                array[i] = forceEntryModeField[i];
                            }
                            this.ForceEntryMode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ForceEntryModeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.forceEntryModeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.forceEntryModeField.Length <= index)) {
                        if ((this.ForceEntryModeAddItem(value) == true)) {
                            return this.ForceEntryModeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.forceEntryModeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = forceEntryModeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.forceEntryModeField.Length); j = (j + 1)) {
                            array[k] = forceEntryModeField[j];
                            k = (k + 1);
                        }
                        this.ForceEntryMode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("7404811f-7426-48ea-bba0-76af5bdcddc8")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardReaderInitResponseType : ICardReaderInitResponseType {
        private ResponseType responseField = new ResponseType();
        private TrackDataType[] trackDataField = new TrackDataType[0];
        private ICCResetDataType iCCResetDataField = new ICCResetDataType();
        private string[] entryModeField = new string[0];
        private bool responseFieldSpecified = false;
        private bool trackDataFieldSpecified = false;
        private bool iCCResetDataFieldSpecified = false;
        private bool entryModeFieldSpecified = false;
        public CardReaderInitResponseType() {
        }
        public CardReaderInitResponseType(CardReaderInitResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardReaderInitResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.TrackData = value.TrackData;
                this.ICCResetData = value.ICCResetData;
                this.EntryMode = value.EntryMode;
                this.ResponseSpecified = value.ResponseSpecified;
                this.TrackDataSpecified = value.TrackDataSpecified;
                this.ICCResetDataSpecified = value.ICCResetDataSpecified;
                this.EntryModeSpecified = value.EntryModeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrackData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrackDataType[] TrackData {
            get {
                return this.trackDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(TrackDataType[]))
                            || false)) {
                    this.trackDataField = new TrackDataType[0];
                    this.trackDataFieldSpecified = false;
                }
                else {
                    this.trackDataField = value;
                    this.trackDataFieldSpecified = (this.TrackDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ICCResetDataType ICCResetData {
            get {
                return this.iCCResetDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ICCResetDataType))
                            || false)) {
                    this.iCCResetDataField = new ICCResetDataType();
                    this.iCCResetDataFieldSpecified = false;
                }
                else {
                    this.iCCResetDataField = value;
                    this.iCCResetDataFieldSpecified = this.ICCResetData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] EntryMode {
            get {
                return this.entryModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.entryModeField = new string[0];
                    this.entryModeFieldSpecified = false;
                }
                else {
                    this.entryModeField = value;
                    this.entryModeFieldSpecified = (this.EntryModeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TrackDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.trackDataFieldSpecified
                            || (this.TrackDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.trackDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ICCResetDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.iCCResetDataFieldSpecified || this.ICCResetData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.iCCResetDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EntryModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.entryModeFieldSpecified
                            || (this.EntryModeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.entryModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.ICCResetData != default(ICCResetDataType))
                            && this.ICCResetDataSpecified))
                            || (this.TrackDataLength() != 0))
                            || (this.EntryModeLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardReaderInitResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardReaderInitResponseType";
                // END ADDED BY XSD
            }
        }
        public int TrackDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.trackDataField == default(TrackDataType[]))) {
                return 0;
            }
            else {
                return this.trackDataField.Length;
            }
            // END ADDED BY XSD
        }
        public TrackDataType TrackDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return default(TrackDataType);
                }
                else {
                    if ((0 > index)) {
                        return default(TrackDataType);
                    }
                    else {
                        if ((this.trackDataField.Length <= index)) {
                            return default(TrackDataType);
                        }
                        else {
                            return this.trackDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(TrackDataType);
            }
            // END ADDED BY XSD
        }
        public bool TrackDataSetItem(int index, TrackDataType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.trackDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.trackDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TrackDataAddItem(TrackDataType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return false;
                }
                else {
                    TrackDataType[] array = new TrackDataType[(this.trackDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.trackDataField.Length); i = (i + 1)) {
                        array[i] = trackDataField[i];
                    }
                    array[i] = value;
                    this.TrackData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TrackDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.trackDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            TrackDataType[] array = new TrackDataType[(this.trackDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = trackDataField[i];
                            }
                            for (i = (i + 1); (i < this.trackDataField.Length); i = (i + 1)) {
                                array[i] = trackDataField[i];
                            }
                            this.TrackData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int TrackDataInsertItem(int index, TrackDataType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.trackDataField == default(TrackDataType[]))) {
                    return -1;
                }
                else {
                    if ((this.trackDataField.Length <= index)) {
                        if ((this.TrackDataAddItem(value) == true)) {
                            return this.TrackDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        TrackDataType[] array = new TrackDataType[(this.trackDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = trackDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.trackDataField.Length); j = (j + 1)) {
                            array[k] = trackDataField[j];
                            k = (k + 1);
                        }
                        this.TrackData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int EntryModeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.entryModeField == default(string[]))) {
                return 0;
            }
            else {
                return this.entryModeField.Length;
            }
            // END ADDED BY XSD
        }
        public string EntryModeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.entryModeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool EntryModeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.entryModeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.entryModeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.entryModeField.Length); i = (i + 1)) {
                        array[i] = entryModeField[i];
                    }
                    array[i] = value;
                    this.EntryMode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.entryModeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            for (i = (i + 1); (i < this.entryModeField.Length); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            this.EntryMode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int EntryModeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.entryModeField.Length <= index)) {
                        if ((this.EntryModeAddItem(value) == true)) {
                            return this.EntryModeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.entryModeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = entryModeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.entryModeField.Length); j = (j + 1)) {
                            array[k] = entryModeField[j];
                            k = (k + 1);
                        }
                        this.EntryMode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("b4cae4ec-6b66-4ed4-9380-5971b74d4fdc")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ICCResetDataType : IICCResetDataType {
        private byte[] aTRValueField = new byte[0];
        private byte[] cardStatusWordsField = new byte[0];
        private bool aTRValueFieldSpecified = false;
        private bool cardStatusWordsFieldSpecified = false;
        public ICCResetDataType() {
        }
        public ICCResetDataType(ICCResetDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ICCResetDataType))) {
            }
            else {
                this.ATRValue = value.ATRValue;
                this.CardStatusWords = value.CardStatusWords;
                this.ATRValueSpecified = value.ATRValueSpecified;
                this.CardStatusWordsSpecified = value.CardStatusWordsSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] ATRValue {
            get {
                return this.aTRValueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.aTRValueField = new byte[0];
                    this.aTRValueFieldSpecified = false;
                }
                else {
                    this.aTRValueField = value;
                    this.aTRValueFieldSpecified = (this.ATRValueLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
        public byte[] CardStatusWords {
            get {
                return this.cardStatusWordsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.cardStatusWordsField = new byte[0];
                    this.cardStatusWordsFieldSpecified = false;
                }
                else {
                    this.cardStatusWordsField = value;
                    this.cardStatusWordsFieldSpecified = (this.CardStatusWordsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ATRValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.aTRValueFieldSpecified
                            || (this.ATRValueLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.aTRValueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardStatusWordsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardStatusWordsFieldSpecified
                            || (this.CardStatusWordsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardStatusWordsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || (this.ATRValueLength() != 0))
                            || (this.CardStatusWordsLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ICCResetDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ICCResetDataType";
                // END ADDED BY XSD
            }
        }
        public int ATRValueLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.aTRValueField == default(byte[]))) {
                return 0;
            }
            else {
                return this.aTRValueField.Length;
            }
            // END ADDED BY XSD
        }
        public byte ATRValueGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.aTRValueField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.aTRValueField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.aTRValueField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool ATRValueSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.aTRValueField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aTRValueField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.aTRValueField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ATRValueAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.aTRValueField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.aTRValueField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.aTRValueField.Length); i = (i + 1)) {
                        array[i] = aTRValueField[i];
                    }
                    array[i] = value;
                    this.ATRValue = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool ATRValueRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.aTRValueField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.aTRValueField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.aTRValueField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = aTRValueField[i];
                            }
                            for (i = (i + 1); (i < this.aTRValueField.Length); i = (i + 1)) {
                                array[i] = aTRValueField[i];
                            }
                            this.ATRValue = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int ATRValueInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.aTRValueField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.aTRValueField.Length <= index)) {
                        if ((this.ATRValueAddItem(value) == true)) {
                            return this.ATRValueLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.aTRValueField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = aTRValueField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.aTRValueField.Length); j = (j + 1)) {
                            array[k] = aTRValueField[j];
                            k = (k + 1);
                        }
                        this.ATRValue = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int CardStatusWordsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.cardStatusWordsField == default(byte[]))) {
                return 0;
            }
            else {
                return this.cardStatusWordsField.Length;
            }
            // END ADDED BY XSD
        }
        public byte CardStatusWordsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.cardStatusWordsField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.cardStatusWordsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool CardStatusWordsSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.cardStatusWordsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.cardStatusWordsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CardStatusWordsAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.cardStatusWordsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.cardStatusWordsField.Length); i = (i + 1)) {
                        array[i] = cardStatusWordsField[i];
                    }
                    array[i] = value;
                    this.CardStatusWords = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CardStatusWordsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.cardStatusWordsField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.cardStatusWordsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = cardStatusWordsField[i];
                            }
                            for (i = (i + 1); (i < this.cardStatusWordsField.Length); i = (i + 1)) {
                                array[i] = cardStatusWordsField[i];
                            }
                            this.CardStatusWords = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CardStatusWordsInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.cardStatusWordsField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.cardStatusWordsField.Length <= index)) {
                        if ((this.CardStatusWordsAddItem(value) == true)) {
                            return this.CardStatusWordsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.cardStatusWordsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = cardStatusWordsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.cardStatusWordsField.Length); j = (j + 1)) {
                            array[k] = cardStatusWordsField[j];
                            k = (k + 1);
                        }
                        this.CardStatusWords = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("048366b1-0957-4884-9401-069b3d4c1db8")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardReaderPowerOffRequestType : ICardReaderPowerOffRequestType {
        private DisplayOutputType displayOutputField = new DisplayOutputType();
        private int maxWaitingTimeField = default(int);
        private bool displayOutputFieldSpecified = false;
        private bool maxWaitingTimeFieldSpecified = false;
        public CardReaderPowerOffRequestType() {
        }
        public CardReaderPowerOffRequestType(CardReaderPowerOffRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardReaderPowerOffRequestType))) {
            }
            else {
                this.DisplayOutput = value.DisplayOutput;
                this.MaxWaitingTime = value.MaxWaitingTime;
                this.DisplayOutputSpecified = value.DisplayOutputSpecified;
                this.MaxWaitingTimeSpecified = value.MaxWaitingTimeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DisplayOutputType DisplayOutput {
            get {
                return this.displayOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(DisplayOutputType))
                            || false)) {
                    this.displayOutputField = new DisplayOutputType();
                    this.displayOutputFieldSpecified = false;
                }
                else {
                    this.displayOutputField = value;
                    this.displayOutputFieldSpecified = this.DisplayOutput.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxWaitingTime {
            get {
                return this.maxWaitingTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxWaitingTimeField = default(int);
                    this.maxWaitingTimeFieldSpecified = false;
                }
                else {
                    this.maxWaitingTimeField = value;
                    this.maxWaitingTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisplayOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.displayOutputFieldSpecified || this.DisplayOutput.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.displayOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxWaitingTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxWaitingTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxWaitingTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.DisplayOutput != default(DisplayOutputType))
                            && this.DisplayOutputSpecified))
                            || ((this.MaxWaitingTime != default(int))
                            && this.MaxWaitingTimeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardReaderPowerOffRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardReaderPowerOffRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("72d7161d-1f3c-453a-b501-f556cea8564f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CardReaderPowerOffResponseType : ICardReaderPowerOffResponseType {
        private ResponseType responseField = new ResponseType();
        private bool responseFieldSpecified = false;
        public CardReaderPowerOffResponseType() {
        }
        public CardReaderPowerOffResponseType(CardReaderPowerOffResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CardReaderPowerOffResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.ResponseSpecified = value.ResponseSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CardReaderPowerOffResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CardReaderPowerOffResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("b0da79ad-f029-4d01-8bfe-a108311493cb")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CashHandlingDeviceType : ICashHandlingDeviceType {
        private CoinsOrBillsType[] coinsOrBillsField = new CoinsOrBillsType[0];
        private bool cashHandlingOKFlagField = default(bool);
        private string currencyField = default(string);
        private bool coinsOrBillsFieldSpecified = false;
        private bool cashHandlingOKFlagFieldSpecified = false;
        private bool currencyFieldSpecified = false;
        public CashHandlingDeviceType() {
        }
        public CashHandlingDeviceType(CashHandlingDeviceType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CashHandlingDeviceType))) {
            }
            else {
                this.CoinsOrBills = value.CoinsOrBills;
                this.CashHandlingOKFlag = value.CashHandlingOKFlag;
                this.Currency = value.Currency;
                this.CoinsOrBillsSpecified = value.CoinsOrBillsSpecified;
                this.CashHandlingOKFlagSpecified = value.CashHandlingOKFlagSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CoinsOrBills", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CoinsOrBillsType[] CoinsOrBills {
            get {
                return this.coinsOrBillsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CoinsOrBillsType[]))
                            || false)) {
                    this.coinsOrBillsField = new CoinsOrBillsType[0];
                    this.coinsOrBillsFieldSpecified = false;
                }
                else {
                    this.coinsOrBillsField = value;
                    this.coinsOrBillsFieldSpecified = (this.CoinsOrBillsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CashHandlingOKFlag {
            get {
                return this.cashHandlingOKFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.cashHandlingOKFlagField = default(bool);
                    this.cashHandlingOKFlagFieldSpecified = false;
                }
                else {
                    this.cashHandlingOKFlagField = value;
                    this.cashHandlingOKFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CoinsOrBillsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.coinsOrBillsFieldSpecified
                            || (this.CoinsOrBillsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.coinsOrBillsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CashHandlingOKFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cashHandlingOKFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cashHandlingOKFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || (this.CoinsOrBillsLength() != 0))
                            || ((this.CashHandlingOKFlag != default(bool))
                            && this.CashHandlingOKFlagSpecified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CashHandlingDeviceTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CashHandlingDeviceType";
                // END ADDED BY XSD
            }
        }
        public int CoinsOrBillsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.coinsOrBillsField == default(CoinsOrBillsType[]))) {
                return 0;
            }
            else {
                return this.coinsOrBillsField.Length;
            }
            // END ADDED BY XSD
        }
        public CoinsOrBillsType CoinsOrBillsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.coinsOrBillsField == default(CoinsOrBillsType[]))) {
                    return default(CoinsOrBillsType);
                }
                else {
                    if ((0 > index)) {
                        return default(CoinsOrBillsType);
                    }
                    else {
                        if ((this.coinsOrBillsField.Length <= index)) {
                            return default(CoinsOrBillsType);
                        }
                        else {
                            return this.coinsOrBillsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CoinsOrBillsType);
            }
            // END ADDED BY XSD
        }
        public bool CoinsOrBillsSetItem(int index, CoinsOrBillsType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.coinsOrBillsField == default(CoinsOrBillsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.coinsOrBillsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.coinsOrBillsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CoinsOrBillsAddItem(CoinsOrBillsType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.coinsOrBillsField == default(CoinsOrBillsType[]))) {
                    return false;
                }
                else {
                    CoinsOrBillsType[] array = new CoinsOrBillsType[(this.coinsOrBillsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.coinsOrBillsField.Length); i = (i + 1)) {
                        array[i] = coinsOrBillsField[i];
                    }
                    array[i] = value;
                    this.CoinsOrBills = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CoinsOrBillsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.coinsOrBillsField == default(CoinsOrBillsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.coinsOrBillsField.Length <= index)) {
                            return false;
                        }
                        else {
                            CoinsOrBillsType[] array = new CoinsOrBillsType[(this.coinsOrBillsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = coinsOrBillsField[i];
                            }
                            for (i = (i + 1); (i < this.coinsOrBillsField.Length); i = (i + 1)) {
                                array[i] = coinsOrBillsField[i];
                            }
                            this.CoinsOrBills = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CoinsOrBillsInsertItem(int index, CoinsOrBillsType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.coinsOrBillsField == default(CoinsOrBillsType[]))) {
                    return -1;
                }
                else {
                    if ((this.coinsOrBillsField.Length <= index)) {
                        if ((this.CoinsOrBillsAddItem(value) == true)) {
                            return this.CoinsOrBillsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CoinsOrBillsType[] array = new CoinsOrBillsType[(this.coinsOrBillsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = coinsOrBillsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.coinsOrBillsField.Length); j = (j + 1)) {
                            array[k] = coinsOrBillsField[j];
                            k = (k + 1);
                        }
                        this.CoinsOrBills = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("498bf7c7-567b-44ab-8f85-fa41cd434cc0")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CoinsOrBillsType : ICoinsOrBillsType {
        private double unitValueField = default(double);
        private int numberField = default(int);
        private bool unitValueFieldSpecified = false;
        private bool numberFieldSpecified = false;
        public CoinsOrBillsType() {
        }
        public CoinsOrBillsType(CoinsOrBillsType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CoinsOrBillsType))) {
            }
            else {
                this.UnitValue = value.UnitValue;
                this.Number = value.Number;
                this.UnitValueSpecified = value.UnitValueSpecified;
                this.NumberSpecified = value.NumberSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double UnitValue {
            get {
                return this.unitValueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.unitValueField = default(double);
                    this.unitValueFieldSpecified = false;
                }
                else {
                    this.unitValueField = value;
                    this.unitValueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Number {
            get {
                return this.numberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.numberField = default(int);
                    this.numberFieldSpecified = false;
                }
                else {
                    this.numberField = value;
                    this.numberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool UnitValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.unitValueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.unitValueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool NumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.numberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.numberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.UnitValue != default(double))
                            && this.UnitValueSpecified))
                            || ((this.Number != default(int))
                            && this.NumberSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CoinsOrBillsTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CoinsOrBillsType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum CharacterHeightEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        SingleHeight,
        /// <remarks/>
        DoubleHeight,
        /// <remarks/>
        HalfHeight,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum CharacterStyleEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Normal,
        /// <remarks/>
        Bold,
        /// <remarks/>
        Italic,
        /// <remarks/>
        Underlined,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum CharacterWidthEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        SingleWidth,
        /// <remarks/>
        DoubleWidth,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum CheckTypeCodeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Personal,
        /// <remarks/>
        Company,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ColorEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        White,
        /// <remarks/>
        Black,
        /// <remarks/>
        Red,
        /// <remarks/>
        Green,
        /// <remarks/>
        Blue,
        /// <remarks/>
        Yellow,
        /// <remarks/>
        Magenta,
        /// <remarks/>
        Cyan,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("7dc92f6a-ffa3-45bc-a710-1a05aa49d5b0")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class CriteriaOrderType : ICriteriaOrderType {
        private string targetField = default(string);
        private bool targetFieldSpecified = false;
        public CriteriaOrderType() {
        }
        public CriteriaOrderType(CriteriaOrderType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(CriteriaOrderType))) {
            }
            else {
                this.Target = value.Target;
                this.TargetSpecified = value.TargetSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Target {
            get {
                return this.targetField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.targetField = default(string);
                    this.targetFieldSpecified = false;
                }
                else {
                    this.targetField = value;
                    this.targetFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TargetSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.targetFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.targetFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.Target != default(string))
                            && this.TargetSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string CriteriaOrderTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "CriteriaOrderType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum CustomerOrderReqEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Open,
        /// <remarks/>
        Closed,
        /// <remarks/>
        Both,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum DeviceEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        CashierDisplay,
        /// <remarks/>
        CustomerDisplay,
        /// <remarks/>
        CashierInput,
        /// <remarks/>
        CustomerInput,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("f8293961-2886-4a3f-aaad-dd6ea9d473df")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class DiagnosisRequestType : IDiagnosisRequestType {
        private string[] acquirerIDField = new string[0];
        private string pOIIDField = default(string);
        private bool hostDiagnosisFlagField = default(bool);
        private bool acquirerIDFieldSpecified = false;
        private bool pOIIDFieldSpecified = false;
        private bool hostDiagnosisFlagDefaultValue = false;
        private bool hostDiagnosisFlagFieldSpecified = false;
        public DiagnosisRequestType() {
            this.hostDiagnosisFlagField = this.hostDiagnosisFlagDefaultValue;
        }
        public DiagnosisRequestType(DiagnosisRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(DiagnosisRequestType))) {
            }
            else {
                this.AcquirerID = value.AcquirerID;
                this.POIID = value.POIID;
                this.HostDiagnosisFlag = value.HostDiagnosisFlag;
                this.AcquirerIDSpecified = value.AcquirerIDSpecified;
                this.POIIDSpecified = value.POIIDSpecified;
                this.HostDiagnosisFlagSpecified = value.HostDiagnosisFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AcquirerID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AcquirerID {
            get {
                return this.acquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.acquirerIDField = new string[0];
                    this.acquirerIDFieldSpecified = false;
                }
                else {
                    this.acquirerIDField = value;
                    this.acquirerIDFieldSpecified = (this.AcquirerIDLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIID {
            get {
                return this.pOIIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIIDField = default(string);
                    this.pOIIDFieldSpecified = false;
                }
                else {
                    this.pOIIDField = value;
                    this.pOIIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool HostDiagnosisFlag {
            get {
                return this.hostDiagnosisFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.HostDiagnosisFlagDefaultValue)
                            || false)) {
                    this.hostDiagnosisFlagField = this.HostDiagnosisFlagDefaultValue;
                    this.hostDiagnosisFlagFieldSpecified = false;
                }
                else {
                    this.hostDiagnosisFlagField = value;
                    this.hostDiagnosisFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerIDFieldSpecified
                            || (this.AcquirerIDLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool HostDiagnosisFlagDefaultValue {
            get {
                return this.hostDiagnosisFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool HostDiagnosisFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.hostDiagnosisFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.hostDiagnosisFlagFieldSpecified = value;
                if ((this.hostDiagnosisFlagFieldSpecified
                            && (this.hostDiagnosisFlagField == default(bool)))) {
                    this.hostDiagnosisFlagField = this.hostDiagnosisFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || (this.AcquirerIDLength() != 0))
                            || ((this.POIID != default(string))
                            && this.POIIDSpecified))
                            || ((this.HostDiagnosisFlag != default(bool))
                            && this.HostDiagnosisFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string DiagnosisRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "DiagnosisRequestType";
                // END ADDED BY XSD
            }
        }
        public int AcquirerIDLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.acquirerIDField == default(string[]))) {
                return 0;
            }
            else {
                return this.acquirerIDField.Length;
            }
            // END ADDED BY XSD
        }
        public string AcquirerIDGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.acquirerIDField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.acquirerIDField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.acquirerIDField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.acquirerIDField.Length); i = (i + 1)) {
                        array[i] = acquirerIDField[i];
                    }
                    array[i] = value;
                    this.AcquirerID = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.acquirerIDField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = acquirerIDField[i];
                            }
                            for (i = (i + 1); (i < this.acquirerIDField.Length); i = (i + 1)) {
                                array[i] = acquirerIDField[i];
                            }
                            this.AcquirerID = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AcquirerIDInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.acquirerIDField.Length <= index)) {
                        if ((this.AcquirerIDAddItem(value) == true)) {
                            return this.AcquirerIDLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.acquirerIDField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = acquirerIDField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.acquirerIDField.Length); j = (j + 1)) {
                            array[k] = acquirerIDField[j];
                            k = (k + 1);
                        }
                        this.AcquirerID = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("48324ff3-5fcb-4fd5-9e0c-2507a85182a8")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class DiagnosisResponseType : IDiagnosisResponseType {
        private ResponseType responseField = new ResponseType();
        private string[] loggedSaleIDField = new string[0];
        private POIStatusType pOIStatusField = new POIStatusType();
        private HostStatusType[] hostStatusField = new HostStatusType[0];
        private bool responseFieldSpecified = false;
        private bool loggedSaleIDFieldSpecified = false;
        private bool pOIStatusFieldSpecified = false;
        private bool hostStatusFieldSpecified = false;
        public DiagnosisResponseType() {
        }
        public DiagnosisResponseType(DiagnosisResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(DiagnosisResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.LoggedSaleID = value.LoggedSaleID;
                this.POIStatus = value.POIStatus;
                this.HostStatus = value.HostStatus;
                this.ResponseSpecified = value.ResponseSpecified;
                this.LoggedSaleIDSpecified = value.LoggedSaleIDSpecified;
                this.POIStatusSpecified = value.POIStatusSpecified;
                this.HostStatusSpecified = value.HostStatusSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoggedSaleID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] LoggedSaleID {
            get {
                return this.loggedSaleIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.loggedSaleIDField = new string[0];
                    this.loggedSaleIDFieldSpecified = false;
                }
                else {
                    this.loggedSaleIDField = value;
                    this.loggedSaleIDFieldSpecified = (this.LoggedSaleIDLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIStatusType POIStatus {
            get {
                return this.pOIStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIStatusType))
                            || false)) {
                    this.pOIStatusField = new POIStatusType();
                    this.pOIStatusFieldSpecified = false;
                }
                else {
                    this.pOIStatusField = value;
                    this.pOIStatusFieldSpecified = this.POIStatus.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HostStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public HostStatusType[] HostStatus {
            get {
                return this.hostStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(HostStatusType[]))
                            || false)) {
                    this.hostStatusField = new HostStatusType[0];
                    this.hostStatusFieldSpecified = false;
                }
                else {
                    this.hostStatusField = value;
                    this.hostStatusFieldSpecified = (this.HostStatusLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoggedSaleIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loggedSaleIDFieldSpecified
                            || (this.LoggedSaleIDLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loggedSaleIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIStatusFieldSpecified || this.POIStatus.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool HostStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.hostStatusFieldSpecified
                            || (this.HostStatusLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.hostStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.POIStatus != default(POIStatusType))
                            && this.POIStatusSpecified))
                            || (this.LoggedSaleIDLength() != 0))
                            || (this.HostStatusLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string DiagnosisResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "DiagnosisResponseType";
                // END ADDED BY XSD
            }
        }
        public int LoggedSaleIDLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loggedSaleIDField == default(string[]))) {
                return 0;
            }
            else {
                return this.loggedSaleIDField.Length;
            }
            // END ADDED BY XSD
        }
        public string LoggedSaleIDGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loggedSaleIDField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.loggedSaleIDField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.loggedSaleIDField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool LoggedSaleIDSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loggedSaleIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loggedSaleIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loggedSaleIDField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoggedSaleIDAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loggedSaleIDField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.loggedSaleIDField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loggedSaleIDField.Length); i = (i + 1)) {
                        array[i] = loggedSaleIDField[i];
                    }
                    array[i] = value;
                    this.LoggedSaleID = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoggedSaleIDRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loggedSaleIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loggedSaleIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.loggedSaleIDField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loggedSaleIDField[i];
                            }
                            for (i = (i + 1); (i < this.loggedSaleIDField.Length); i = (i + 1)) {
                                array[i] = loggedSaleIDField[i];
                            }
                            this.LoggedSaleID = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoggedSaleIDInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loggedSaleIDField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.loggedSaleIDField.Length <= index)) {
                        if ((this.LoggedSaleIDAddItem(value) == true)) {
                            return this.LoggedSaleIDLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.loggedSaleIDField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loggedSaleIDField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loggedSaleIDField.Length); j = (j + 1)) {
                            array[k] = loggedSaleIDField[j];
                            k = (k + 1);
                        }
                        this.LoggedSaleID = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int HostStatusLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.hostStatusField == default(HostStatusType[]))) {
                return 0;
            }
            else {
                return this.hostStatusField.Length;
            }
            // END ADDED BY XSD
        }
        public HostStatusType HostStatusGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.hostStatusField == default(HostStatusType[]))) {
                    return default(HostStatusType);
                }
                else {
                    if ((0 > index)) {
                        return default(HostStatusType);
                    }
                    else {
                        if ((this.hostStatusField.Length <= index)) {
                            return default(HostStatusType);
                        }
                        else {
                            return this.hostStatusField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(HostStatusType);
            }
            // END ADDED BY XSD
        }
        public bool HostStatusSetItem(int index, HostStatusType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.hostStatusField == default(HostStatusType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.hostStatusField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.hostStatusField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool HostStatusAddItem(HostStatusType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.hostStatusField == default(HostStatusType[]))) {
                    return false;
                }
                else {
                    HostStatusType[] array = new HostStatusType[(this.hostStatusField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.hostStatusField.Length); i = (i + 1)) {
                        array[i] = hostStatusField[i];
                    }
                    array[i] = value;
                    this.HostStatus = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool HostStatusRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.hostStatusField == default(HostStatusType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.hostStatusField.Length <= index)) {
                            return false;
                        }
                        else {
                            HostStatusType[] array = new HostStatusType[(this.hostStatusField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = hostStatusField[i];
                            }
                            for (i = (i + 1); (i < this.hostStatusField.Length); i = (i + 1)) {
                                array[i] = hostStatusField[i];
                            }
                            this.HostStatus = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int HostStatusInsertItem(int index, HostStatusType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.hostStatusField == default(HostStatusType[]))) {
                    return -1;
                }
                else {
                    if ((this.hostStatusField.Length <= index)) {
                        if ((this.HostStatusAddItem(value) == true)) {
                            return this.HostStatusLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        HostStatusType[] array = new HostStatusType[(this.hostStatusField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = hostStatusField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.hostStatusField.Length); j = (j + 1)) {
                            array[k] = hostStatusField[j];
                            k = (k + 1);
                        }
                        this.HostStatus = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("9c4993a7-7fc9-49c9-b863-d5329717efcf")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class POIStatusType : IPOIStatusType {
        private CashHandlingDeviceType[] cashHandlingDeviceField = new CashHandlingDeviceType[0];
        private string globalStatusField = default(string);
        private bool securityOKFlagField = default(bool);
        private bool securityOKFlagFieldSpecified = default(bool);
        private bool pEDOKFlagField = default(bool);
        private bool pEDOKFlagFieldSpecified = default(bool);
        private bool cardReaderOKFlagField = default(bool);
        private bool cardReaderOKFlagFieldSpecified = default(bool);
        private string printerStatusField = default(string);
        private bool communicationOKFlagField = default(bool);
        private bool communicationOKFlagFieldSpecified = default(bool);
        private bool fraudPreventionFlagField = default(bool);
        private bool fraudPreventionFlagFieldSpecified = default(bool);
        private bool cashHandlingDeviceFieldSpecified = false;
        private bool globalStatusFieldSpecified = false;
        private bool printerStatusFieldSpecified = false;
        public POIStatusType() {
        }
        public POIStatusType(POIStatusType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(POIStatusType))) {
            }
            else {
                this.CashHandlingDevice = value.CashHandlingDevice;
                this.GlobalStatus = value.GlobalStatus;
                this.SecurityOKFlag = value.SecurityOKFlag;
                this.SecurityOKFlagSpecified = value.SecurityOKFlagSpecified;
                this.PEDOKFlag = value.PEDOKFlag;
                this.PEDOKFlagSpecified = value.PEDOKFlagSpecified;
                this.CardReaderOKFlag = value.CardReaderOKFlag;
                this.CardReaderOKFlagSpecified = value.CardReaderOKFlagSpecified;
                this.PrinterStatus = value.PrinterStatus;
                this.CommunicationOKFlag = value.CommunicationOKFlag;
                this.CommunicationOKFlagSpecified = value.CommunicationOKFlagSpecified;
                this.FraudPreventionFlag = value.FraudPreventionFlag;
                this.FraudPreventionFlagSpecified = value.FraudPreventionFlagSpecified;
                this.CashHandlingDeviceSpecified = value.CashHandlingDeviceSpecified;
                this.GlobalStatusSpecified = value.GlobalStatusSpecified;
                this.PrinterStatusSpecified = value.PrinterStatusSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CashHandlingDevice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CashHandlingDeviceType[] CashHandlingDevice {
            get {
                return this.cashHandlingDeviceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CashHandlingDeviceType[]))
                            || false)) {
                    this.cashHandlingDeviceField = new CashHandlingDeviceType[0];
                    this.cashHandlingDeviceFieldSpecified = false;
                }
                else {
                    this.cashHandlingDeviceField = value;
                    this.cashHandlingDeviceFieldSpecified = (this.CashHandlingDeviceLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string GlobalStatus {
            get {
                return this.globalStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.globalStatusField = default(string);
                    this.globalStatusFieldSpecified = false;
                }
                else {
                    this.globalStatusField = value;
                    this.globalStatusFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SecurityOKFlag {
            get {
                return this.securityOKFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.securityOKFlagField = default(bool);
                    this.securityOKFlagFieldSpecified = false;
                }
                else {
                    this.securityOKFlagField = value;
                    this.securityOKFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecurityOKFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.securityOKFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.securityOKFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PEDOKFlag {
            get {
                return this.pEDOKFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.pEDOKFlagField = default(bool);
                    this.pEDOKFlagFieldSpecified = false;
                }
                else {
                    this.pEDOKFlagField = value;
                    this.pEDOKFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PEDOKFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pEDOKFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pEDOKFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CardReaderOKFlag {
            get {
                return this.cardReaderOKFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.cardReaderOKFlagField = default(bool);
                    this.cardReaderOKFlagFieldSpecified = false;
                }
                else {
                    this.cardReaderOKFlagField = value;
                    this.cardReaderOKFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CardReaderOKFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardReaderOKFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardReaderOKFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PrinterStatus {
            get {
                return this.printerStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.printerStatusField = default(string);
                    this.printerStatusFieldSpecified = false;
                }
                else {
                    this.printerStatusField = value;
                    this.printerStatusFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CommunicationOKFlag {
            get {
                return this.communicationOKFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.communicationOKFlagField = default(bool);
                    this.communicationOKFlagFieldSpecified = false;
                }
                else {
                    this.communicationOKFlagField = value;
                    this.communicationOKFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommunicationOKFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.communicationOKFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.communicationOKFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool FraudPreventionFlag {
            get {
                return this.fraudPreventionFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.fraudPreventionFlagField = default(bool);
                    this.fraudPreventionFlagFieldSpecified = false;
                }
                else {
                    this.fraudPreventionFlagField = value;
                    this.fraudPreventionFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FraudPreventionFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.fraudPreventionFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.fraudPreventionFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CashHandlingDeviceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cashHandlingDeviceFieldSpecified
                            || (this.CashHandlingDeviceLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cashHandlingDeviceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool GlobalStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.globalStatusFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.globalStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PrinterStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.printerStatusFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.printerStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((false
                            || (this.CashHandlingDeviceLength() != 0))
                            || ((this.GlobalStatus != default(string))
                            && this.GlobalStatusSpecified))
                            || ((this.SecurityOKFlag != default(bool))
                            && this.SecurityOKFlagSpecified))
                            || ((this.PEDOKFlag != default(bool))
                            && this.PEDOKFlagSpecified))
                            || ((this.CardReaderOKFlag != default(bool))
                            && this.CardReaderOKFlagSpecified))
                            || ((this.PrinterStatus != default(string))
                            && this.PrinterStatusSpecified))
                            || ((this.CommunicationOKFlag != default(bool))
                            && this.CommunicationOKFlagSpecified))
                            || ((this.FraudPreventionFlag != default(bool))
                            && this.FraudPreventionFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string POIStatusTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "POIStatusType";
                // END ADDED BY XSD
            }
        }
        public int CashHandlingDeviceLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.cashHandlingDeviceField == default(CashHandlingDeviceType[]))) {
                return 0;
            }
            else {
                return this.cashHandlingDeviceField.Length;
            }
            // END ADDED BY XSD
        }
        public CashHandlingDeviceType CashHandlingDeviceGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.cashHandlingDeviceField == default(CashHandlingDeviceType[]))) {
                    return default(CashHandlingDeviceType);
                }
                else {
                    if ((0 > index)) {
                        return default(CashHandlingDeviceType);
                    }
                    else {
                        if ((this.cashHandlingDeviceField.Length <= index)) {
                            return default(CashHandlingDeviceType);
                        }
                        else {
                            return this.cashHandlingDeviceField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CashHandlingDeviceType);
            }
            // END ADDED BY XSD
        }
        public bool CashHandlingDeviceSetItem(int index, CashHandlingDeviceType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.cashHandlingDeviceField == default(CashHandlingDeviceType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.cashHandlingDeviceField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.cashHandlingDeviceField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CashHandlingDeviceAddItem(CashHandlingDeviceType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.cashHandlingDeviceField == default(CashHandlingDeviceType[]))) {
                    return false;
                }
                else {
                    CashHandlingDeviceType[] array = new CashHandlingDeviceType[(this.cashHandlingDeviceField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.cashHandlingDeviceField.Length); i = (i + 1)) {
                        array[i] = cashHandlingDeviceField[i];
                    }
                    array[i] = value;
                    this.CashHandlingDevice = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CashHandlingDeviceRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.cashHandlingDeviceField == default(CashHandlingDeviceType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.cashHandlingDeviceField.Length <= index)) {
                            return false;
                        }
                        else {
                            CashHandlingDeviceType[] array = new CashHandlingDeviceType[(this.cashHandlingDeviceField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = cashHandlingDeviceField[i];
                            }
                            for (i = (i + 1); (i < this.cashHandlingDeviceField.Length); i = (i + 1)) {
                                array[i] = cashHandlingDeviceField[i];
                            }
                            this.CashHandlingDevice = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CashHandlingDeviceInsertItem(int index, CashHandlingDeviceType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.cashHandlingDeviceField == default(CashHandlingDeviceType[]))) {
                    return -1;
                }
                else {
                    if ((this.cashHandlingDeviceField.Length <= index)) {
                        if ((this.CashHandlingDeviceAddItem(value) == true)) {
                            return this.CashHandlingDeviceLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CashHandlingDeviceType[] array = new CashHandlingDeviceType[(this.cashHandlingDeviceField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = cashHandlingDeviceField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.cashHandlingDeviceField.Length); j = (j + 1)) {
                            array[k] = cashHandlingDeviceField[j];
                            k = (k + 1);
                        }
                        this.CashHandlingDevice = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("f357dc2f-5f73-465b-aeac-7b85bdef4f0f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class HostStatusType : IHostStatusType {
        private string acquirerIDField = default(string);
        private bool isReachableFlagField = default(bool);
        private bool acquirerIDFieldSpecified = false;
        private bool isReachableFlagDefaultValue = true;
        private bool isReachableFlagFieldSpecified = false;
        public HostStatusType() {
            this.isReachableFlagField = this.isReachableFlagDefaultValue;
        }
        public HostStatusType(HostStatusType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(HostStatusType))) {
            }
            else {
                this.AcquirerID = value.AcquirerID;
                this.IsReachableFlag = value.IsReachableFlag;
                this.AcquirerIDSpecified = value.AcquirerIDSpecified;
                this.IsReachableFlagSpecified = value.IsReachableFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AcquirerID {
            get {
                return this.acquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.acquirerIDField = default(string);
                    this.acquirerIDFieldSpecified = false;
                }
                else {
                    this.acquirerIDField = value;
                    this.acquirerIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsReachableFlag {
            get {
                return this.isReachableFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.IsReachableFlagDefaultValue)
                            || false)) {
                    this.isReachableFlagField = this.IsReachableFlagDefaultValue;
                    this.isReachableFlagFieldSpecified = false;
                }
                else {
                    this.isReachableFlagField = value;
                    this.isReachableFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IsReachableFlagDefaultValue {
            get {
                return this.isReachableFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IsReachableFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.isReachableFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.isReachableFlagFieldSpecified = value;
                if ((this.isReachableFlagFieldSpecified
                            && (this.isReachableFlagField == default(bool)))) {
                    this.isReachableFlagField = this.isReachableFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.AcquirerID != default(string))
                            && this.AcquirerIDSpecified))
                            || ((this.IsReachableFlag != default(bool))
                            && this.IsReachableFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string HostStatusTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "HostStatusType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum DocumentQualifierEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        SaleReceipt,
        /// <remarks/>
        CashierReceipt,
        /// <remarks/>
        CustomerReceipt,
        /// <remarks/>
        Document,
        /// <remarks/>
        Voucher,
        /// <remarks/>
        Journal,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("23b8de19-d912-4037-b223-c2a4adaff2ab")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class EnableServiceRequestType : IEnableServiceRequestType {
        private string servicesEnabledField = default(string);
        private DisplayOutputType displayOutputField = new DisplayOutputType();
        private string transactionActionField = default(string);
        private bool servicesEnabledFieldSpecified = false;
        private bool displayOutputFieldSpecified = false;
        private bool transactionActionFieldSpecified = false;
        public EnableServiceRequestType() {
        }
        public EnableServiceRequestType(EnableServiceRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(EnableServiceRequestType))) {
            }
            else {
                this.ServicesEnabled = value.ServicesEnabled;
                this.DisplayOutput = value.DisplayOutput;
                this.TransactionAction = value.TransactionAction;
                this.ServicesEnabledSpecified = value.ServicesEnabledSpecified;
                this.DisplayOutputSpecified = value.DisplayOutputSpecified;
                this.TransactionActionSpecified = value.TransactionActionSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServicesEnabled {
            get {
                return this.servicesEnabledField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.servicesEnabledField = default(string);
                    this.servicesEnabledFieldSpecified = false;
                }
                else {
                    this.servicesEnabledField = value;
                    this.servicesEnabledFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DisplayOutputType DisplayOutput {
            get {
                return this.displayOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(DisplayOutputType))
                            || false)) {
                    this.displayOutputField = new DisplayOutputType();
                    this.displayOutputFieldSpecified = false;
                }
                else {
                    this.displayOutputField = value;
                    this.displayOutputFieldSpecified = this.DisplayOutput.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TransactionAction {
            get {
                return this.transactionActionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.transactionActionField = default(string);
                    this.transactionActionFieldSpecified = false;
                }
                else {
                    this.transactionActionField = value;
                    this.transactionActionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ServicesEnabledSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.servicesEnabledFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.servicesEnabledFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisplayOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.displayOutputFieldSpecified || this.DisplayOutput.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.displayOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionActionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionActionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionActionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.DisplayOutput != default(DisplayOutputType))
                            && this.DisplayOutputSpecified))
                            || ((this.ServicesEnabled != default(string))
                            && this.ServicesEnabledSpecified))
                            || ((this.TransactionAction != default(string))
                            && this.TransactionActionSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string EnableServiceRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "EnableServiceRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("8eace357-d741-446e-a1ad-be70b3cbe95c")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class EnableServiceResponseType : IEnableServiceResponseType {
        private ResponseType responseField = new ResponseType();
        private bool responseFieldSpecified = false;
        public EnableServiceResponseType() {
        }
        public EnableServiceResponseType(EnableServiceResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(EnableServiceResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.ResponseSpecified = value.ResponseSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string EnableServiceResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "EnableServiceResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum EntryModeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        RFID,
        /// <remarks/>
        Keyed,
        /// <remarks/>
        Manual,
        /// <remarks/>
        File,
        /// <remarks/>
        Scanned,
        /// <remarks/>
        MagStripe,
        /// <remarks/>
        ICC,
        /// <remarks/>
        SynchronousICC,
        /// <remarks/>
        Tapped,
        /// <remarks/>
        Contactless,
        /// <remarks/>
        Mobile,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ErrorConditionEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Aborted,
        /// <remarks/>
        Busy,
        /// <remarks/>
        Cancel,
        /// <remarks/>
        DeviceOut,
        /// <remarks/>
        InsertedCard,
        /// <remarks/>
        InProgress,
        /// <remarks/>
        LoggedOut,
        /// <remarks/>
        MessageFormat,
        /// <remarks/>
        NotAllowed,
        /// <remarks/>
        NotFound,
        /// <remarks/>
        PaymentRestriction,
        /// <remarks/>
        Refusal,
        /// <remarks/>
        UnavailableDevice,
        /// <remarks/>
        UnavailableService,
        /// <remarks/>
        InvalidCard,
        /// <remarks/>
        UnreachableHost,
        /// <remarks/>
        WrongPIN,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3a26b979-c6e7-4b85-93a1-7dd5b089a2fc")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class EventNotificationType : IEventNotificationType {
        private string eventDetailsField = default(string);
        private byte[] rejectedMessageField = new byte[0];
        private DisplayOutputType displayOutputField = new DisplayOutputType();
        private string timeStampField = default(string);
        private string eventToNotifyField = default(string);
        private bool maintenanceRequiredFlagField = default(bool);
        private string customerLanguageField = default(string);
        private bool eventDetailsFieldSpecified = false;
        private bool rejectedMessageFieldSpecified = false;
        private bool displayOutputFieldSpecified = false;
        private bool timeStampFieldSpecified = false;
        private bool eventToNotifyFieldSpecified = false;
        private bool maintenanceRequiredFlagDefaultValue = false;
        private bool maintenanceRequiredFlagFieldSpecified = false;
        private bool customerLanguageFieldSpecified = false;
        public EventNotificationType() {
            this.maintenanceRequiredFlagField = this.maintenanceRequiredFlagDefaultValue;
        }
        public EventNotificationType(EventNotificationType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(EventNotificationType))) {
            }
            else {
                this.EventDetails = value.EventDetails;
                this.RejectedMessage = value.RejectedMessage;
                this.DisplayOutput = value.DisplayOutput;
                this.TimeStamp = value.TimeStamp;
                this.EventToNotify = value.EventToNotify;
                this.MaintenanceRequiredFlag = value.MaintenanceRequiredFlag;
                this.CustomerLanguage = value.CustomerLanguage;
                this.EventDetailsSpecified = value.EventDetailsSpecified;
                this.RejectedMessageSpecified = value.RejectedMessageSpecified;
                this.DisplayOutputSpecified = value.DisplayOutputSpecified;
                this.TimeStampSpecified = value.TimeStampSpecified;
                this.EventToNotifySpecified = value.EventToNotifySpecified;
                this.MaintenanceRequiredFlagSpecified = value.MaintenanceRequiredFlagSpecified;
                this.CustomerLanguageSpecified = value.CustomerLanguageSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventDetails {
            get {
                return this.eventDetailsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.eventDetailsField = default(string);
                    this.eventDetailsFieldSpecified = false;
                }
                else {
                    this.eventDetailsField = value;
                    this.eventDetailsFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] RejectedMessage {
            get {
                return this.rejectedMessageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.rejectedMessageField = new byte[0];
                    this.rejectedMessageFieldSpecified = false;
                }
                else {
                    this.rejectedMessageField = value;
                    this.rejectedMessageFieldSpecified = (this.RejectedMessageLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DisplayOutputType DisplayOutput {
            get {
                return this.displayOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(DisplayOutputType))
                            || false)) {
                    this.displayOutputField = new DisplayOutputType();
                    this.displayOutputFieldSpecified = false;
                }
                else {
                    this.displayOutputField = value;
                    this.displayOutputFieldSpecified = this.DisplayOutput.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.timeStampField = default(string);
                    this.timeStampFieldSpecified = false;
                }
                else {
                    this.timeStampField = value;
                    this.timeStampFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EventToNotify {
            get {
                return this.eventToNotifyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.eventToNotifyField = default(string);
                    this.eventToNotifyFieldSpecified = false;
                }
                else {
                    this.eventToNotifyField = value;
                    this.eventToNotifyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool MaintenanceRequiredFlag {
            get {
                return this.maintenanceRequiredFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.MaintenanceRequiredFlagDefaultValue)
                            || false)) {
                    this.maintenanceRequiredFlagField = this.MaintenanceRequiredFlagDefaultValue;
                    this.maintenanceRequiredFlagFieldSpecified = false;
                }
                else {
                    this.maintenanceRequiredFlagField = value;
                    this.maintenanceRequiredFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerLanguage {
            get {
                return this.customerLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerLanguageField = default(string);
                    this.customerLanguageFieldSpecified = false;
                }
                else {
                    this.customerLanguageField = value;
                    this.customerLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EventDetailsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.eventDetailsFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.eventDetailsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RejectedMessageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.rejectedMessageFieldSpecified
                            || (this.RejectedMessageLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.rejectedMessageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisplayOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.displayOutputFieldSpecified || this.DisplayOutput.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.displayOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TimeStampSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.timeStampFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.timeStampFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EventToNotifySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.eventToNotifyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.eventToNotifyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaintenanceRequiredFlagDefaultValue {
            get {
                return this.maintenanceRequiredFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaintenanceRequiredFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maintenanceRequiredFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maintenanceRequiredFlagFieldSpecified = value;
                if ((this.maintenanceRequiredFlagFieldSpecified
                            && (this.maintenanceRequiredFlagField == default(bool)))) {
                    this.maintenanceRequiredFlagField = this.maintenanceRequiredFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.DisplayOutput != default(DisplayOutputType))
                            && this.DisplayOutputSpecified))
                            || (this.RejectedMessageLength() != 0))
                            || ((this.EventDetails != default(string))
                            && this.EventDetailsSpecified))
                            || ((this.TimeStamp != default(string))
                            && this.TimeStampSpecified))
                            || ((this.EventToNotify != default(string))
                            && this.EventToNotifySpecified))
                            || ((this.MaintenanceRequiredFlag != default(bool))
                            && this.MaintenanceRequiredFlagSpecified))
                            || ((this.CustomerLanguage != default(string))
                            && this.CustomerLanguageSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string EventNotificationTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "EventNotificationType";
                // END ADDED BY XSD
            }
        }
        public int RejectedMessageLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.rejectedMessageField == default(byte[]))) {
                return 0;
            }
            else {
                return this.rejectedMessageField.Length;
            }
            // END ADDED BY XSD
        }
        public byte RejectedMessageGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.rejectedMessageField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.rejectedMessageField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.rejectedMessageField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool RejectedMessageSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.rejectedMessageField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.rejectedMessageField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.rejectedMessageField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool RejectedMessageAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.rejectedMessageField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.rejectedMessageField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.rejectedMessageField.Length); i = (i + 1)) {
                        array[i] = rejectedMessageField[i];
                    }
                    array[i] = value;
                    this.RejectedMessage = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool RejectedMessageRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.rejectedMessageField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.rejectedMessageField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.rejectedMessageField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = rejectedMessageField[i];
                            }
                            for (i = (i + 1); (i < this.rejectedMessageField.Length); i = (i + 1)) {
                                array[i] = rejectedMessageField[i];
                            }
                            this.RejectedMessage = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int RejectedMessageInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.rejectedMessageField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.rejectedMessageField.Length <= index)) {
                        if ((this.RejectedMessageAddItem(value) == true)) {
                            return this.RejectedMessageLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.rejectedMessageField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = rejectedMessageField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.rejectedMessageField.Length); j = (j + 1)) {
                            array[k] = rejectedMessageField[j];
                            k = (k + 1);
                        }
                        this.RejectedMessage = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum EventToNotifyEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        BeginMaintenance,
        /// <remarks/>
        EndMaintenance,
        /// <remarks/>
        Shutdown,
        /// <remarks/>
        Initialised,
        /// <remarks/>
        OutOfOrder,
        /// <remarks/>
        Completed,
        /// <remarks/>
        Abort,
        /// <remarks/>
        SaleWakeUp,
        /// <remarks/>
        SaleAdmin,
        /// <remarks/>
        CustomerLanguage,
        /// <remarks/>
        KeyPressed,
        /// <remarks/>
        SecurityAlarm,
        /// <remarks/>
        StopAssistance,
        /// <remarks/>
        CardInserted,
        /// <remarks/>
        CardRemoved,
        /// <remarks/>
        Reject,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ForceEntryModeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        RFID,
        /// <remarks/>
        Keyed,
        /// <remarks/>
        Manual,
        /// <remarks/>
        File,
        /// <remarks/>
        Scanned,
        /// <remarks/>
        MagStripe,
        /// <remarks/>
        ICC,
        /// <remarks/>
        SynchronousICC,
        /// <remarks/>
        Tapped,
        /// <remarks/>
        Contactless,
        /// <remarks/>
        CheckReader,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum GenericProfileEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Basic,
        /// <remarks/>
        Standard,
        /// <remarks/>
        Extended,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ef606e41-77f0-4681-a419-4e5701c7d5f4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class GetTotalsRequestType : IGetTotalsRequestType {
        private string totalDetailsField = default(string);
        private TotalFilterType totalFilterField = new TotalFilterType();
        private bool totalDetailsFieldSpecified = false;
        private bool totalFilterFieldSpecified = false;
        public GetTotalsRequestType() {
        }
        public GetTotalsRequestType(GetTotalsRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(GetTotalsRequestType))) {
            }
            else {
                this.TotalDetails = value.TotalDetails;
                this.TotalFilter = value.TotalFilter;
                this.TotalDetailsSpecified = value.TotalDetailsSpecified;
                this.TotalFilterSpecified = value.TotalFilterSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TotalDetails {
            get {
                return this.totalDetailsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.totalDetailsField = default(string);
                    this.totalDetailsFieldSpecified = false;
                }
                else {
                    this.totalDetailsField = value;
                    this.totalDetailsFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TotalFilterType TotalFilter {
            get {
                return this.totalFilterField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TotalFilterType))
                            || false)) {
                    this.totalFilterField = new TotalFilterType();
                    this.totalFilterFieldSpecified = false;
                }
                else {
                    this.totalFilterField = value;
                    this.totalFilterFieldSpecified = this.TotalFilter.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TotalDetailsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalDetailsFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalDetailsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TotalFilterSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalFilterFieldSpecified || this.TotalFilter.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalFilterFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.TotalFilter != default(TotalFilterType))
                            && this.TotalFilterSpecified))
                            || ((this.TotalDetails != default(string))
                            && this.TotalDetailsSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string GetTotalsRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "GetTotalsRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("6ed2db4e-694d-4b95-8da5-6e7669d4c720")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TotalFilterType : ITotalFilterType {
        private string pOIIDField = default(string);
        private string saleIDField = default(string);
        private string operatorIDField = default(string);
        private string shiftNumberField = default(string);
        private string totalsGroupIDField = default(string);
        private bool pOIIDFieldSpecified = false;
        private bool saleIDFieldSpecified = false;
        private bool operatorIDFieldSpecified = false;
        private bool shiftNumberFieldSpecified = false;
        private bool totalsGroupIDFieldSpecified = false;
        public TotalFilterType() {
        }
        public TotalFilterType(TotalFilterType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TotalFilterType))) {
            }
            else {
                this.POIID = value.POIID;
                this.SaleID = value.SaleID;
                this.OperatorID = value.OperatorID;
                this.ShiftNumber = value.ShiftNumber;
                this.TotalsGroupID = value.TotalsGroupID;
                this.POIIDSpecified = value.POIIDSpecified;
                this.SaleIDSpecified = value.SaleIDSpecified;
                this.OperatorIDSpecified = value.OperatorIDSpecified;
                this.ShiftNumberSpecified = value.ShiftNumberSpecified;
                this.TotalsGroupIDSpecified = value.TotalsGroupIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIID {
            get {
                return this.pOIIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIIDField = default(string);
                    this.pOIIDFieldSpecified = false;
                }
                else {
                    this.pOIIDField = value;
                    this.pOIIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleID {
            get {
                return this.saleIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleIDField = default(string);
                    this.saleIDFieldSpecified = false;
                }
                else {
                    this.saleIDField = value;
                    this.saleIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OperatorID {
            get {
                return this.operatorIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.operatorIDField = default(string);
                    this.operatorIDFieldSpecified = false;
                }
                else {
                    this.operatorIDField = value;
                    this.operatorIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShiftNumber {
            get {
                return this.shiftNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.shiftNumberField = default(string);
                    this.shiftNumberFieldSpecified = false;
                }
                else {
                    this.shiftNumberField = value;
                    this.shiftNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TotalsGroupID {
            get {
                return this.totalsGroupIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.totalsGroupIDField = default(string);
                    this.totalsGroupIDFieldSpecified = false;
                }
                else {
                    this.totalsGroupIDField = value;
                    this.totalsGroupIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OperatorIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.operatorIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.operatorIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ShiftNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.shiftNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.shiftNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TotalsGroupIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalsGroupIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalsGroupIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.POIID != default(string))
                            && this.POIIDSpecified))
                            || ((this.SaleID != default(string))
                            && this.SaleIDSpecified))
                            || ((this.OperatorID != default(string))
                            && this.OperatorIDSpecified))
                            || ((this.ShiftNumber != default(string))
                            && this.ShiftNumberSpecified))
                            || ((this.TotalsGroupID != default(string))
                            && this.TotalsGroupIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TotalFilterTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TotalFilterType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("145a1e8b-6110-4f74-b7fd-43f115d4d994")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class GetTotalsResponseType : IGetTotalsResponseType {
        private ResponseType responseField = new ResponseType();
        private TransactionTotalsType[] transactionTotalsField = new TransactionTotalsType[0];
        private string pOIReconciliationIDField = default(string);
        private bool responseFieldSpecified = false;
        private bool transactionTotalsFieldSpecified = false;
        private bool pOIReconciliationIDFieldSpecified = false;
        public GetTotalsResponseType() {
        }
        public GetTotalsResponseType(GetTotalsResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(GetTotalsResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.TransactionTotals = value.TransactionTotals;
                this.POIReconciliationID = value.POIReconciliationID;
                this.ResponseSpecified = value.ResponseSpecified;
                this.TransactionTotalsSpecified = value.TransactionTotalsSpecified;
                this.POIReconciliationIDSpecified = value.POIReconciliationIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TransactionTotals", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionTotalsType[] TransactionTotals {
            get {
                return this.transactionTotalsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(TransactionTotalsType[]))
                            || false)) {
                    this.transactionTotalsField = new TransactionTotalsType[0];
                    this.transactionTotalsFieldSpecified = false;
                }
                else {
                    this.transactionTotalsField = value;
                    this.transactionTotalsFieldSpecified = (this.TransactionTotalsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIReconciliationID {
            get {
                return this.pOIReconciliationIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIReconciliationIDField = default(string);
                    this.pOIReconciliationIDFieldSpecified = false;
                }
                else {
                    this.pOIReconciliationIDField = value;
                    this.pOIReconciliationIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionTotalsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionTotalsFieldSpecified
                            || (this.TransactionTotalsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionTotalsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIReconciliationIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIReconciliationIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIReconciliationIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || (this.TransactionTotalsLength() != 0))
                            || ((this.POIReconciliationID != default(string))
                            && this.POIReconciliationIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string GetTotalsResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "GetTotalsResponseType";
                // END ADDED BY XSD
            }
        }
        public int TransactionTotalsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                return 0;
            }
            else {
                return this.transactionTotalsField.Length;
            }
            // END ADDED BY XSD
        }
        public TransactionTotalsType TransactionTotalsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return default(TransactionTotalsType);
                }
                else {
                    if ((0 > index)) {
                        return default(TransactionTotalsType);
                    }
                    else {
                        if ((this.transactionTotalsField.Length <= index)) {
                            return default(TransactionTotalsType);
                        }
                        else {
                            return this.transactionTotalsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(TransactionTotalsType);
            }
            // END ADDED BY XSD
        }
        public bool TransactionTotalsSetItem(int index, TransactionTotalsType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.transactionTotalsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionTotalsAddItem(TransactionTotalsType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return false;
                }
                else {
                    TransactionTotalsType[] array = new TransactionTotalsType[(this.transactionTotalsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.transactionTotalsField.Length); i = (i + 1)) {
                        array[i] = transactionTotalsField[i];
                    }
                    array[i] = value;
                    this.TransactionTotals = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionTotalsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            TransactionTotalsType[] array = new TransactionTotalsType[(this.transactionTotalsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = transactionTotalsField[i];
                            }
                            for (i = (i + 1); (i < this.transactionTotalsField.Length); i = (i + 1)) {
                                array[i] = transactionTotalsField[i];
                            }
                            this.TransactionTotals = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int TransactionTotalsInsertItem(int index, TransactionTotalsType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return -1;
                }
                else {
                    if ((this.transactionTotalsField.Length <= index)) {
                        if ((this.TransactionTotalsAddItem(value) == true)) {
                            return this.TransactionTotalsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        TransactionTotalsType[] array = new TransactionTotalsType[(this.transactionTotalsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = transactionTotalsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.transactionTotalsField.Length); j = (j + 1)) {
                            array[k] = transactionTotalsField[j];
                            k = (k + 1);
                        }
                        this.TransactionTotals = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("438a7731-62d4-4b8c-bed7-7c93eca0d69e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionTotalsType : ITransactionTotalsType {
        private PaymentTotalsType[] paymentTotalsField = new PaymentTotalsType[0];
        private LoyaltyTotalsType[] loyaltyTotalsField = new LoyaltyTotalsType[0];
        private string paymentInstrumentTypeField = default(string);
        private string acquirerIDField = default(string);
        private string errorConditionField = default(string);
        private string hostReconciliationIDField = default(string);
        private string cardBrandField = default(string);
        private string pOIIDField = default(string);
        private string saleIDField = default(string);
        private string operatorIDField = default(string);
        private string shiftNumberField = default(string);
        private string totalsGroupIDField = default(string);
        private string paymentCurrencyField = default(string);
        private string loyaltyUnitField = default(string);
        private string loyaltyCurrencyField = default(string);
        private bool paymentTotalsFieldSpecified = false;
        private bool loyaltyTotalsFieldSpecified = false;
        private bool paymentInstrumentTypeFieldSpecified = false;
        private bool acquirerIDFieldSpecified = false;
        private bool errorConditionFieldSpecified = false;
        private bool hostReconciliationIDFieldSpecified = false;
        private bool cardBrandFieldSpecified = false;
        private bool pOIIDFieldSpecified = false;
        private bool saleIDFieldSpecified = false;
        private bool operatorIDFieldSpecified = false;
        private bool shiftNumberFieldSpecified = false;
        private bool totalsGroupIDFieldSpecified = false;
        private bool paymentCurrencyFieldSpecified = false;
        private string loyaltyUnitDefaultValue = "Point";
        private bool loyaltyUnitFieldSpecified = false;
        private bool loyaltyCurrencyFieldSpecified = false;
        public TransactionTotalsType() {
            this.loyaltyUnitField = this.loyaltyUnitDefaultValue;
        }
        public TransactionTotalsType(TransactionTotalsType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionTotalsType))) {
            }
            else {
                this.PaymentTotals = value.PaymentTotals;
                this.LoyaltyTotals = value.LoyaltyTotals;
                this.PaymentInstrumentType = value.PaymentInstrumentType;
                this.AcquirerID = value.AcquirerID;
                this.ErrorCondition = value.ErrorCondition;
                this.HostReconciliationID = value.HostReconciliationID;
                this.CardBrand = value.CardBrand;
                this.POIID = value.POIID;
                this.SaleID = value.SaleID;
                this.OperatorID = value.OperatorID;
                this.ShiftNumber = value.ShiftNumber;
                this.TotalsGroupID = value.TotalsGroupID;
                this.PaymentCurrency = value.PaymentCurrency;
                this.LoyaltyUnit = value.LoyaltyUnit;
                this.LoyaltyCurrency = value.LoyaltyCurrency;
                this.PaymentTotalsSpecified = value.PaymentTotalsSpecified;
                this.LoyaltyTotalsSpecified = value.LoyaltyTotalsSpecified;
                this.PaymentInstrumentTypeSpecified = value.PaymentInstrumentTypeSpecified;
                this.AcquirerIDSpecified = value.AcquirerIDSpecified;
                this.ErrorConditionSpecified = value.ErrorConditionSpecified;
                this.HostReconciliationIDSpecified = value.HostReconciliationIDSpecified;
                this.CardBrandSpecified = value.CardBrandSpecified;
                this.POIIDSpecified = value.POIIDSpecified;
                this.SaleIDSpecified = value.SaleIDSpecified;
                this.OperatorIDSpecified = value.OperatorIDSpecified;
                this.ShiftNumberSpecified = value.ShiftNumberSpecified;
                this.TotalsGroupIDSpecified = value.TotalsGroupIDSpecified;
                this.PaymentCurrencySpecified = value.PaymentCurrencySpecified;
                this.LoyaltyUnitSpecified = value.LoyaltyUnitSpecified;
                this.LoyaltyCurrencySpecified = value.LoyaltyCurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PaymentTotals", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentTotalsType[] PaymentTotals {
            get {
                return this.paymentTotalsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(PaymentTotalsType[]))
                            || false)) {
                    this.paymentTotalsField = new PaymentTotalsType[0];
                    this.paymentTotalsFieldSpecified = false;
                }
                else {
                    this.paymentTotalsField = value;
                    this.paymentTotalsFieldSpecified = (this.PaymentTotalsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyTotals", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyTotalsType[] LoyaltyTotals {
            get {
                return this.loyaltyTotalsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(LoyaltyTotalsType[]))
                            || false)) {
                    this.loyaltyTotalsField = new LoyaltyTotalsType[0];
                    this.loyaltyTotalsFieldSpecified = false;
                }
                else {
                    this.loyaltyTotalsField = value;
                    this.loyaltyTotalsFieldSpecified = (this.LoyaltyTotalsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PaymentInstrumentType {
            get {
                return this.paymentInstrumentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.paymentInstrumentTypeField = default(string);
                    this.paymentInstrumentTypeFieldSpecified = false;
                }
                else {
                    this.paymentInstrumentTypeField = value;
                    this.paymentInstrumentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AcquirerID {
            get {
                return this.acquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.acquirerIDField = default(string);
                    this.acquirerIDFieldSpecified = false;
                }
                else {
                    this.acquirerIDField = value;
                    this.acquirerIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrorCondition {
            get {
                return this.errorConditionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.errorConditionField = default(string);
                    this.errorConditionFieldSpecified = false;
                }
                else {
                    this.errorConditionField = value;
                    this.errorConditionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string HostReconciliationID {
            get {
                return this.hostReconciliationIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.hostReconciliationIDField = default(string);
                    this.hostReconciliationIDFieldSpecified = false;
                }
                else {
                    this.hostReconciliationIDField = value;
                    this.hostReconciliationIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CardBrand {
            get {
                return this.cardBrandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.cardBrandField = default(string);
                    this.cardBrandFieldSpecified = false;
                }
                else {
                    this.cardBrandField = value;
                    this.cardBrandFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIID {
            get {
                return this.pOIIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIIDField = default(string);
                    this.pOIIDFieldSpecified = false;
                }
                else {
                    this.pOIIDField = value;
                    this.pOIIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleID {
            get {
                return this.saleIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleIDField = default(string);
                    this.saleIDFieldSpecified = false;
                }
                else {
                    this.saleIDField = value;
                    this.saleIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OperatorID {
            get {
                return this.operatorIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.operatorIDField = default(string);
                    this.operatorIDFieldSpecified = false;
                }
                else {
                    this.operatorIDField = value;
                    this.operatorIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShiftNumber {
            get {
                return this.shiftNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.shiftNumberField = default(string);
                    this.shiftNumberFieldSpecified = false;
                }
                else {
                    this.shiftNumberField = value;
                    this.shiftNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TotalsGroupID {
            get {
                return this.totalsGroupIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.totalsGroupIDField = default(string);
                    this.totalsGroupIDFieldSpecified = false;
                }
                else {
                    this.totalsGroupIDField = value;
                    this.totalsGroupIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PaymentCurrency {
            get {
                return this.paymentCurrencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.paymentCurrencyField = default(string);
                    this.paymentCurrencyFieldSpecified = false;
                }
                else {
                    this.paymentCurrencyField = value;
                    this.paymentCurrencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Point")]
        public string LoyaltyUnit {
            get {
                return this.loyaltyUnitField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.LoyaltyUnitDefaultValue)
                            || (value == default(string)))) {
                    this.loyaltyUnitField = this.LoyaltyUnitDefaultValue;
                    this.loyaltyUnitFieldSpecified = false;
                }
                else {
                    this.loyaltyUnitField = value;
                    this.loyaltyUnitFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LoyaltyCurrency {
            get {
                return this.loyaltyCurrencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.loyaltyCurrencyField = default(string);
                    this.loyaltyCurrencyFieldSpecified = false;
                }
                else {
                    this.loyaltyCurrencyField = value;
                    this.loyaltyCurrencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentTotalsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentTotalsFieldSpecified
                            || (this.PaymentTotalsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentTotalsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyTotalsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyTotalsFieldSpecified
                            || (this.LoyaltyTotalsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyTotalsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentInstrumentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentInstrumentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentInstrumentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ErrorConditionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.errorConditionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.errorConditionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool HostReconciliationIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.hostReconciliationIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.hostReconciliationIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardBrandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardBrandFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardBrandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OperatorIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.operatorIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.operatorIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ShiftNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.shiftNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.shiftNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TotalsGroupIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.totalsGroupIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.totalsGroupIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentCurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentCurrencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentCurrencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyUnitDefaultValue {
            get {
                return this.loyaltyUnitDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyUnitSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyUnitFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyUnitFieldSpecified = value;
                if ((this.loyaltyUnitFieldSpecified
                            && (this.loyaltyUnitField == default(string)))) {
                    this.loyaltyUnitField = this.loyaltyUnitDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyCurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyCurrencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyCurrencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((((((((((false
                            || (this.PaymentTotalsLength() != 0))
                            || (this.LoyaltyTotalsLength() != 0))
                            || ((this.PaymentInstrumentType != default(string))
                            && this.PaymentInstrumentTypeSpecified))
                            || ((this.AcquirerID != default(string))
                            && this.AcquirerIDSpecified))
                            || ((this.ErrorCondition != default(string))
                            && this.ErrorConditionSpecified))
                            || ((this.HostReconciliationID != default(string))
                            && this.HostReconciliationIDSpecified))
                            || ((this.CardBrand != default(string))
                            && this.CardBrandSpecified))
                            || ((this.POIID != default(string))
                            && this.POIIDSpecified))
                            || ((this.SaleID != default(string))
                            && this.SaleIDSpecified))
                            || ((this.OperatorID != default(string))
                            && this.OperatorIDSpecified))
                            || ((this.ShiftNumber != default(string))
                            && this.ShiftNumberSpecified))
                            || ((this.TotalsGroupID != default(string))
                            && this.TotalsGroupIDSpecified))
                            || ((this.PaymentCurrency != default(string))
                            && this.PaymentCurrencySpecified))
                            || ((this.LoyaltyUnit != default(string))
                            && this.LoyaltyUnitSpecified))
                            || ((this.LoyaltyCurrency != default(string))
                            && this.LoyaltyCurrencySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionTotalsTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionTotalsType";
                // END ADDED BY XSD
            }
        }
        public int PaymentTotalsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.paymentTotalsField == default(PaymentTotalsType[]))) {
                return 0;
            }
            else {
                return this.paymentTotalsField.Length;
            }
            // END ADDED BY XSD
        }
        public PaymentTotalsType PaymentTotalsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.paymentTotalsField == default(PaymentTotalsType[]))) {
                    return default(PaymentTotalsType);
                }
                else {
                    if ((0 > index)) {
                        return default(PaymentTotalsType);
                    }
                    else {
                        if ((this.paymentTotalsField.Length <= index)) {
                            return default(PaymentTotalsType);
                        }
                        else {
                            return this.paymentTotalsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(PaymentTotalsType);
            }
            // END ADDED BY XSD
        }
        public bool PaymentTotalsSetItem(int index, PaymentTotalsType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.paymentTotalsField == default(PaymentTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.paymentTotalsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentTotalsAddItem(PaymentTotalsType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.paymentTotalsField == default(PaymentTotalsType[]))) {
                    return false;
                }
                else {
                    PaymentTotalsType[] array = new PaymentTotalsType[(this.paymentTotalsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.paymentTotalsField.Length); i = (i + 1)) {
                        array[i] = paymentTotalsField[i];
                    }
                    array[i] = value;
                    this.PaymentTotals = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentTotalsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.paymentTotalsField == default(PaymentTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            PaymentTotalsType[] array = new PaymentTotalsType[(this.paymentTotalsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = paymentTotalsField[i];
                            }
                            for (i = (i + 1); (i < this.paymentTotalsField.Length); i = (i + 1)) {
                                array[i] = paymentTotalsField[i];
                            }
                            this.PaymentTotals = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int PaymentTotalsInsertItem(int index, PaymentTotalsType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.paymentTotalsField == default(PaymentTotalsType[]))) {
                    return -1;
                }
                else {
                    if ((this.paymentTotalsField.Length <= index)) {
                        if ((this.PaymentTotalsAddItem(value) == true)) {
                            return this.PaymentTotalsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        PaymentTotalsType[] array = new PaymentTotalsType[(this.paymentTotalsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = paymentTotalsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.paymentTotalsField.Length); j = (j + 1)) {
                            array[k] = paymentTotalsField[j];
                            k = (k + 1);
                        }
                        this.PaymentTotals = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyTotalsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loyaltyTotalsField == default(LoyaltyTotalsType[]))) {
                return 0;
            }
            else {
                return this.loyaltyTotalsField.Length;
            }
            // END ADDED BY XSD
        }
        public LoyaltyTotalsType LoyaltyTotalsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loyaltyTotalsField == default(LoyaltyTotalsType[]))) {
                    return default(LoyaltyTotalsType);
                }
                else {
                    if ((0 > index)) {
                        return default(LoyaltyTotalsType);
                    }
                    else {
                        if ((this.loyaltyTotalsField.Length <= index)) {
                            return default(LoyaltyTotalsType);
                        }
                        else {
                            return this.loyaltyTotalsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(LoyaltyTotalsType);
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyTotalsSetItem(int index, LoyaltyTotalsType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loyaltyTotalsField == default(LoyaltyTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loyaltyTotalsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyTotalsAddItem(LoyaltyTotalsType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loyaltyTotalsField == default(LoyaltyTotalsType[]))) {
                    return false;
                }
                else {
                    LoyaltyTotalsType[] array = new LoyaltyTotalsType[(this.loyaltyTotalsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loyaltyTotalsField.Length); i = (i + 1)) {
                        array[i] = loyaltyTotalsField[i];
                    }
                    array[i] = value;
                    this.LoyaltyTotals = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyTotalsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loyaltyTotalsField == default(LoyaltyTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            LoyaltyTotalsType[] array = new LoyaltyTotalsType[(this.loyaltyTotalsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loyaltyTotalsField[i];
                            }
                            for (i = (i + 1); (i < this.loyaltyTotalsField.Length); i = (i + 1)) {
                                array[i] = loyaltyTotalsField[i];
                            }
                            this.LoyaltyTotals = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyTotalsInsertItem(int index, LoyaltyTotalsType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loyaltyTotalsField == default(LoyaltyTotalsType[]))) {
                    return -1;
                }
                else {
                    if ((this.loyaltyTotalsField.Length <= index)) {
                        if ((this.LoyaltyTotalsAddItem(value) == true)) {
                            return this.LoyaltyTotalsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        LoyaltyTotalsType[] array = new LoyaltyTotalsType[(this.loyaltyTotalsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loyaltyTotalsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loyaltyTotalsField.Length); j = (j + 1)) {
                            array[k] = loyaltyTotalsField[j];
                            k = (k + 1);
                        }
                        this.LoyaltyTotals = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("59bf8765-1ba3-4812-b764-19ee5d62c8c9")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentTotalsType : IPaymentTotalsType {
        private string transactionTypeField = default(string);
        private int transactionCountField = default(int);
        private double transactionAmountField = default(double);
        private bool transactionTypeFieldSpecified = false;
        private bool transactionCountFieldSpecified = false;
        private bool transactionAmountFieldSpecified = false;
        public PaymentTotalsType() {
        }
        public PaymentTotalsType(PaymentTotalsType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentTotalsType))) {
            }
            else {
                this.TransactionType = value.TransactionType;
                this.TransactionCount = value.TransactionCount;
                this.TransactionAmount = value.TransactionAmount;
                this.TransactionTypeSpecified = value.TransactionTypeSpecified;
                this.TransactionCountSpecified = value.TransactionCountSpecified;
                this.TransactionAmountSpecified = value.TransactionAmountSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TransactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.transactionTypeField = default(string);
                    this.transactionTypeFieldSpecified = false;
                }
                else {
                    this.transactionTypeField = value;
                    this.transactionTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TransactionCount {
            get {
                return this.transactionCountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.transactionCountField = default(int);
                    this.transactionCountFieldSpecified = false;
                }
                else {
                    this.transactionCountField = value;
                    this.transactionCountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TransactionAmount {
            get {
                return this.transactionAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.transactionAmountField = default(double);
                    this.transactionAmountFieldSpecified = false;
                }
                else {
                    this.transactionAmountField = value;
                    this.transactionAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionCountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionCountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionCountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.TransactionType != default(string))
                            && this.TransactionTypeSpecified))
                            || ((this.TransactionCount != default(int))
                            && this.TransactionCountSpecified))
                            || ((this.TransactionAmount != default(double))
                            && this.TransactionAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentTotalsTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentTotalsType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("76179020-fe0b-412f-a342-307b6c0b1ac7")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyTotalsType : ILoyaltyTotalsType {
        private string transactionTypeField = default(string);
        private int transactionCountField = default(int);
        private double transactionAmountField = default(double);
        private bool transactionTypeFieldSpecified = false;
        private bool transactionCountFieldSpecified = false;
        private bool transactionAmountFieldSpecified = false;
        public LoyaltyTotalsType() {
        }
        public LoyaltyTotalsType(LoyaltyTotalsType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyTotalsType))) {
            }
            else {
                this.TransactionType = value.TransactionType;
                this.TransactionCount = value.TransactionCount;
                this.TransactionAmount = value.TransactionAmount;
                this.TransactionTypeSpecified = value.TransactionTypeSpecified;
                this.TransactionCountSpecified = value.TransactionCountSpecified;
                this.TransactionAmountSpecified = value.TransactionAmountSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TransactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.transactionTypeField = default(string);
                    this.transactionTypeFieldSpecified = false;
                }
                else {
                    this.transactionTypeField = value;
                    this.transactionTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TransactionCount {
            get {
                return this.transactionCountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.transactionCountField = default(int);
                    this.transactionCountFieldSpecified = false;
                }
                else {
                    this.transactionCountField = value;
                    this.transactionCountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double TransactionAmount {
            get {
                return this.transactionAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.transactionAmountField = default(double);
                    this.transactionAmountFieldSpecified = false;
                }
                else {
                    this.transactionAmountField = value;
                    this.transactionAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionCountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionCountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionCountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.TransactionType != default(string))
                            && this.TransactionTypeSpecified))
                            || ((this.TransactionCount != default(int))
                            && this.TransactionCountSpecified))
                            || ((this.TransactionAmount != default(double))
                            && this.TransactionAmountSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyTotalsTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyTotalsType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum GlobalStatusEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        OK,
        /// <remarks/>
        Busy,
        /// <remarks/>
        Maintenance,
        /// <remarks/>
        Unreachable,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum IdentificationSupportEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        NoCard,
        /// <remarks/>
        LoyaltyCard,
        /// <remarks/>
        HybridCard,
        /// <remarks/>
        LinkedCard,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum IdentificationTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        PAN,
        /// <remarks/>
        ISOTrack2,
        /// <remarks/>
        BarCode,
        /// <remarks/>
        AccountNumber,
        /// <remarks/>
        PhoneNumber,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum InfoQualifyEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Status,
        /// <remarks/>
        Error,
        /// <remarks/>
        Display,
        /// <remarks/>
        Sound,
        /// <remarks/>
        Input,
        /// <remarks/>
        POIReplication,
        /// <remarks/>
        CustomerAssistance,
        /// <remarks/>
        Receipt,
        /// <remarks/>
        Document,
        /// <remarks/>
        Voucher,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("b58fccbc-6682-4f77-b732-f34088fef8d9")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class InputType : IInputType {
        private bool confirmedFlagField = default(bool);
        private bool confirmedFlagFieldSpecified = default(bool);
        private string functionKeyField = default(string);
        private string textInputField = default(string);
        private string digitInputField = default(string);
        private ContentInformationType passwordField = new ContentInformationType();
        private string menuEntryNumberField = default(string);
        private string inputCommandField = default(string);
        private bool functionKeyFieldSpecified = false;
        private bool textInputFieldSpecified = false;
        private bool digitInputFieldSpecified = false;
        private bool passwordFieldSpecified = false;
        private bool menuEntryNumberFieldSpecified = false;
        private bool inputCommandFieldSpecified = false;
        public InputType() {
        }
        public InputType(InputType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(InputType))) {
            }
            else {
                this.ConfirmedFlag = value.ConfirmedFlag;
                this.ConfirmedFlagSpecified = value.ConfirmedFlagSpecified;
                this.FunctionKey = value.FunctionKey;
                this.TextInput = value.TextInput;
                this.DigitInput = value.DigitInput;
                this.Password = value.Password;
                this.MenuEntryNumber = value.MenuEntryNumber;
                this.InputCommand = value.InputCommand;
                this.FunctionKeySpecified = value.FunctionKeySpecified;
                this.TextInputSpecified = value.TextInputSpecified;
                this.DigitInputSpecified = value.DigitInputSpecified;
                this.PasswordSpecified = value.PasswordSpecified;
                this.MenuEntryNumberSpecified = value.MenuEntryNumberSpecified;
                this.InputCommandSpecified = value.InputCommandSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ConfirmedFlag {
            get {
                return this.confirmedFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.confirmedFlagField = default(bool);
                    this.confirmedFlagFieldSpecified = false;
                }
                else {
                    this.confirmedFlagField = value;
                    this.confirmedFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConfirmedFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.confirmedFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.confirmedFlagFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FunctionKey {
            get {
                return this.functionKeyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.functionKeyField = default(string);
                    this.functionKeyFieldSpecified = false;
                }
                else {
                    this.functionKeyField = value;
                    this.functionKeyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TextInput {
            get {
                return this.textInputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.textInputField = default(string);
                    this.textInputFieldSpecified = false;
                }
                else {
                    this.textInputField = value;
                    this.textInputFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DigitInput {
            get {
                return this.digitInputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.digitInputField = default(string);
                    this.digitInputFieldSpecified = false;
                }
                else {
                    this.digitInputField = value;
                    this.digitInputFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContentInformationType Password {
            get {
                return this.passwordField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ContentInformationType))
                            || false)) {
                    this.passwordField = new ContentInformationType();
                    this.passwordFieldSpecified = false;
                }
                else {
                    this.passwordField = value;
                    this.passwordFieldSpecified = this.Password.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string MenuEntryNumber {
            get {
                return this.menuEntryNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.menuEntryNumberField = default(string);
                    this.menuEntryNumberFieldSpecified = false;
                }
                else {
                    this.menuEntryNumberField = value;
                    this.menuEntryNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InputCommand {
            get {
                return this.inputCommandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.inputCommandField = default(string);
                    this.inputCommandFieldSpecified = false;
                }
                else {
                    this.inputCommandField = value;
                    this.inputCommandFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool FunctionKeySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.functionKeyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.functionKeyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TextInputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.textInputFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.textInputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DigitInputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.digitInputFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.digitInputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PasswordSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.passwordFieldSpecified || this.Password.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.passwordFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MenuEntryNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.menuEntryNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.menuEntryNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InputCommandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.inputCommandFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.inputCommandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.Password != default(ContentInformationType))
                            && this.PasswordSpecified))
                            || ((this.ConfirmedFlag != default(bool))
                            && this.ConfirmedFlagSpecified))
                            || ((this.FunctionKey != default(string))
                            && this.FunctionKeySpecified))
                            || ((this.TextInput != default(string))
                            && this.TextInputSpecified))
                            || ((this.DigitInput != default(string))
                            && this.DigitInputSpecified))
                            || ((this.MenuEntryNumber != default(string))
                            && this.MenuEntryNumberSpecified))
                            || ((this.InputCommand != default(string))
                            && this.InputCommandSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string InputTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "InputType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum InputCommandEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        GetAnyKey,
        /// <remarks/>
        GetConfirmation,
        /// <remarks/>
        SiteManager,
        /// <remarks/>
        TextString,
        /// <remarks/>
        DigitString,
        /// <remarks/>
        DecimalString,
        /// <remarks/>
        GetFunctionKey,
        /// <remarks/>
        GetMenuEntry,
        /// <remarks/>
        Password,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("213262cb-8d38-41c2-911b-61bc4b46d0f0")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class InputDataType : IInputDataType {
        private string defaultInputStringField = default(string);
        private string stringMaskField = default(string);
        private string deviceField = default(string);
        private string infoQualifyField = default(string);
        private string inputCommandField = default(string);
        private bool notifyCardInputFlagField = default(bool);
        private int maxInputTimeField = default(int);
        private bool immediateResponseFlagField = default(bool);
        private int minLengthField = default(int);
        private int maxLengthField = default(int);
        private int maxDecimalLengthField = default(int);
        private bool waitUserValidationFlagField = default(bool);
        private bool fromRightToLeftFlagField = default(bool);
        private bool maskCharactersFlagField = default(bool);
        private bool beepKeyFlagField = default(bool);
        private bool globalCorrectionFlagField = default(bool);
        private bool disableCancelFlagField = default(bool);
        private bool disableCorrectFlagField = default(bool);
        private bool disableValidFlagField = default(bool);
        private bool menuBackFlagField = default(bool);
        private bool defaultInputStringFieldSpecified = false;
        private bool stringMaskFieldSpecified = false;
        private bool deviceFieldSpecified = false;
        private bool infoQualifyFieldSpecified = false;
        private bool inputCommandFieldSpecified = false;
        private bool notifyCardInputFlagDefaultValue = false;
        private bool notifyCardInputFlagFieldSpecified = false;
        private bool maxInputTimeFieldSpecified = false;
        private bool immediateResponseFlagDefaultValue = false;
        private bool immediateResponseFlagFieldSpecified = false;
        private bool minLengthFieldSpecified = false;
        private bool maxLengthFieldSpecified = false;
        private bool maxDecimalLengthFieldSpecified = false;
        private bool waitUserValidationFlagDefaultValue = true;
        private bool waitUserValidationFlagFieldSpecified = false;
        private bool fromRightToLeftFlagDefaultValue = false;
        private bool fromRightToLeftFlagFieldSpecified = false;
        private bool maskCharactersFlagDefaultValue = false;
        private bool maskCharactersFlagFieldSpecified = false;
        private bool beepKeyFlagDefaultValue = false;
        private bool beepKeyFlagFieldSpecified = false;
        private bool globalCorrectionFlagDefaultValue = false;
        private bool globalCorrectionFlagFieldSpecified = false;
        private bool disableCancelFlagDefaultValue = false;
        private bool disableCancelFlagFieldSpecified = false;
        private bool disableCorrectFlagDefaultValue = false;
        private bool disableCorrectFlagFieldSpecified = false;
        private bool disableValidFlagDefaultValue = false;
        private bool disableValidFlagFieldSpecified = false;
        private bool menuBackFlagDefaultValue = false;
        private bool menuBackFlagFieldSpecified = false;
        public InputDataType() {
            this.notifyCardInputFlagField = this.notifyCardInputFlagDefaultValue;
            this.immediateResponseFlagField = this.immediateResponseFlagDefaultValue;
            this.waitUserValidationFlagField = this.waitUserValidationFlagDefaultValue;
            this.fromRightToLeftFlagField = this.fromRightToLeftFlagDefaultValue;
            this.maskCharactersFlagField = this.maskCharactersFlagDefaultValue;
            this.beepKeyFlagField = this.beepKeyFlagDefaultValue;
            this.globalCorrectionFlagField = this.globalCorrectionFlagDefaultValue;
            this.disableCancelFlagField = this.disableCancelFlagDefaultValue;
            this.disableCorrectFlagField = this.disableCorrectFlagDefaultValue;
            this.disableValidFlagField = this.disableValidFlagDefaultValue;
            this.menuBackFlagField = this.menuBackFlagDefaultValue;
        }
        public InputDataType(InputDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(InputDataType))) {
            }
            else {
                this.DefaultInputString = value.DefaultInputString;
                this.StringMask = value.StringMask;
                this.Device = value.Device;
                this.InfoQualify = value.InfoQualify;
                this.InputCommand = value.InputCommand;
                this.NotifyCardInputFlag = value.NotifyCardInputFlag;
                this.MaxInputTime = value.MaxInputTime;
                this.ImmediateResponseFlag = value.ImmediateResponseFlag;
                this.MinLength = value.MinLength;
                this.MaxLength = value.MaxLength;
                this.MaxDecimalLength = value.MaxDecimalLength;
                this.WaitUserValidationFlag = value.WaitUserValidationFlag;
                this.FromRightToLeftFlag = value.FromRightToLeftFlag;
                this.MaskCharactersFlag = value.MaskCharactersFlag;
                this.BeepKeyFlag = value.BeepKeyFlag;
                this.GlobalCorrectionFlag = value.GlobalCorrectionFlag;
                this.DisableCancelFlag = value.DisableCancelFlag;
                this.DisableCorrectFlag = value.DisableCorrectFlag;
                this.DisableValidFlag = value.DisableValidFlag;
                this.MenuBackFlag = value.MenuBackFlag;
                this.DefaultInputStringSpecified = value.DefaultInputStringSpecified;
                this.StringMaskSpecified = value.StringMaskSpecified;
                this.DeviceSpecified = value.DeviceSpecified;
                this.InfoQualifySpecified = value.InfoQualifySpecified;
                this.InputCommandSpecified = value.InputCommandSpecified;
                this.NotifyCardInputFlagSpecified = value.NotifyCardInputFlagSpecified;
                this.MaxInputTimeSpecified = value.MaxInputTimeSpecified;
                this.ImmediateResponseFlagSpecified = value.ImmediateResponseFlagSpecified;
                this.MinLengthSpecified = value.MinLengthSpecified;
                this.MaxLengthSpecified = value.MaxLengthSpecified;
                this.MaxDecimalLengthSpecified = value.MaxDecimalLengthSpecified;
                this.WaitUserValidationFlagSpecified = value.WaitUserValidationFlagSpecified;
                this.FromRightToLeftFlagSpecified = value.FromRightToLeftFlagSpecified;
                this.MaskCharactersFlagSpecified = value.MaskCharactersFlagSpecified;
                this.BeepKeyFlagSpecified = value.BeepKeyFlagSpecified;
                this.GlobalCorrectionFlagSpecified = value.GlobalCorrectionFlagSpecified;
                this.DisableCancelFlagSpecified = value.DisableCancelFlagSpecified;
                this.DisableCorrectFlagSpecified = value.DisableCorrectFlagSpecified;
                this.DisableValidFlagSpecified = value.DisableValidFlagSpecified;
                this.MenuBackFlagSpecified = value.MenuBackFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DefaultInputString {
            get {
                return this.defaultInputStringField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.defaultInputStringField = default(string);
                    this.defaultInputStringFieldSpecified = false;
                }
                else {
                    this.defaultInputStringField = value;
                    this.defaultInputStringFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string StringMask {
            get {
                return this.stringMaskField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.stringMaskField = default(string);
                    this.stringMaskFieldSpecified = false;
                }
                else {
                    this.stringMaskField = value;
                    this.stringMaskFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Device {
            get {
                return this.deviceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.deviceField = default(string);
                    this.deviceFieldSpecified = false;
                }
                else {
                    this.deviceField = value;
                    this.deviceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InfoQualify {
            get {
                return this.infoQualifyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.infoQualifyField = default(string);
                    this.infoQualifyFieldSpecified = false;
                }
                else {
                    this.infoQualifyField = value;
                    this.infoQualifyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InputCommand {
            get {
                return this.inputCommandField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.inputCommandField = default(string);
                    this.inputCommandFieldSpecified = false;
                }
                else {
                    this.inputCommandField = value;
                    this.inputCommandFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool NotifyCardInputFlag {
            get {
                return this.notifyCardInputFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.NotifyCardInputFlagDefaultValue)
                            || false)) {
                    this.notifyCardInputFlagField = this.NotifyCardInputFlagDefaultValue;
                    this.notifyCardInputFlagFieldSpecified = false;
                }
                else {
                    this.notifyCardInputFlagField = value;
                    this.notifyCardInputFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxInputTime {
            get {
                return this.maxInputTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxInputTimeField = default(int);
                    this.maxInputTimeFieldSpecified = false;
                }
                else {
                    this.maxInputTimeField = value;
                    this.maxInputTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ImmediateResponseFlag {
            get {
                return this.immediateResponseFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.ImmediateResponseFlagDefaultValue)
                            || false)) {
                    this.immediateResponseFlagField = this.ImmediateResponseFlagDefaultValue;
                    this.immediateResponseFlagFieldSpecified = false;
                }
                else {
                    this.immediateResponseFlagField = value;
                    this.immediateResponseFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MinLength {
            get {
                return this.minLengthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.minLengthField = default(int);
                    this.minLengthFieldSpecified = false;
                }
                else {
                    this.minLengthField = value;
                    this.minLengthFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxLength {
            get {
                return this.maxLengthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxLengthField = default(int);
                    this.maxLengthFieldSpecified = false;
                }
                else {
                    this.maxLengthField = value;
                    this.maxLengthFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxDecimalLength {
            get {
                return this.maxDecimalLengthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxDecimalLengthField = default(int);
                    this.maxDecimalLengthFieldSpecified = false;
                }
                else {
                    this.maxDecimalLengthField = value;
                    this.maxDecimalLengthFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool WaitUserValidationFlag {
            get {
                return this.waitUserValidationFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.WaitUserValidationFlagDefaultValue)
                            || false)) {
                    this.waitUserValidationFlagField = this.WaitUserValidationFlagDefaultValue;
                    this.waitUserValidationFlagFieldSpecified = false;
                }
                else {
                    this.waitUserValidationFlagField = value;
                    this.waitUserValidationFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool FromRightToLeftFlag {
            get {
                return this.fromRightToLeftFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.FromRightToLeftFlagDefaultValue)
                            || false)) {
                    this.fromRightToLeftFlagField = this.FromRightToLeftFlagDefaultValue;
                    this.fromRightToLeftFlagFieldSpecified = false;
                }
                else {
                    this.fromRightToLeftFlagField = value;
                    this.fromRightToLeftFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool MaskCharactersFlag {
            get {
                return this.maskCharactersFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.MaskCharactersFlagDefaultValue)
                            || false)) {
                    this.maskCharactersFlagField = this.MaskCharactersFlagDefaultValue;
                    this.maskCharactersFlagFieldSpecified = false;
                }
                else {
                    this.maskCharactersFlagField = value;
                    this.maskCharactersFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BeepKeyFlag {
            get {
                return this.beepKeyFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.BeepKeyFlagDefaultValue)
                            || false)) {
                    this.beepKeyFlagField = this.BeepKeyFlagDefaultValue;
                    this.beepKeyFlagFieldSpecified = false;
                }
                else {
                    this.beepKeyFlagField = value;
                    this.beepKeyFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool GlobalCorrectionFlag {
            get {
                return this.globalCorrectionFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.GlobalCorrectionFlagDefaultValue)
                            || false)) {
                    this.globalCorrectionFlagField = this.GlobalCorrectionFlagDefaultValue;
                    this.globalCorrectionFlagFieldSpecified = false;
                }
                else {
                    this.globalCorrectionFlagField = value;
                    this.globalCorrectionFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DisableCancelFlag {
            get {
                return this.disableCancelFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.DisableCancelFlagDefaultValue)
                            || false)) {
                    this.disableCancelFlagField = this.DisableCancelFlagDefaultValue;
                    this.disableCancelFlagFieldSpecified = false;
                }
                else {
                    this.disableCancelFlagField = value;
                    this.disableCancelFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DisableCorrectFlag {
            get {
                return this.disableCorrectFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.DisableCorrectFlagDefaultValue)
                            || false)) {
                    this.disableCorrectFlagField = this.DisableCorrectFlagDefaultValue;
                    this.disableCorrectFlagFieldSpecified = false;
                }
                else {
                    this.disableCorrectFlagField = value;
                    this.disableCorrectFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DisableValidFlag {
            get {
                return this.disableValidFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.DisableValidFlagDefaultValue)
                            || false)) {
                    this.disableValidFlagField = this.DisableValidFlagDefaultValue;
                    this.disableValidFlagFieldSpecified = false;
                }
                else {
                    this.disableValidFlagField = value;
                    this.disableValidFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool MenuBackFlag {
            get {
                return this.menuBackFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.MenuBackFlagDefaultValue)
                            || false)) {
                    this.menuBackFlagField = this.MenuBackFlagDefaultValue;
                    this.menuBackFlagFieldSpecified = false;
                }
                else {
                    this.menuBackFlagField = value;
                    this.menuBackFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DefaultInputStringSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.defaultInputStringFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.defaultInputStringFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StringMaskSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.stringMaskFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.stringMaskFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DeviceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.deviceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.deviceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InfoQualifySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.infoQualifyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.infoQualifyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InputCommandSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.inputCommandFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.inputCommandFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool NotifyCardInputFlagDefaultValue {
            get {
                return this.notifyCardInputFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool NotifyCardInputFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.notifyCardInputFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.notifyCardInputFlagFieldSpecified = value;
                if ((this.notifyCardInputFlagFieldSpecified
                            && (this.notifyCardInputFlagField == default(bool)))) {
                    this.notifyCardInputFlagField = this.notifyCardInputFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxInputTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxInputTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxInputTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ImmediateResponseFlagDefaultValue {
            get {
                return this.immediateResponseFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ImmediateResponseFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.immediateResponseFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.immediateResponseFlagFieldSpecified = value;
                if ((this.immediateResponseFlagFieldSpecified
                            && (this.immediateResponseFlagField == default(bool)))) {
                    this.immediateResponseFlagField = this.immediateResponseFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MinLengthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.minLengthFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.minLengthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxLengthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxLengthFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxLengthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxDecimalLengthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxDecimalLengthFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxDecimalLengthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool WaitUserValidationFlagDefaultValue {
            get {
                return this.waitUserValidationFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool WaitUserValidationFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.waitUserValidationFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.waitUserValidationFlagFieldSpecified = value;
                if ((this.waitUserValidationFlagFieldSpecified
                            && (this.waitUserValidationFlagField == default(bool)))) {
                    this.waitUserValidationFlagField = this.waitUserValidationFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool FromRightToLeftFlagDefaultValue {
            get {
                return this.fromRightToLeftFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool FromRightToLeftFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.fromRightToLeftFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.fromRightToLeftFlagFieldSpecified = value;
                if ((this.fromRightToLeftFlagFieldSpecified
                            && (this.fromRightToLeftFlagField == default(bool)))) {
                    this.fromRightToLeftFlagField = this.fromRightToLeftFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaskCharactersFlagDefaultValue {
            get {
                return this.maskCharactersFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaskCharactersFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maskCharactersFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maskCharactersFlagFieldSpecified = value;
                if ((this.maskCharactersFlagFieldSpecified
                            && (this.maskCharactersFlagField == default(bool)))) {
                    this.maskCharactersFlagField = this.maskCharactersFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BeepKeyFlagDefaultValue {
            get {
                return this.beepKeyFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BeepKeyFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.beepKeyFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.beepKeyFlagFieldSpecified = value;
                if ((this.beepKeyFlagFieldSpecified
                            && (this.beepKeyFlagField == default(bool)))) {
                    this.beepKeyFlagField = this.beepKeyFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool GlobalCorrectionFlagDefaultValue {
            get {
                return this.globalCorrectionFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool GlobalCorrectionFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.globalCorrectionFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.globalCorrectionFlagFieldSpecified = value;
                if ((this.globalCorrectionFlagFieldSpecified
                            && (this.globalCorrectionFlagField == default(bool)))) {
                    this.globalCorrectionFlagField = this.globalCorrectionFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisableCancelFlagDefaultValue {
            get {
                return this.disableCancelFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisableCancelFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.disableCancelFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.disableCancelFlagFieldSpecified = value;
                if ((this.disableCancelFlagFieldSpecified
                            && (this.disableCancelFlagField == default(bool)))) {
                    this.disableCancelFlagField = this.disableCancelFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisableCorrectFlagDefaultValue {
            get {
                return this.disableCorrectFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisableCorrectFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.disableCorrectFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.disableCorrectFlagFieldSpecified = value;
                if ((this.disableCorrectFlagFieldSpecified
                            && (this.disableCorrectFlagField == default(bool)))) {
                    this.disableCorrectFlagField = this.disableCorrectFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisableValidFlagDefaultValue {
            get {
                return this.disableValidFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisableValidFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.disableValidFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.disableValidFlagFieldSpecified = value;
                if ((this.disableValidFlagFieldSpecified
                            && (this.disableValidFlagField == default(bool)))) {
                    this.disableValidFlagField = this.disableValidFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MenuBackFlagDefaultValue {
            get {
                return this.menuBackFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MenuBackFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.menuBackFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.menuBackFlagFieldSpecified = value;
                if ((this.menuBackFlagFieldSpecified
                            && (this.menuBackFlagField == default(bool)))) {
                    this.menuBackFlagField = this.menuBackFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((((((((((((((false
                            || ((this.DefaultInputString != default(string))
                            && this.DefaultInputStringSpecified))
                            || ((this.StringMask != default(string))
                            && this.StringMaskSpecified))
                            || ((this.Device != default(string))
                            && this.DeviceSpecified))
                            || ((this.InfoQualify != default(string))
                            && this.InfoQualifySpecified))
                            || ((this.InputCommand != default(string))
                            && this.InputCommandSpecified))
                            || ((this.NotifyCardInputFlag != default(bool))
                            && this.NotifyCardInputFlagSpecified))
                            || ((this.MaxInputTime != default(int))
                            && this.MaxInputTimeSpecified))
                            || ((this.ImmediateResponseFlag != default(bool))
                            && this.ImmediateResponseFlagSpecified))
                            || ((this.MinLength != default(int))
                            && this.MinLengthSpecified))
                            || ((this.MaxLength != default(int))
                            && this.MaxLengthSpecified))
                            || ((this.MaxDecimalLength != default(int))
                            && this.MaxDecimalLengthSpecified))
                            || ((this.WaitUserValidationFlag != default(bool))
                            && this.WaitUserValidationFlagSpecified))
                            || ((this.FromRightToLeftFlag != default(bool))
                            && this.FromRightToLeftFlagSpecified))
                            || ((this.MaskCharactersFlag != default(bool))
                            && this.MaskCharactersFlagSpecified))
                            || ((this.BeepKeyFlag != default(bool))
                            && this.BeepKeyFlagSpecified))
                            || ((this.GlobalCorrectionFlag != default(bool))
                            && this.GlobalCorrectionFlagSpecified))
                            || ((this.DisableCancelFlag != default(bool))
                            && this.DisableCancelFlagSpecified))
                            || ((this.DisableCorrectFlag != default(bool))
                            && this.DisableCorrectFlagSpecified))
                            || ((this.DisableValidFlag != default(bool))
                            && this.DisableValidFlagSpecified))
                            || ((this.MenuBackFlag != default(bool))
                            && this.MenuBackFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string InputDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "InputDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("99ba8ef4-19ff-42e1-8007-d963094e1120")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class InputRequestType : IInputRequestType {
        private DisplayOutputType displayOutputField = new DisplayOutputType();
        private InputDataType inputDataField = new InputDataType();
        private bool displayOutputFieldSpecified = false;
        private bool inputDataFieldSpecified = false;
        public InputRequestType() {
        }
        public InputRequestType(InputRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(InputRequestType))) {
            }
            else {
                this.DisplayOutput = value.DisplayOutput;
                this.InputData = value.InputData;
                this.DisplayOutputSpecified = value.DisplayOutputSpecified;
                this.InputDataSpecified = value.InputDataSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DisplayOutputType DisplayOutput {
            get {
                return this.displayOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(DisplayOutputType))
                            || false)) {
                    this.displayOutputField = new DisplayOutputType();
                    this.displayOutputFieldSpecified = false;
                }
                else {
                    this.displayOutputField = value;
                    this.displayOutputFieldSpecified = this.DisplayOutput.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InputDataType InputData {
            get {
                return this.inputDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(InputDataType))
                            || false)) {
                    this.inputDataField = new InputDataType();
                    this.inputDataFieldSpecified = false;
                }
                else {
                    this.inputDataField = value;
                    this.inputDataFieldSpecified = this.InputData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DisplayOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.displayOutputFieldSpecified || this.DisplayOutput.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.displayOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InputDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.inputDataFieldSpecified || this.InputData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.inputDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.DisplayOutput != default(DisplayOutputType))
                            && this.DisplayOutputSpecified))
                            || ((this.InputData != default(InputDataType))
                            && this.InputDataSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string InputRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "InputRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("5b8782a7-a800-4133-8f37-06168f134f5e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class InputResponseType : IInputResponseType {
        private OutputResultType outputResultField = new OutputResultType();
        private InputResultType inputResultField = new InputResultType();
        private bool outputResultFieldSpecified = false;
        private bool inputResultFieldSpecified = false;
        public InputResponseType() {
        }
        public InputResponseType(InputResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(InputResponseType))) {
            }
            else {
                this.OutputResult = value.OutputResult;
                this.InputResult = value.InputResult;
                this.OutputResultSpecified = value.OutputResultSpecified;
                this.InputResultSpecified = value.InputResultSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputResultType OutputResult {
            get {
                return this.outputResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OutputResultType))
                            || false)) {
                    this.outputResultField = new OutputResultType();
                    this.outputResultFieldSpecified = false;
                }
                else {
                    this.outputResultField = value;
                    this.outputResultFieldSpecified = this.OutputResult.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InputResultType InputResult {
            get {
                return this.inputResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(InputResultType))
                            || false)) {
                    this.inputResultField = new InputResultType();
                    this.inputResultFieldSpecified = false;
                }
                else {
                    this.inputResultField = value;
                    this.inputResultFieldSpecified = this.InputResult.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputResultFieldSpecified || this.OutputResult.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InputResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.inputResultFieldSpecified || this.InputResult.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.inputResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.OutputResult != default(OutputResultType))
                            && this.OutputResultSpecified))
                            || ((this.InputResult != default(InputResultType))
                            && this.InputResultSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string InputResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "InputResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("773fce02-0cdc-42a9-8750-2d8711510a2c")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class InputResultType : IInputResultType {
        private ResponseType responseField = new ResponseType();
        private InputType inputField = new InputType();
        private string deviceField = default(string);
        private string infoQualifyField = default(string);
        private bool responseFieldSpecified = false;
        private bool inputFieldSpecified = false;
        private bool deviceFieldSpecified = false;
        private bool infoQualifyFieldSpecified = false;
        public InputResultType() {
        }
        public InputResultType(InputResultType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(InputResultType))) {
            }
            else {
                this.Response = value.Response;
                this.Input = value.Input;
                this.Device = value.Device;
                this.InfoQualify = value.InfoQualify;
                this.ResponseSpecified = value.ResponseSpecified;
                this.InputSpecified = value.InputSpecified;
                this.DeviceSpecified = value.DeviceSpecified;
                this.InfoQualifySpecified = value.InfoQualifySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InputType Input {
            get {
                return this.inputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(InputType))
                            || false)) {
                    this.inputField = new InputType();
                    this.inputFieldSpecified = false;
                }
                else {
                    this.inputField = value;
                    this.inputFieldSpecified = this.Input.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Device {
            get {
                return this.deviceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.deviceField = default(string);
                    this.deviceFieldSpecified = false;
                }
                else {
                    this.deviceField = value;
                    this.deviceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InfoQualify {
            get {
                return this.infoQualifyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.infoQualifyField = default(string);
                    this.infoQualifyFieldSpecified = false;
                }
                else {
                    this.infoQualifyField = value;
                    this.infoQualifyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.inputFieldSpecified || this.Input.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.inputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DeviceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.deviceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.deviceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool InfoQualifySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.infoQualifyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.infoQualifyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.Input != default(InputType))
                            && this.InputSpecified))
                            || ((this.Device != default(string))
                            && this.DeviceSpecified))
                            || ((this.InfoQualify != default(string))
                            && this.InfoQualifySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string InputResultTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "InputResultType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("1ff09f0b-8e70-4b4a-8055-1d08deae5e1e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class InputUpdateType : IInputUpdateType {
        private MessageReferenceType messageReferenceField = new MessageReferenceType();
        private OutputContentType outputContentField = new OutputContentType();
        private MenuEntryType[] menuEntryField = new MenuEntryType[0];
        private byte[] outputSignatureField = new byte[0];
        private int minLengthField = default(int);
        private int maxLengthField = default(int);
        private int maxDecimalLengthField = default(int);
        private bool messageReferenceFieldSpecified = false;
        private bool outputContentFieldSpecified = false;
        private bool menuEntryFieldSpecified = false;
        private bool outputSignatureFieldSpecified = false;
        private bool minLengthFieldSpecified = false;
        private bool maxLengthFieldSpecified = false;
        private bool maxDecimalLengthFieldSpecified = false;
        public InputUpdateType() {
        }
        public InputUpdateType(InputUpdateType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(InputUpdateType))) {
            }
            else {
                this.MessageReference = value.MessageReference;
                this.OutputContent = value.OutputContent;
                this.MenuEntry = value.MenuEntry;
                this.OutputSignature = value.OutputSignature;
                this.MinLength = value.MinLength;
                this.MaxLength = value.MaxLength;
                this.MaxDecimalLength = value.MaxDecimalLength;
                this.MessageReferenceSpecified = value.MessageReferenceSpecified;
                this.OutputContentSpecified = value.OutputContentSpecified;
                this.MenuEntrySpecified = value.MenuEntrySpecified;
                this.OutputSignatureSpecified = value.OutputSignatureSpecified;
                this.MinLengthSpecified = value.MinLengthSpecified;
                this.MaxLengthSpecified = value.MaxLengthSpecified;
                this.MaxDecimalLengthSpecified = value.MaxDecimalLengthSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageReferenceType MessageReference {
            get {
                return this.messageReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MessageReferenceType))
                            || false)) {
                    this.messageReferenceField = new MessageReferenceType();
                    this.messageReferenceFieldSpecified = false;
                }
                else {
                    this.messageReferenceField = value;
                    this.messageReferenceFieldSpecified = this.MessageReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputContentType OutputContent {
            get {
                return this.outputContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OutputContentType))
                            || false)) {
                    this.outputContentField = new OutputContentType();
                    this.outputContentFieldSpecified = false;
                }
                else {
                    this.outputContentField = value;
                    this.outputContentFieldSpecified = this.OutputContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MenuEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MenuEntryType[] MenuEntry {
            get {
                return this.menuEntryField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(MenuEntryType[]))
                            || false)) {
                    this.menuEntryField = new MenuEntryType[0];
                    this.menuEntryFieldSpecified = false;
                }
                else {
                    this.menuEntryField = value;
                    this.menuEntryFieldSpecified = (this.MenuEntryLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] OutputSignature {
            get {
                return this.outputSignatureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.outputSignatureField = new byte[0];
                    this.outputSignatureFieldSpecified = false;
                }
                else {
                    this.outputSignatureField = value;
                    this.outputSignatureFieldSpecified = (this.OutputSignatureLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MinLength {
            get {
                return this.minLengthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.minLengthField = default(int);
                    this.minLengthFieldSpecified = false;
                }
                else {
                    this.minLengthField = value;
                    this.minLengthFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxLength {
            get {
                return this.maxLengthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxLengthField = default(int);
                    this.maxLengthFieldSpecified = false;
                }
                else {
                    this.maxLengthField = value;
                    this.maxLengthFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxDecimalLength {
            get {
                return this.maxDecimalLengthField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxDecimalLengthField = default(int);
                    this.maxDecimalLengthFieldSpecified = false;
                }
                else {
                    this.maxDecimalLengthField = value;
                    this.maxDecimalLengthFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageReferenceFieldSpecified || this.MessageReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputContentFieldSpecified || this.OutputContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MenuEntrySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.menuEntryFieldSpecified
                            || (this.MenuEntryLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.menuEntryFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputSignatureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputSignatureFieldSpecified
                            || (this.OutputSignatureLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputSignatureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MinLengthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.minLengthFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.minLengthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxLengthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxLengthFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxLengthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxDecimalLengthSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxDecimalLengthFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxDecimalLengthFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.MessageReference != default(MessageReferenceType))
                            && this.MessageReferenceSpecified))
                            || ((this.OutputContent != default(OutputContentType))
                            && this.OutputContentSpecified))
                            || (this.MenuEntryLength() != 0))
                            || (this.OutputSignatureLength() != 0))
                            || ((this.MinLength != default(int))
                            && this.MinLengthSpecified))
                            || ((this.MaxLength != default(int))
                            && this.MaxLengthSpecified))
                            || ((this.MaxDecimalLength != default(int))
                            && this.MaxDecimalLengthSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string InputUpdateTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "InputUpdateType";
                // END ADDED BY XSD
            }
        }
        public int MenuEntryLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.menuEntryField == default(MenuEntryType[]))) {
                return 0;
            }
            else {
                return this.menuEntryField.Length;
            }
            // END ADDED BY XSD
        }
        public MenuEntryType MenuEntryGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return default(MenuEntryType);
                }
                else {
                    if ((0 > index)) {
                        return default(MenuEntryType);
                    }
                    else {
                        if ((this.menuEntryField.Length <= index)) {
                            return default(MenuEntryType);
                        }
                        else {
                            return this.menuEntryField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(MenuEntryType);
            }
            // END ADDED BY XSD
        }
        public bool MenuEntrySetItem(int index, MenuEntryType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.menuEntryField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.menuEntryField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MenuEntryAddItem(MenuEntryType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return false;
                }
                else {
                    MenuEntryType[] array = new MenuEntryType[(this.menuEntryField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.menuEntryField.Length); i = (i + 1)) {
                        array[i] = menuEntryField[i];
                    }
                    array[i] = value;
                    this.MenuEntry = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MenuEntryRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.menuEntryField.Length <= index)) {
                            return false;
                        }
                        else {
                            MenuEntryType[] array = new MenuEntryType[(this.menuEntryField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = menuEntryField[i];
                            }
                            for (i = (i + 1); (i < this.menuEntryField.Length); i = (i + 1)) {
                                array[i] = menuEntryField[i];
                            }
                            this.MenuEntry = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int MenuEntryInsertItem(int index, MenuEntryType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.menuEntryField == default(MenuEntryType[]))) {
                    return -1;
                }
                else {
                    if ((this.menuEntryField.Length <= index)) {
                        if ((this.MenuEntryAddItem(value) == true)) {
                            return this.MenuEntryLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        MenuEntryType[] array = new MenuEntryType[(this.menuEntryField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = menuEntryField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.menuEntryField.Length); j = (j + 1)) {
                            array[k] = menuEntryField[j];
                            k = (k + 1);
                        }
                        this.MenuEntry = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int OutputSignatureLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputSignatureField == default(byte[]))) {
                return 0;
            }
            else {
                return this.outputSignatureField.Length;
            }
            // END ADDED BY XSD
        }
        public byte OutputSignatureGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.outputSignatureField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputSignatureField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.outputSignatureField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputSignatureField.Length); i = (i + 1)) {
                        array[i] = outputSignatureField[i];
                    }
                    array[i] = value;
                    this.OutputSignature = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.outputSignatureField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputSignatureField[i];
                            }
                            for (i = (i + 1); (i < this.outputSignatureField.Length); i = (i + 1)) {
                                array[i] = outputSignatureField[i];
                            }
                            this.OutputSignature = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputSignatureInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.outputSignatureField.Length <= index)) {
                        if ((this.OutputSignatureAddItem(value) == true)) {
                            return this.OutputSignatureLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.outputSignatureField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputSignatureField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputSignatureField.Length); j = (j + 1)) {
                            array[k] = outputSignatureField[j];
                            k = (k + 1);
                        }
                        this.OutputSignature = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum InstalmentTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        DeferredInstalments,
        /// <remarks/>
        EqualInstalments,
        /// <remarks/>
        InequalInstalments,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("1ac56d79-acff-4fec-aea8-4e9300bc3df1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoginRequestType : ILoginRequestType {
        private string dateTimeField = default(string);
        private SaleSoftwareType saleSoftwareField = new SaleSoftwareType();
        private SaleTerminalDataType saleTerminalDataField = new SaleTerminalDataType();
        private bool trainingModeFlagField = default(bool);
        private string operatorLanguageField = default(string);
        private string operatorIDField = default(string);
        private string shiftNumberField = default(string);
        private string tokenRequestedTypeField = default(string);
        private string[] customerOrderReqField = new string[0];
        private string pOISerialNumberField = default(string);
        private bool dateTimeFieldSpecified = false;
        private bool saleSoftwareFieldSpecified = false;
        private bool saleTerminalDataFieldSpecified = false;
        private bool trainingModeFlagDefaultValue = false;
        private bool trainingModeFlagFieldSpecified = false;
        private bool operatorLanguageFieldSpecified = false;
        private bool operatorIDFieldSpecified = false;
        private bool shiftNumberFieldSpecified = false;
        private bool tokenRequestedTypeFieldSpecified = false;
        private bool customerOrderReqFieldSpecified = false;
        private bool pOISerialNumberFieldSpecified = false;
        public LoginRequestType() {
            this.trainingModeFlagField = this.trainingModeFlagDefaultValue;
        }
        public LoginRequestType(LoginRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoginRequestType))) {
            }
            else {
                this.DateTime = value.DateTime;
                this.SaleSoftware = value.SaleSoftware;
                this.SaleTerminalData = value.SaleTerminalData;
                this.TrainingModeFlag = value.TrainingModeFlag;
                this.OperatorLanguage = value.OperatorLanguage;
                this.OperatorID = value.OperatorID;
                this.ShiftNumber = value.ShiftNumber;
                this.TokenRequestedType = value.TokenRequestedType;
                this.CustomerOrderReq = value.CustomerOrderReq;
                this.POISerialNumber = value.POISerialNumber;
                this.DateTimeSpecified = value.DateTimeSpecified;
                this.SaleSoftwareSpecified = value.SaleSoftwareSpecified;
                this.SaleTerminalDataSpecified = value.SaleTerminalDataSpecified;
                this.TrainingModeFlagSpecified = value.TrainingModeFlagSpecified;
                this.OperatorLanguageSpecified = value.OperatorLanguageSpecified;
                this.OperatorIDSpecified = value.OperatorIDSpecified;
                this.ShiftNumberSpecified = value.ShiftNumberSpecified;
                this.TokenRequestedTypeSpecified = value.TokenRequestedTypeSpecified;
                this.CustomerOrderReqSpecified = value.CustomerOrderReqSpecified;
                this.POISerialNumberSpecified = value.POISerialNumberSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.dateTimeField = default(string);
                    this.dateTimeFieldSpecified = false;
                }
                else {
                    this.dateTimeField = value;
                    this.dateTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleSoftwareType SaleSoftware {
            get {
                return this.saleSoftwareField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleSoftwareType))
                            || false)) {
                    this.saleSoftwareField = new SaleSoftwareType();
                    this.saleSoftwareFieldSpecified = false;
                }
                else {
                    this.saleSoftwareField = value;
                    this.saleSoftwareFieldSpecified = this.SaleSoftware.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleTerminalDataType SaleTerminalData {
            get {
                return this.saleTerminalDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleTerminalDataType))
                            || false)) {
                    this.saleTerminalDataField = new SaleTerminalDataType();
                    this.saleTerminalDataFieldSpecified = false;
                }
                else {
                    this.saleTerminalDataField = value;
                    this.saleTerminalDataFieldSpecified = this.SaleTerminalData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool TrainingModeFlag {
            get {
                return this.trainingModeFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.TrainingModeFlagDefaultValue)
                            || false)) {
                    this.trainingModeFlagField = this.TrainingModeFlagDefaultValue;
                    this.trainingModeFlagFieldSpecified = false;
                }
                else {
                    this.trainingModeFlagField = value;
                    this.trainingModeFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OperatorLanguage {
            get {
                return this.operatorLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.operatorLanguageField = default(string);
                    this.operatorLanguageFieldSpecified = false;
                }
                else {
                    this.operatorLanguageField = value;
                    this.operatorLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OperatorID {
            get {
                return this.operatorIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.operatorIDField = default(string);
                    this.operatorIDFieldSpecified = false;
                }
                else {
                    this.operatorIDField = value;
                    this.operatorIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShiftNumber {
            get {
                return this.shiftNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.shiftNumberField = default(string);
                    this.shiftNumberFieldSpecified = false;
                }
                else {
                    this.shiftNumberField = value;
                    this.shiftNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TokenRequestedType {
            get {
                return this.tokenRequestedTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.tokenRequestedTypeField = default(string);
                    this.tokenRequestedTypeFieldSpecified = false;
                }
                else {
                    this.tokenRequestedTypeField = value;
                    this.tokenRequestedTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] CustomerOrderReq {
            get {
                return this.customerOrderReqField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.customerOrderReqField = new string[0];
                    this.customerOrderReqFieldSpecified = false;
                }
                else {
                    this.customerOrderReqField = value;
                    this.customerOrderReqFieldSpecified = (this.CustomerOrderReqLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POISerialNumber {
            get {
                return this.pOISerialNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOISerialNumberField = default(string);
                    this.pOISerialNumberFieldSpecified = false;
                }
                else {
                    this.pOISerialNumberField = value;
                    this.pOISerialNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DateTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.dateTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.dateTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleSoftwareSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleSoftwareFieldSpecified || this.SaleSoftware.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleSoftwareFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleTerminalDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleTerminalDataFieldSpecified || this.SaleTerminalData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleTerminalDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TrainingModeFlagDefaultValue {
            get {
                return this.trainingModeFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TrainingModeFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.trainingModeFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.trainingModeFlagFieldSpecified = value;
                if ((this.trainingModeFlagFieldSpecified
                            && (this.trainingModeFlagField == default(bool)))) {
                    this.trainingModeFlagField = this.trainingModeFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OperatorLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.operatorLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.operatorLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OperatorIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.operatorIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.operatorIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ShiftNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.shiftNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.shiftNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TokenRequestedTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.tokenRequestedTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.tokenRequestedTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderReqSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderReqFieldSpecified
                            || (this.CustomerOrderReqLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderReqFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POISerialNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOISerialNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOISerialNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((((false
                            || ((this.SaleSoftware != default(SaleSoftwareType))
                            && this.SaleSoftwareSpecified))
                            || ((this.SaleTerminalData != default(SaleTerminalDataType))
                            && this.SaleTerminalDataSpecified))
                            || (this.CustomerOrderReqLength() != 0))
                            || ((this.DateTime != default(string))
                            && this.DateTimeSpecified))
                            || ((this.TrainingModeFlag != default(bool))
                            && this.TrainingModeFlagSpecified))
                            || ((this.OperatorLanguage != default(string))
                            && this.OperatorLanguageSpecified))
                            || ((this.OperatorID != default(string))
                            && this.OperatorIDSpecified))
                            || ((this.ShiftNumber != default(string))
                            && this.ShiftNumberSpecified))
                            || ((this.TokenRequestedType != default(string))
                            && this.TokenRequestedTypeSpecified))
                            || ((this.POISerialNumber != default(string))
                            && this.POISerialNumberSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoginRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoginRequestType";
                // END ADDED BY XSD
            }
        }
        public int CustomerOrderReqLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.customerOrderReqField == default(string[]))) {
                return 0;
            }
            else {
                return this.customerOrderReqField.Length;
            }
            // END ADDED BY XSD
        }
        public string CustomerOrderReqGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.customerOrderReqField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.customerOrderReqField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderReqSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderReqField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.customerOrderReqField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderReqAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.customerOrderReqField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.customerOrderReqField.Length); i = (i + 1)) {
                        array[i] = customerOrderReqField[i];
                    }
                    array[i] = value;
                    this.CustomerOrderReq = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderReqRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderReqField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.customerOrderReqField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = customerOrderReqField[i];
                            }
                            for (i = (i + 1); (i < this.customerOrderReqField.Length); i = (i + 1)) {
                                array[i] = customerOrderReqField[i];
                            }
                            this.CustomerOrderReq = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderReqInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.customerOrderReqField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.customerOrderReqField.Length <= index)) {
                        if ((this.CustomerOrderReqAddItem(value) == true)) {
                            return this.CustomerOrderReqLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.customerOrderReqField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = customerOrderReqField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.customerOrderReqField.Length); j = (j + 1)) {
                            array[k] = customerOrderReqField[j];
                            k = (k + 1);
                        }
                        this.CustomerOrderReq = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("b5316c3c-6c82-4724-802c-68f5388f3389")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleSoftwareType : ISaleSoftwareType {
        private string providerIdentificationField = default(string);
        private string applicationNameField = default(string);
        private string softwareVersionField = default(string);
        private string certificationCodeField = default(string);
        private string componentDescriptionField = default(string);
        private string componentTypeField = default(string);
        private bool providerIdentificationFieldSpecified = false;
        private bool applicationNameFieldSpecified = false;
        private bool softwareVersionFieldSpecified = false;
        private bool certificationCodeFieldSpecified = false;
        private bool componentDescriptionFieldSpecified = false;
        private bool componentTypeFieldSpecified = false;
        public SaleSoftwareType() {
        }
        public SaleSoftwareType(SaleSoftwareType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleSoftwareType))) {
            }
            else {
                this.ProviderIdentification = value.ProviderIdentification;
                this.ApplicationName = value.ApplicationName;
                this.SoftwareVersion = value.SoftwareVersion;
                this.CertificationCode = value.CertificationCode;
                this.ComponentDescription = value.ComponentDescription;
                this.ComponentType = value.ComponentType;
                this.ProviderIdentificationSpecified = value.ProviderIdentificationSpecified;
                this.ApplicationNameSpecified = value.ApplicationNameSpecified;
                this.SoftwareVersionSpecified = value.SoftwareVersionSpecified;
                this.CertificationCodeSpecified = value.CertificationCodeSpecified;
                this.ComponentDescriptionSpecified = value.ComponentDescriptionSpecified;
                this.ComponentTypeSpecified = value.ComponentTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProviderIdentification {
            get {
                return this.providerIdentificationField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.providerIdentificationField = default(string);
                    this.providerIdentificationFieldSpecified = false;
                }
                else {
                    this.providerIdentificationField = value;
                    this.providerIdentificationFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.applicationNameField = default(string);
                    this.applicationNameFieldSpecified = false;
                }
                else {
                    this.applicationNameField = value;
                    this.applicationNameFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SoftwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.softwareVersionField = default(string);
                    this.softwareVersionFieldSpecified = false;
                }
                else {
                    this.softwareVersionField = value;
                    this.softwareVersionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CertificationCode {
            get {
                return this.certificationCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.certificationCodeField = default(string);
                    this.certificationCodeFieldSpecified = false;
                }
                else {
                    this.certificationCodeField = value;
                    this.certificationCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ComponentDescription {
            get {
                return this.componentDescriptionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.componentDescriptionField = default(string);
                    this.componentDescriptionFieldSpecified = false;
                }
                else {
                    this.componentDescriptionField = value;
                    this.componentDescriptionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ComponentType {
            get {
                return this.componentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.componentTypeField = default(string);
                    this.componentTypeFieldSpecified = false;
                }
                else {
                    this.componentTypeField = value;
                    this.componentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProviderIdentificationSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.providerIdentificationFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.providerIdentificationFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ApplicationNameSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.applicationNameFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.applicationNameFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SoftwareVersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.softwareVersionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.softwareVersionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CertificationCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.certificationCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.certificationCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ComponentDescriptionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.componentDescriptionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.componentDescriptionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ComponentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.componentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.componentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.ProviderIdentification != default(string))
                            && this.ProviderIdentificationSpecified))
                            || ((this.ApplicationName != default(string))
                            && this.ApplicationNameSpecified))
                            || ((this.SoftwareVersion != default(string))
                            && this.SoftwareVersionSpecified))
                            || ((this.CertificationCode != default(string))
                            && this.CertificationCodeSpecified))
                            || ((this.ComponentDescription != default(string))
                            && this.ComponentDescriptionSpecified))
                            || ((this.ComponentType != default(string))
                            && this.ComponentTypeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleSoftwareTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleSoftwareType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("664f48ab-602c-4111-afc2-e370168b71cf")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoginResponseType : ILoginResponseType {
        private ResponseType responseField = new ResponseType();
        private POISystemDataType pOISystemDataField = new POISystemDataType();
        private bool responseFieldSpecified = false;
        private bool pOISystemDataFieldSpecified = false;
        public LoginResponseType() {
        }
        public LoginResponseType(LoginResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoginResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.POISystemData = value.POISystemData;
                this.ResponseSpecified = value.ResponseSpecified;
                this.POISystemDataSpecified = value.POISystemDataSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POISystemDataType POISystemData {
            get {
                return this.pOISystemDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POISystemDataType))
                            || false)) {
                    this.pOISystemDataField = new POISystemDataType();
                    this.pOISystemDataFieldSpecified = false;
                }
                else {
                    this.pOISystemDataField = value;
                    this.pOISystemDataFieldSpecified = this.POISystemData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POISystemDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOISystemDataFieldSpecified || this.POISystemData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOISystemDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.POISystemData != default(POISystemDataType))
                            && this.POISystemDataSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoginResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoginResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("6f60125e-d5f5-4e3a-9888-fddf8ae0a77b")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class POISystemDataType : IPOISystemDataType {
        private string dateTimeField = default(string);
        private POISoftwareType pOISoftwareField = new POISoftwareType();
        private POITerminalDataType pOITerminalDataField = new POITerminalDataType();
        private POIStatusType pOIStatusField = new POIStatusType();
        private bool tokenRequestStatusField = default(bool);
        private bool tokenRequestStatusFieldSpecified = default(bool);
        private bool customerOrderStatusField = default(bool);
        private bool customerOrderStatusFieldSpecified = default(bool);
        private bool dateTimeFieldSpecified = false;
        private bool pOISoftwareFieldSpecified = false;
        private bool pOITerminalDataFieldSpecified = false;
        private bool pOIStatusFieldSpecified = false;
        public POISystemDataType() {
        }
        public POISystemDataType(POISystemDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(POISystemDataType))) {
            }
            else {
                this.DateTime = value.DateTime;
                this.POISoftware = value.POISoftware;
                this.POITerminalData = value.POITerminalData;
                this.POIStatus = value.POIStatus;
                this.TokenRequestStatus = value.TokenRequestStatus;
                this.TokenRequestStatusSpecified = value.TokenRequestStatusSpecified;
                this.CustomerOrderStatus = value.CustomerOrderStatus;
                this.CustomerOrderStatusSpecified = value.CustomerOrderStatusSpecified;
                this.DateTimeSpecified = value.DateTimeSpecified;
                this.POISoftwareSpecified = value.POISoftwareSpecified;
                this.POITerminalDataSpecified = value.POITerminalDataSpecified;
                this.POIStatusSpecified = value.POIStatusSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.dateTimeField = default(string);
                    this.dateTimeFieldSpecified = false;
                }
                else {
                    this.dateTimeField = value;
                    this.dateTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POISoftwareType POISoftware {
            get {
                return this.pOISoftwareField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POISoftwareType))
                            || false)) {
                    this.pOISoftwareField = new POISoftwareType();
                    this.pOISoftwareFieldSpecified = false;
                }
                else {
                    this.pOISoftwareField = value;
                    this.pOISoftwareFieldSpecified = this.POISoftware.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POITerminalDataType POITerminalData {
            get {
                return this.pOITerminalDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POITerminalDataType))
                            || false)) {
                    this.pOITerminalDataField = new POITerminalDataType();
                    this.pOITerminalDataFieldSpecified = false;
                }
                else {
                    this.pOITerminalDataField = value;
                    this.pOITerminalDataFieldSpecified = this.POITerminalData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIStatusType POIStatus {
            get {
                return this.pOIStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIStatusType))
                            || false)) {
                    this.pOIStatusField = new POIStatusType();
                    this.pOIStatusFieldSpecified = false;
                }
                else {
                    this.pOIStatusField = value;
                    this.pOIStatusFieldSpecified = this.POIStatus.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool TokenRequestStatus {
            get {
                return this.tokenRequestStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.tokenRequestStatusField = default(bool);
                    this.tokenRequestStatusFieldSpecified = false;
                }
                else {
                    this.tokenRequestStatusField = value;
                    this.tokenRequestStatusFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TokenRequestStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.tokenRequestStatusFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.tokenRequestStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CustomerOrderStatus {
            get {
                return this.customerOrderStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(bool))
                            || false)) {
                    this.customerOrderStatusField = default(bool);
                    this.customerOrderStatusFieldSpecified = false;
                }
                else {
                    this.customerOrderStatusField = value;
                    this.customerOrderStatusFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerOrderStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderStatusFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DateTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.dateTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.dateTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POISoftwareSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOISoftwareFieldSpecified || this.POISoftware.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOISoftwareFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POITerminalDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOITerminalDataFieldSpecified || this.POITerminalData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOITerminalDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIStatusFieldSpecified || this.POIStatus.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.POISoftware != default(POISoftwareType))
                            && this.POISoftwareSpecified))
                            || ((this.POITerminalData != default(POITerminalDataType))
                            && this.POITerminalDataSpecified))
                            || ((this.POIStatus != default(POIStatusType))
                            && this.POIStatusSpecified))
                            || ((this.DateTime != default(string))
                            && this.DateTimeSpecified))
                            || ((this.TokenRequestStatus != default(bool))
                            && this.TokenRequestStatusSpecified))
                            || ((this.CustomerOrderStatus != default(bool))
                            && this.CustomerOrderStatusSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string POISystemDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "POISystemDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("f5b0be32-f788-4070-b51b-19b1b6db4362")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class POISoftwareType : IPOISoftwareType {
        private string providerIdentificationField = default(string);
        private string applicationNameField = default(string);
        private string softwareVersionField = default(string);
        private string certificationCodeField = default(string);
        private string componentDescriptionField = default(string);
        private string componentTypeField = default(string);
        private bool providerIdentificationFieldSpecified = false;
        private bool applicationNameFieldSpecified = false;
        private bool softwareVersionFieldSpecified = false;
        private bool certificationCodeFieldSpecified = false;
        private bool componentDescriptionFieldSpecified = false;
        private bool componentTypeFieldSpecified = false;
        public POISoftwareType() {
        }
        public POISoftwareType(POISoftwareType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(POISoftwareType))) {
            }
            else {
                this.ProviderIdentification = value.ProviderIdentification;
                this.ApplicationName = value.ApplicationName;
                this.SoftwareVersion = value.SoftwareVersion;
                this.CertificationCode = value.CertificationCode;
                this.ComponentDescription = value.ComponentDescription;
                this.ComponentType = value.ComponentType;
                this.ProviderIdentificationSpecified = value.ProviderIdentificationSpecified;
                this.ApplicationNameSpecified = value.ApplicationNameSpecified;
                this.SoftwareVersionSpecified = value.SoftwareVersionSpecified;
                this.CertificationCodeSpecified = value.CertificationCodeSpecified;
                this.ComponentDescriptionSpecified = value.ComponentDescriptionSpecified;
                this.ComponentTypeSpecified = value.ComponentTypeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProviderIdentification {
            get {
                return this.providerIdentificationField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.providerIdentificationField = default(string);
                    this.providerIdentificationFieldSpecified = false;
                }
                else {
                    this.providerIdentificationField = value;
                    this.providerIdentificationFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.applicationNameField = default(string);
                    this.applicationNameFieldSpecified = false;
                }
                else {
                    this.applicationNameField = value;
                    this.applicationNameFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SoftwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.softwareVersionField = default(string);
                    this.softwareVersionFieldSpecified = false;
                }
                else {
                    this.softwareVersionField = value;
                    this.softwareVersionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CertificationCode {
            get {
                return this.certificationCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.certificationCodeField = default(string);
                    this.certificationCodeFieldSpecified = false;
                }
                else {
                    this.certificationCodeField = value;
                    this.certificationCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ComponentDescription {
            get {
                return this.componentDescriptionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.componentDescriptionField = default(string);
                    this.componentDescriptionFieldSpecified = false;
                }
                else {
                    this.componentDescriptionField = value;
                    this.componentDescriptionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ComponentType {
            get {
                return this.componentTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.componentTypeField = default(string);
                    this.componentTypeFieldSpecified = false;
                }
                else {
                    this.componentTypeField = value;
                    this.componentTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProviderIdentificationSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.providerIdentificationFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.providerIdentificationFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ApplicationNameSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.applicationNameFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.applicationNameFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SoftwareVersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.softwareVersionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.softwareVersionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CertificationCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.certificationCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.certificationCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ComponentDescriptionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.componentDescriptionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.componentDescriptionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ComponentTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.componentTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.componentTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.ProviderIdentification != default(string))
                            && this.ProviderIdentificationSpecified))
                            || ((this.ApplicationName != default(string))
                            && this.ApplicationNameSpecified))
                            || ((this.SoftwareVersion != default(string))
                            && this.SoftwareVersionSpecified))
                            || ((this.CertificationCode != default(string))
                            && this.CertificationCodeSpecified))
                            || ((this.ComponentDescription != default(string))
                            && this.ComponentDescriptionSpecified))
                            || ((this.ComponentType != default(string))
                            && this.ComponentTypeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string POISoftwareTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "POISoftwareType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("d40417e3-c05e-4be2-9339-f7d1916f5b48")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class POITerminalDataType : IPOITerminalDataType {
        private string pOICapabilitiesField = default(string);
        private POIProfileType pOIProfileField = new POIProfileType();
        private string terminalEnvironmentField = default(string);
        private string pOISerialNumberField = default(string);
        private bool pOICapabilitiesFieldSpecified = false;
        private bool pOIProfileFieldSpecified = false;
        private bool terminalEnvironmentFieldSpecified = false;
        private bool pOISerialNumberFieldSpecified = false;
        public POITerminalDataType() {
        }
        public POITerminalDataType(POITerminalDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(POITerminalDataType))) {
            }
            else {
                this.POICapabilities = value.POICapabilities;
                this.POIProfile = value.POIProfile;
                this.TerminalEnvironment = value.TerminalEnvironment;
                this.POISerialNumber = value.POISerialNumber;
                this.POICapabilitiesSpecified = value.POICapabilitiesSpecified;
                this.POIProfileSpecified = value.POIProfileSpecified;
                this.TerminalEnvironmentSpecified = value.TerminalEnvironmentSpecified;
                this.POISerialNumberSpecified = value.POISerialNumberSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string POICapabilities {
            get {
                return this.pOICapabilitiesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOICapabilitiesField = default(string);
                    this.pOICapabilitiesFieldSpecified = false;
                }
                else {
                    this.pOICapabilitiesField = value;
                    this.pOICapabilitiesFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIProfileType POIProfile {
            get {
                return this.pOIProfileField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIProfileType))
                            || false)) {
                    this.pOIProfileField = new POIProfileType();
                    this.pOIProfileFieldSpecified = false;
                }
                else {
                    this.pOIProfileField = value;
                    this.pOIProfileFieldSpecified = this.POIProfile.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TerminalEnvironment {
            get {
                return this.terminalEnvironmentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.terminalEnvironmentField = default(string);
                    this.terminalEnvironmentFieldSpecified = false;
                }
                else {
                    this.terminalEnvironmentField = value;
                    this.terminalEnvironmentFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POISerialNumber {
            get {
                return this.pOISerialNumberField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOISerialNumberField = default(string);
                    this.pOISerialNumberFieldSpecified = false;
                }
                else {
                    this.pOISerialNumberField = value;
                    this.pOISerialNumberFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POICapabilitiesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOICapabilitiesFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOICapabilitiesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIProfileSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIProfileFieldSpecified || this.POIProfile.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIProfileFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TerminalEnvironmentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.terminalEnvironmentFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.terminalEnvironmentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POISerialNumberSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOISerialNumberFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOISerialNumberFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.POIProfile != default(POIProfileType))
                            && this.POIProfileSpecified))
                            || ((this.POICapabilities != default(string))
                            && this.POICapabilitiesSpecified))
                            || ((this.TerminalEnvironment != default(string))
                            && this.TerminalEnvironmentSpecified))
                            || ((this.POISerialNumber != default(string))
                            && this.POISerialNumberSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string POITerminalDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "POITerminalDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("5b1cfa7a-e942-42c4-b48f-9df4e518cd6a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class POIProfileType : IPOIProfileType {
        private string serviceProfilesField = default(string);
        private string genericProfileField = default(string);
        private bool serviceProfilesFieldSpecified = false;
        private string genericProfileDefaultValue = "Standard";
        private bool genericProfileFieldSpecified = false;
        public POIProfileType() {
            this.genericProfileField = this.genericProfileDefaultValue;
        }
        public POIProfileType(POIProfileType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(POIProfileType))) {
            }
            else {
                this.ServiceProfiles = value.ServiceProfiles;
                this.GenericProfile = value.GenericProfile;
                this.ServiceProfilesSpecified = value.ServiceProfilesSpecified;
                this.GenericProfileSpecified = value.GenericProfileSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceProfiles {
            get {
                return this.serviceProfilesField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.serviceProfilesField = default(string);
                    this.serviceProfilesFieldSpecified = false;
                }
                else {
                    this.serviceProfilesField = value;
                    this.serviceProfilesFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("Standard")]
        public string GenericProfile {
            get {
                return this.genericProfileField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.GenericProfileDefaultValue)
                            || (value == default(string)))) {
                    this.genericProfileField = this.GenericProfileDefaultValue;
                    this.genericProfileFieldSpecified = false;
                }
                else {
                    this.genericProfileField = value;
                    this.genericProfileFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ServiceProfilesSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.serviceProfilesFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.serviceProfilesFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string GenericProfileDefaultValue {
            get {
                return this.genericProfileDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool GenericProfileSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.genericProfileFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.genericProfileFieldSpecified = value;
                if ((this.genericProfileFieldSpecified
                            && (this.genericProfileField == default(string)))) {
                    this.genericProfileField = this.genericProfileDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.ServiceProfiles != default(string))
                            && this.ServiceProfilesSpecified))
                            || ((this.GenericProfile != default(string))
                            && this.GenericProfileSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string POIProfileTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "POIProfileType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("2d1f8524-05c1-4b37-b2b7-4662fa84c568")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LogoutRequestType : ILogoutRequestType {
        private bool maintenanceAllowedField = default(bool);
        private bool maintenanceAllowedDefaultValue = false;
        private bool maintenanceAllowedFieldSpecified = false;
        public LogoutRequestType() {
            this.maintenanceAllowedField = this.maintenanceAllowedDefaultValue;
        }
        public LogoutRequestType(LogoutRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LogoutRequestType))) {
            }
            else {
                this.MaintenanceAllowed = value.MaintenanceAllowed;
                this.MaintenanceAllowedSpecified = value.MaintenanceAllowedSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool MaintenanceAllowed {
            get {
                return this.maintenanceAllowedField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.MaintenanceAllowedDefaultValue)
                            || false)) {
                    this.maintenanceAllowedField = this.MaintenanceAllowedDefaultValue;
                    this.maintenanceAllowedFieldSpecified = false;
                }
                else {
                    this.maintenanceAllowedField = value;
                    this.maintenanceAllowedFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaintenanceAllowedDefaultValue {
            get {
                return this.maintenanceAllowedDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaintenanceAllowedSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maintenanceAllowedFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maintenanceAllowedFieldSpecified = value;
                if ((this.maintenanceAllowedFieldSpecified
                            && (this.maintenanceAllowedField == default(bool)))) {
                    this.maintenanceAllowedField = this.maintenanceAllowedDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.MaintenanceAllowed != default(bool))
                            && this.MaintenanceAllowedSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LogoutRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LogoutRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("7dd8dc45-1803-4101-be39-5a10efc2ae41")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LogoutResponseType : ILogoutResponseType {
        private ResponseType responseField = new ResponseType();
        private bool responseFieldSpecified = false;
        public LogoutResponseType() {
        }
        public LogoutResponseType(LogoutResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LogoutResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.ResponseSpecified = value.ResponseSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LogoutResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LogoutResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum LoyaltyHandlingEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Forbidden,
        /// <remarks/>
        Processed,
        /// <remarks/>
        Allowed,
        /// <remarks/>
        Proposed,
        /// <remarks/>
        Required,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3bf3d164-34fe-4c26-965d-ea3308967c81")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class LoyaltyResponseType : ILoyaltyResponseType {
        private ResponseType responseField = new ResponseType();
        private SaleDataType saleDataField = new SaleDataType();
        private POIDataType pOIDataField = new POIDataType();
        private LoyaltyResultType[] loyaltyResultField = new LoyaltyResultType[0];
        private PaymentReceiptType[] paymentReceiptField = new PaymentReceiptType[0];
        private bool responseFieldSpecified = false;
        private bool saleDataFieldSpecified = false;
        private bool pOIDataFieldSpecified = false;
        private bool loyaltyResultFieldSpecified = false;
        private bool paymentReceiptFieldSpecified = false;
        public LoyaltyResponseType() {
        }
        public LoyaltyResponseType(LoyaltyResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(LoyaltyResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.SaleData = value.SaleData;
                this.POIData = value.POIData;
                this.LoyaltyResult = value.LoyaltyResult;
                this.PaymentReceipt = value.PaymentReceipt;
                this.ResponseSpecified = value.ResponseSpecified;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.POIDataSpecified = value.POIDataSpecified;
                this.LoyaltyResultSpecified = value.LoyaltyResultSpecified;
                this.PaymentReceiptSpecified = value.PaymentReceiptSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIDataType POIData {
            get {
                return this.pOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIDataType))
                            || false)) {
                    this.pOIDataField = new POIDataType();
                    this.pOIDataFieldSpecified = false;
                }
                else {
                    this.pOIDataField = value;
                    this.pOIDataFieldSpecified = this.POIData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyResult", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyResultType[] LoyaltyResult {
            get {
                return this.loyaltyResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(LoyaltyResultType[]))
                            || false)) {
                    this.loyaltyResultField = new LoyaltyResultType[0];
                    this.loyaltyResultFieldSpecified = false;
                }
                else {
                    this.loyaltyResultField = value;
                    this.loyaltyResultFieldSpecified = (this.LoyaltyResultLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PaymentReceipt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentReceiptType[] PaymentReceipt {
            get {
                return this.paymentReceiptField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(PaymentReceiptType[]))
                            || false)) {
                    this.paymentReceiptField = new PaymentReceiptType[0];
                    this.paymentReceiptFieldSpecified = false;
                }
                else {
                    this.paymentReceiptField = value;
                    this.paymentReceiptFieldSpecified = (this.PaymentReceiptLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIDataFieldSpecified || this.POIData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyResultFieldSpecified
                            || (this.LoyaltyResultLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentReceiptSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentReceiptFieldSpecified
                            || (this.PaymentReceiptLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentReceiptFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.POIData != default(POIDataType))
                            && this.POIDataSpecified))
                            || (this.LoyaltyResultLength() != 0))
                            || (this.PaymentReceiptLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string LoyaltyResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "LoyaltyResponseType";
                // END ADDED BY XSD
            }
        }
        public int LoyaltyResultLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                return 0;
            }
            else {
                return this.loyaltyResultField.Length;
            }
            // END ADDED BY XSD
        }
        public LoyaltyResultType LoyaltyResultGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return default(LoyaltyResultType);
                }
                else {
                    if ((0 > index)) {
                        return default(LoyaltyResultType);
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return default(LoyaltyResultType);
                        }
                        else {
                            return this.loyaltyResultField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(LoyaltyResultType);
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultSetItem(int index, LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loyaltyResultField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultAddItem(LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loyaltyResultField.Length); i = (i + 1)) {
                        array[i] = loyaltyResultField[i];
                    }
                    array[i] = value;
                    this.LoyaltyResult = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loyaltyResultField[i];
                            }
                            for (i = (i + 1); (i < this.loyaltyResultField.Length); i = (i + 1)) {
                                array[i] = loyaltyResultField[i];
                            }
                            this.LoyaltyResult = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyResultInsertItem(int index, LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return -1;
                }
                else {
                    if ((this.loyaltyResultField.Length <= index)) {
                        if ((this.LoyaltyResultAddItem(value) == true)) {
                            return this.LoyaltyResultLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loyaltyResultField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loyaltyResultField.Length); j = (j + 1)) {
                            array[k] = loyaltyResultField[j];
                            k = (k + 1);
                        }
                        this.LoyaltyResult = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int PaymentReceiptLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                return 0;
            }
            else {
                return this.paymentReceiptField.Length;
            }
            // END ADDED BY XSD
        }
        public PaymentReceiptType PaymentReceiptGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return default(PaymentReceiptType);
                }
                else {
                    if ((0 > index)) {
                        return default(PaymentReceiptType);
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return default(PaymentReceiptType);
                        }
                        else {
                            return this.paymentReceiptField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(PaymentReceiptType);
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptSetItem(int index, PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.paymentReceiptField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptAddItem(PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.paymentReceiptField.Length); i = (i + 1)) {
                        array[i] = paymentReceiptField[i];
                    }
                    array[i] = value;
                    this.PaymentReceipt = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return false;
                        }
                        else {
                            PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = paymentReceiptField[i];
                            }
                            for (i = (i + 1); (i < this.paymentReceiptField.Length); i = (i + 1)) {
                                array[i] = paymentReceiptField[i];
                            }
                            this.PaymentReceipt = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int PaymentReceiptInsertItem(int index, PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return -1;
                }
                else {
                    if ((this.paymentReceiptField.Length <= index)) {
                        if ((this.PaymentReceiptAddItem(value) == true)) {
                            return this.PaymentReceiptLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = paymentReceiptField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.paymentReceiptField.Length); j = (j + 1)) {
                            array[k] = paymentReceiptField[j];
                            k = (k + 1);
                        }
                        this.PaymentReceipt = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3c4814dc-a420-4554-8617-d4aee58486c3")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentReceiptType : IPaymentReceiptType {
        private OutputContentType outputContentField = new OutputContentType();
        private string documentQualifierField = default(string);
        private bool integratedPrintFlagField = default(bool);
        private bool requiredSignatureFlagField = default(bool);
        private bool outputContentFieldSpecified = false;
        private bool documentQualifierFieldSpecified = false;
        private bool integratedPrintFlagDefaultValue = false;
        private bool integratedPrintFlagFieldSpecified = false;
        private bool requiredSignatureFlagDefaultValue = false;
        private bool requiredSignatureFlagFieldSpecified = false;
        public PaymentReceiptType() {
            this.integratedPrintFlagField = this.integratedPrintFlagDefaultValue;
            this.requiredSignatureFlagField = this.requiredSignatureFlagDefaultValue;
        }
        public PaymentReceiptType(PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentReceiptType))) {
            }
            else {
                this.OutputContent = value.OutputContent;
                this.DocumentQualifier = value.DocumentQualifier;
                this.IntegratedPrintFlag = value.IntegratedPrintFlag;
                this.RequiredSignatureFlag = value.RequiredSignatureFlag;
                this.OutputContentSpecified = value.OutputContentSpecified;
                this.DocumentQualifierSpecified = value.DocumentQualifierSpecified;
                this.IntegratedPrintFlagSpecified = value.IntegratedPrintFlagSpecified;
                this.RequiredSignatureFlagSpecified = value.RequiredSignatureFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputContentType OutputContent {
            get {
                return this.outputContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OutputContentType))
                            || false)) {
                    this.outputContentField = new OutputContentType();
                    this.outputContentFieldSpecified = false;
                }
                else {
                    this.outputContentField = value;
                    this.outputContentFieldSpecified = this.OutputContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DocumentQualifier {
            get {
                return this.documentQualifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.documentQualifierField = default(string);
                    this.documentQualifierFieldSpecified = false;
                }
                else {
                    this.documentQualifierField = value;
                    this.documentQualifierFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IntegratedPrintFlag {
            get {
                return this.integratedPrintFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.IntegratedPrintFlagDefaultValue)
                            || false)) {
                    this.integratedPrintFlagField = this.IntegratedPrintFlagDefaultValue;
                    this.integratedPrintFlagFieldSpecified = false;
                }
                else {
                    this.integratedPrintFlagField = value;
                    this.integratedPrintFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool RequiredSignatureFlag {
            get {
                return this.requiredSignatureFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.RequiredSignatureFlagDefaultValue)
                            || false)) {
                    this.requiredSignatureFlagField = this.RequiredSignatureFlagDefaultValue;
                    this.requiredSignatureFlagFieldSpecified = false;
                }
                else {
                    this.requiredSignatureFlagField = value;
                    this.requiredSignatureFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputContentFieldSpecified || this.OutputContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DocumentQualifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.documentQualifierFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.documentQualifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IntegratedPrintFlagDefaultValue {
            get {
                return this.integratedPrintFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IntegratedPrintFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.integratedPrintFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.integratedPrintFlagFieldSpecified = value;
                if ((this.integratedPrintFlagFieldSpecified
                            && (this.integratedPrintFlagField == default(bool)))) {
                    this.integratedPrintFlagField = this.integratedPrintFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RequiredSignatureFlagDefaultValue {
            get {
                return this.requiredSignatureFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RequiredSignatureFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.requiredSignatureFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.requiredSignatureFlagFieldSpecified = value;
                if ((this.requiredSignatureFlagFieldSpecified
                            && (this.requiredSignatureFlagField == default(bool)))) {
                    this.requiredSignatureFlagField = this.requiredSignatureFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.OutputContent != default(OutputContentType))
                            && this.OutputContentSpecified))
                            || ((this.DocumentQualifier != default(string))
                            && this.DocumentQualifierSpecified))
                            || ((this.IntegratedPrintFlag != default(bool))
                            && this.IntegratedPrintFlagSpecified))
                            || ((this.RequiredSignatureFlag != default(bool))
                            && this.RequiredSignatureFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentReceiptTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentReceiptType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum LoyaltyTransactionTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Award,
        /// <remarks/>
        Rebate,
        /// <remarks/>
        Redemption,
        /// <remarks/>
        AwardRefund,
        /// <remarks/>
        RebateRefund,
        /// <remarks/>
        RedemptionRefund,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum LoyaltyUnitEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Point,
        /// <remarks/>
        Monetary,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum MenuEntryTagEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Selectable,
        /// <remarks/>
        NonSelectable,
        /// <remarks/>
        SubMenu,
        /// <remarks/>
        NonSelectableSubMenu,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum MessageCategoryEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Abort,
        /// <remarks/>
        Admin,
        /// <remarks/>
        BalanceInquiry,
        /// <remarks/>
        Batch,
        /// <remarks/>
        CardAcquisition,
        /// <remarks/>
        CardReaderAPDU,
        /// <remarks/>
        CardReaderInit,
        /// <remarks/>
        CardReaderPowerOff,
        /// <remarks/>
        Diagnosis,
        /// <remarks/>
        Display,
        /// <remarks/>
        EnableService,
        /// <remarks/>
        Event,
        /// <remarks/>
        GetTotals,
        /// <remarks/>
        Input,
        /// <remarks/>
        InputUpdate,
        /// <remarks/>
        Login,
        /// <remarks/>
        Logout,
        /// <remarks/>
        Loyalty,
        /// <remarks/>
        Payment,
        /// <remarks/>
        PIN,
        /// <remarks/>
        Print,
        /// <remarks/>
        Reconciliation,
        /// <remarks/>
        Reversal,
        /// <remarks/>
        Sound,
        /// <remarks/>
        StoredValue,
        /// <remarks/>
        TransactionReport,
        /// <remarks/>
        TransactionStatus,
        /// <remarks/>
        Transmit,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum MessageClassEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Service,
        /// <remarks/>
        Device,
        /// <remarks/>
        Event,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("968461bc-1344-44e6-8da7-50b19da13549")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class MessageHeaderType : IMessageHeaderType {
        private string protocolVersionField = default(string);
        private string messageClassField = default(string);
        private string messageCategoryField = default(string);
        private string messageTypeField = default(string);
        private string serviceIDField = default(string);
        private string deviceIDField = default(string);
        private string saleIDField = default(string);
        private string pOIIDField = default(string);
        private bool protocolVersionFieldSpecified = false;
        private bool messageClassFieldSpecified = false;
        private bool messageCategoryFieldSpecified = false;
        private bool messageTypeFieldSpecified = false;
        private bool serviceIDFieldSpecified = false;
        private bool deviceIDFieldSpecified = false;
        private bool saleIDFieldSpecified = false;
        private bool pOIIDFieldSpecified = false;
        public MessageHeaderType() {
        }
        public MessageHeaderType(MessageHeaderType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(MessageHeaderType))) {
            }
            else {
                this.ProtocolVersion = value.ProtocolVersion;
                this.MessageClass = value.MessageClass;
                this.MessageCategory = value.MessageCategory;
                this.MessageType = value.MessageType;
                this.ServiceID = value.ServiceID;
                this.DeviceID = value.DeviceID;
                this.SaleID = value.SaleID;
                this.POIID = value.POIID;
                this.ProtocolVersionSpecified = value.ProtocolVersionSpecified;
                this.MessageClassSpecified = value.MessageClassSpecified;
                this.MessageCategorySpecified = value.MessageCategorySpecified;
                this.MessageTypeSpecified = value.MessageTypeSpecified;
                this.ServiceIDSpecified = value.ServiceIDSpecified;
                this.DeviceIDSpecified = value.DeviceIDSpecified;
                this.SaleIDSpecified = value.SaleIDSpecified;
                this.POIIDSpecified = value.POIIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProtocolVersion {
            get {
                return this.protocolVersionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.protocolVersionField = default(string);
                    this.protocolVersionFieldSpecified = false;
                }
                else {
                    this.protocolVersionField = value;
                    this.protocolVersionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MessageClass {
            get {
                return this.messageClassField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.messageClassField = default(string);
                    this.messageClassFieldSpecified = false;
                }
                else {
                    this.messageClassField = value;
                    this.messageClassFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MessageCategory {
            get {
                return this.messageCategoryField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.messageCategoryField = default(string);
                    this.messageCategoryFieldSpecified = false;
                }
                else {
                    this.messageCategoryField = value;
                    this.messageCategoryFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.messageTypeField = default(string);
                    this.messageTypeFieldSpecified = false;
                }
                else {
                    this.messageTypeField = value;
                    this.messageTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ServiceID {
            get {
                return this.serviceIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.serviceIDField = default(string);
                    this.serviceIDFieldSpecified = false;
                }
                else {
                    this.serviceIDField = value;
                    this.serviceIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.deviceIDField = default(string);
                    this.deviceIDFieldSpecified = false;
                }
                else {
                    this.deviceIDField = value;
                    this.deviceIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleID {
            get {
                return this.saleIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.saleIDField = default(string);
                    this.saleIDFieldSpecified = false;
                }
                else {
                    this.saleIDField = value;
                    this.saleIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIID {
            get {
                return this.pOIIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIIDField = default(string);
                    this.pOIIDFieldSpecified = false;
                }
                else {
                    this.pOIIDField = value;
                    this.pOIIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProtocolVersionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.protocolVersionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.protocolVersionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageClassSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageClassFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageClassFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageCategorySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageCategoryFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageCategoryFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ServiceIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.serviceIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.serviceIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DeviceIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.deviceIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.deviceIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((false
                            || ((this.ProtocolVersion != default(string))
                            && this.ProtocolVersionSpecified))
                            || ((this.MessageClass != default(string))
                            && this.MessageClassSpecified))
                            || ((this.MessageCategory != default(string))
                            && this.MessageCategorySpecified))
                            || ((this.MessageType != default(string))
                            && this.MessageTypeSpecified))
                            || ((this.ServiceID != default(string))
                            && this.ServiceIDSpecified))
                            || ((this.DeviceID != default(string))
                            && this.DeviceIDSpecified))
                            || ((this.SaleID != default(string))
                            && this.SaleIDSpecified))
                            || ((this.POIID != default(string))
                            && this.POIIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string MessageHeaderTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "MessageHeaderType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum MessageTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Request,
        /// <remarks/>
        Response,
        /// <remarks/>
        Notification,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum OperatorEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        EQ,
        /// <remarks/>
        LE,
        /// <remarks/>
        LT,
        /// <remarks/>
        GE,
        /// <remarks/>
        GT,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum OutputFormatEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        MessageRef,
        /// <remarks/>
        Text,
        /// <remarks/>
        XHTML,
        /// <remarks/>
        BarCode,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum PaymentInstrumentTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Card,
        /// <remarks/>
        Check,
        /// <remarks/>
        Mobile,
        /// <remarks/>
        StoredValue,
        /// <remarks/>
        Cash,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("eb898a81-62b7-4f4f-bf82-7377368f65bd")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PaymentResponseType : IPaymentResponseType {
        private ResponseType responseField = new ResponseType();
        private SaleDataType saleDataField = new SaleDataType();
        private POIDataType pOIDataField = new POIDataType();
        private PaymentResultType paymentResultField = new PaymentResultType();
        private LoyaltyResultType[] loyaltyResultField = new LoyaltyResultType[0];
        private PaymentReceiptType[] paymentReceiptField = new PaymentReceiptType[0];
        private CustomerOrderType[] customerOrderField = new CustomerOrderType[0];
        private bool responseFieldSpecified = false;
        private bool saleDataFieldSpecified = false;
        private bool pOIDataFieldSpecified = false;
        private bool paymentResultFieldSpecified = false;
        private bool loyaltyResultFieldSpecified = false;
        private bool paymentReceiptFieldSpecified = false;
        private bool customerOrderFieldSpecified = false;
        public PaymentResponseType() {
        }
        public PaymentResponseType(PaymentResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PaymentResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.SaleData = value.SaleData;
                this.POIData = value.POIData;
                this.PaymentResult = value.PaymentResult;
                this.LoyaltyResult = value.LoyaltyResult;
                this.PaymentReceipt = value.PaymentReceipt;
                this.CustomerOrder = value.CustomerOrder;
                this.ResponseSpecified = value.ResponseSpecified;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.POIDataSpecified = value.POIDataSpecified;
                this.PaymentResultSpecified = value.PaymentResultSpecified;
                this.LoyaltyResultSpecified = value.LoyaltyResultSpecified;
                this.PaymentReceiptSpecified = value.PaymentReceiptSpecified;
                this.CustomerOrderSpecified = value.CustomerOrderSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIDataType POIData {
            get {
                return this.pOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIDataType))
                            || false)) {
                    this.pOIDataField = new POIDataType();
                    this.pOIDataFieldSpecified = false;
                }
                else {
                    this.pOIDataField = value;
                    this.pOIDataFieldSpecified = this.POIData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentResultType PaymentResult {
            get {
                return this.paymentResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentResultType))
                            || false)) {
                    this.paymentResultField = new PaymentResultType();
                    this.paymentResultFieldSpecified = false;
                }
                else {
                    this.paymentResultField = value;
                    this.paymentResultFieldSpecified = this.PaymentResult.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyResult", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public LoyaltyResultType[] LoyaltyResult {
            get {
                return this.loyaltyResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(LoyaltyResultType[]))
                            || false)) {
                    this.loyaltyResultField = new LoyaltyResultType[0];
                    this.loyaltyResultFieldSpecified = false;
                }
                else {
                    this.loyaltyResultField = value;
                    this.loyaltyResultFieldSpecified = (this.LoyaltyResultLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PaymentReceipt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentReceiptType[] PaymentReceipt {
            get {
                return this.paymentReceiptField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(PaymentReceiptType[]))
                            || false)) {
                    this.paymentReceiptField = new PaymentReceiptType[0];
                    this.paymentReceiptFieldSpecified = false;
                }
                else {
                    this.paymentReceiptField = value;
                    this.paymentReceiptFieldSpecified = (this.PaymentReceiptLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomerOrder", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CustomerOrderType[] CustomerOrder {
            get {
                return this.customerOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CustomerOrderType[]))
                            || false)) {
                    this.customerOrderField = new CustomerOrderType[0];
                    this.customerOrderFieldSpecified = false;
                }
                else {
                    this.customerOrderField = value;
                    this.customerOrderFieldSpecified = (this.CustomerOrderLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIDataFieldSpecified || this.POIData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentResultFieldSpecified || this.PaymentResult.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LoyaltyResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.loyaltyResultFieldSpecified
                            || (this.LoyaltyResultLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.loyaltyResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentReceiptSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentReceiptFieldSpecified
                            || (this.PaymentReceiptLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentReceiptFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderFieldSpecified
                            || (this.CustomerOrderLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.POIData != default(POIDataType))
                            && this.POIDataSpecified))
                            || ((this.PaymentResult != default(PaymentResultType))
                            && this.PaymentResultSpecified))
                            || (this.LoyaltyResultLength() != 0))
                            || (this.PaymentReceiptLength() != 0))
                            || (this.CustomerOrderLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PaymentResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PaymentResponseType";
                // END ADDED BY XSD
            }
        }
        public int LoyaltyResultLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                return 0;
            }
            else {
                return this.loyaltyResultField.Length;
            }
            // END ADDED BY XSD
        }
        public LoyaltyResultType LoyaltyResultGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return default(LoyaltyResultType);
                }
                else {
                    if ((0 > index)) {
                        return default(LoyaltyResultType);
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return default(LoyaltyResultType);
                        }
                        else {
                            return this.loyaltyResultField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(LoyaltyResultType);
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultSetItem(int index, LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.loyaltyResultField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultAddItem(LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.loyaltyResultField.Length); i = (i + 1)) {
                        array[i] = loyaltyResultField[i];
                    }
                    array[i] = value;
                    this.LoyaltyResult = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool LoyaltyResultRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.loyaltyResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = loyaltyResultField[i];
                            }
                            for (i = (i + 1); (i < this.loyaltyResultField.Length); i = (i + 1)) {
                                array[i] = loyaltyResultField[i];
                            }
                            this.LoyaltyResult = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int LoyaltyResultInsertItem(int index, LoyaltyResultType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.loyaltyResultField == default(LoyaltyResultType[]))) {
                    return -1;
                }
                else {
                    if ((this.loyaltyResultField.Length <= index)) {
                        if ((this.LoyaltyResultAddItem(value) == true)) {
                            return this.LoyaltyResultLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        LoyaltyResultType[] array = new LoyaltyResultType[(this.loyaltyResultField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = loyaltyResultField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.loyaltyResultField.Length); j = (j + 1)) {
                            array[k] = loyaltyResultField[j];
                            k = (k + 1);
                        }
                        this.LoyaltyResult = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int PaymentReceiptLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                return 0;
            }
            else {
                return this.paymentReceiptField.Length;
            }
            // END ADDED BY XSD
        }
        public PaymentReceiptType PaymentReceiptGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return default(PaymentReceiptType);
                }
                else {
                    if ((0 > index)) {
                        return default(PaymentReceiptType);
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return default(PaymentReceiptType);
                        }
                        else {
                            return this.paymentReceiptField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(PaymentReceiptType);
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptSetItem(int index, PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.paymentReceiptField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptAddItem(PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.paymentReceiptField.Length); i = (i + 1)) {
                        array[i] = paymentReceiptField[i];
                    }
                    array[i] = value;
                    this.PaymentReceipt = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return false;
                        }
                        else {
                            PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = paymentReceiptField[i];
                            }
                            for (i = (i + 1); (i < this.paymentReceiptField.Length); i = (i + 1)) {
                                array[i] = paymentReceiptField[i];
                            }
                            this.PaymentReceipt = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int PaymentReceiptInsertItem(int index, PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return -1;
                }
                else {
                    if ((this.paymentReceiptField.Length <= index)) {
                        if ((this.PaymentReceiptAddItem(value) == true)) {
                            return this.PaymentReceiptLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = paymentReceiptField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.paymentReceiptField.Length); j = (j + 1)) {
                            array[k] = paymentReceiptField[j];
                            k = (k + 1);
                        }
                        this.PaymentReceipt = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.customerOrderField == default(CustomerOrderType[]))) {
                return 0;
            }
            else {
                return this.customerOrderField.Length;
            }
            // END ADDED BY XSD
        }
        public CustomerOrderType CustomerOrderGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return default(CustomerOrderType);
                }
                else {
                    if ((0 > index)) {
                        return default(CustomerOrderType);
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return default(CustomerOrderType);
                        }
                        else {
                            return this.customerOrderField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CustomerOrderType);
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderSetItem(int index, CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.customerOrderField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderAddItem(CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.customerOrderField.Length); i = (i + 1)) {
                        array[i] = customerOrderField[i];
                    }
                    array[i] = value;
                    this.CustomerOrder = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CustomerOrderRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.customerOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = customerOrderField[i];
                            }
                            for (i = (i + 1); (i < this.customerOrderField.Length); i = (i + 1)) {
                                array[i] = customerOrderField[i];
                            }
                            this.CustomerOrder = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CustomerOrderInsertItem(int index, CustomerOrderType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.customerOrderField == default(CustomerOrderType[]))) {
                    return -1;
                }
                else {
                    if ((this.customerOrderField.Length <= index)) {
                        if ((this.CustomerOrderAddItem(value) == true)) {
                            return this.CustomerOrderLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CustomerOrderType[] array = new CustomerOrderType[(this.customerOrderField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = customerOrderField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.customerOrderField.Length); j = (j + 1)) {
                            array[k] = customerOrderField[j];
                            k = (k + 1);
                        }
                        this.CustomerOrder = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum PaymentTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Normal,
        /// <remarks/>
        Refund,
        /// <remarks/>
        OneTimeReservation,
        /// <remarks/>
        FirstReservation,
        /// <remarks/>
        UpdateReservation,
        /// <remarks/>
        Completion,
        /// <remarks/>
        CashAdvance,
        /// <remarks/>
        CashDeposit,
        /// <remarks/>
        Recurring,
        /// <remarks/>
        Instalment,
        /// <remarks/>
        IssuerInstalment,
        /// <remarks/>
        PaidOut,
        /// <remarks/>
        VoiceAuthorisation,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum PeriodUnitEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Daily,
        /// <remarks/>
        Weekly,
        /// <remarks/>
        Monthly,
        /// <remarks/>
        Annual,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum PINFormatEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        ISO0,
        /// <remarks/>
        ISO1,
        /// <remarks/>
        ISO2,
        /// <remarks/>
        ISO3,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e7beedee-81b8-4481-9696-d39bb431cf52")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PINRequestType : IPINRequestType {
        private CardholderPINType cardholderPINField = new CardholderPINType();
        private string pINRequestType1Field = default(string);
        private string pINVerifMethodField = default(string);
        private string additionalInputField = default(string);
        private string pINEncAlgorithmField = default(string);
        private string pINFormatField = default(string);
        private string keyReferenceField = default(string);
        private int maxWaitingTimeField = default(int);
        private bool cardholderPINFieldSpecified = false;
        private bool pINRequestType1FieldSpecified = false;
        private bool pINVerifMethodFieldSpecified = false;
        private bool additionalInputFieldSpecified = false;
        private bool pINEncAlgorithmFieldSpecified = false;
        private bool pINFormatFieldSpecified = false;
        private bool keyReferenceFieldSpecified = false;
        private bool maxWaitingTimeFieldSpecified = false;
        public PINRequestType() {
        }
        public PINRequestType(PINRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PINRequestType))) {
            }
            else {
                this.CardholderPIN = value.CardholderPIN;
                this.PINRequestType1 = value.PINRequestType1;
                this.PINVerifMethod = value.PINVerifMethod;
                this.AdditionalInput = value.AdditionalInput;
                this.PINEncAlgorithm = value.PINEncAlgorithm;
                this.PINFormat = value.PINFormat;
                this.KeyReference = value.KeyReference;
                this.MaxWaitingTime = value.MaxWaitingTime;
                this.CardholderPINSpecified = value.CardholderPINSpecified;
                this.PINRequestType1Specified = value.PINRequestType1Specified;
                this.PINVerifMethodSpecified = value.PINVerifMethodSpecified;
                this.AdditionalInputSpecified = value.AdditionalInputSpecified;
                this.PINEncAlgorithmSpecified = value.PINEncAlgorithmSpecified;
                this.PINFormatSpecified = value.PINFormatSpecified;
                this.KeyReferenceSpecified = value.KeyReferenceSpecified;
                this.MaxWaitingTimeSpecified = value.MaxWaitingTimeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CardholderPINType CardholderPIN {
            get {
                return this.cardholderPINField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CardholderPINType))
                            || false)) {
                    this.cardholderPINField = new CardholderPINType();
                    this.cardholderPINFieldSpecified = false;
                }
                else {
                    this.cardholderPINField = value;
                    this.cardholderPINFieldSpecified = this.CardholderPIN.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("PINRequestType")]
        public string PINRequestType1 {
            get {
                return this.pINRequestType1Field;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pINRequestType1Field = default(string);
                    this.pINRequestType1FieldSpecified = false;
                }
                else {
                    this.pINRequestType1Field = value;
                    this.pINRequestType1FieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PINVerifMethod {
            get {
                return this.pINVerifMethodField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pINVerifMethodField = default(string);
                    this.pINVerifMethodFieldSpecified = false;
                }
                else {
                    this.pINVerifMethodField = value;
                    this.pINVerifMethodFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AdditionalInput {
            get {
                return this.additionalInputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.additionalInputField = default(string);
                    this.additionalInputFieldSpecified = false;
                }
                else {
                    this.additionalInputField = value;
                    this.additionalInputFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PINEncAlgorithm {
            get {
                return this.pINEncAlgorithmField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pINEncAlgorithmField = default(string);
                    this.pINEncAlgorithmFieldSpecified = false;
                }
                else {
                    this.pINEncAlgorithmField = value;
                    this.pINEncAlgorithmFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PINFormat {
            get {
                return this.pINFormatField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pINFormatField = default(string);
                    this.pINFormatFieldSpecified = false;
                }
                else {
                    this.pINFormatField = value;
                    this.pINFormatFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string KeyReference {
            get {
                return this.keyReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.keyReferenceField = default(string);
                    this.keyReferenceFieldSpecified = false;
                }
                else {
                    this.keyReferenceField = value;
                    this.keyReferenceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxWaitingTime {
            get {
                return this.maxWaitingTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maxWaitingTimeField = default(int);
                    this.maxWaitingTimeFieldSpecified = false;
                }
                else {
                    this.maxWaitingTimeField = value;
                    this.maxWaitingTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardholderPINSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardholderPINFieldSpecified || this.CardholderPIN.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardholderPINFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PINRequestType1Specified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pINRequestType1FieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pINRequestType1FieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PINVerifMethodSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pINVerifMethodFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pINVerifMethodFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AdditionalInputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.additionalInputFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.additionalInputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PINEncAlgorithmSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pINEncAlgorithmFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pINEncAlgorithmFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PINFormatSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pINFormatFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pINFormatFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool KeyReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.keyReferenceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.keyReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaxWaitingTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maxWaitingTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maxWaitingTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((false
                            || ((this.CardholderPIN != default(CardholderPINType))
                            && this.CardholderPINSpecified))
                            || ((this.PINRequestType1 != default(string))
                            && this.PINRequestType1Specified))
                            || ((this.PINVerifMethod != default(string))
                            && this.PINVerifMethodSpecified))
                            || ((this.AdditionalInput != default(string))
                            && this.AdditionalInputSpecified))
                            || ((this.PINEncAlgorithm != default(string))
                            && this.PINEncAlgorithmSpecified))
                            || ((this.PINFormat != default(string))
                            && this.PINFormatSpecified))
                            || ((this.KeyReference != default(string))
                            && this.KeyReferenceSpecified))
                            || ((this.MaxWaitingTime != default(int))
                            && this.MaxWaitingTimeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PINRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PINRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum PINRequestTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        PINVerify,
        /// <remarks/>
        PINVerifyOnly,
        /// <remarks/>
        PINEnter,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("edf51b19-f871-4361-b0b7-0723d1b5807f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PINResponseType : IPINResponseType {
        private ResponseType responseField = new ResponseType();
        private CardholderPINType cardholderPINField = new CardholderPINType();
        private bool responseFieldSpecified = false;
        private bool cardholderPINFieldSpecified = false;
        public PINResponseType() {
        }
        public PINResponseType(PINResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PINResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.CardholderPIN = value.CardholderPIN;
                this.ResponseSpecified = value.ResponseSpecified;
                this.CardholderPINSpecified = value.CardholderPINSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CardholderPINType CardholderPIN {
            get {
                return this.cardholderPINField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(CardholderPINType))
                            || false)) {
                    this.cardholderPINField = new CardholderPINType();
                    this.cardholderPINFieldSpecified = false;
                }
                else {
                    this.cardholderPINField = value;
                    this.cardholderPINFieldSpecified = this.CardholderPIN.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CardholderPINSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.cardholderPINFieldSpecified || this.CardholderPIN.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.cardholderPINFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.CardholderPIN != default(CardholderPINType))
                            && this.CardholderPINSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PINResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PINResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum POICapabilitiesEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        CashierDisplay,
        /// <remarks/>
        CashierError,
        /// <remarks/>
        CashierInput,
        /// <remarks/>
        CustomerDisplay,
        /// <remarks/>
        CustomerError,
        /// <remarks/>
        CustomerInput,
        /// <remarks/>
        PrinterReceipt,
        /// <remarks/>
        PrinterDocument,
        /// <remarks/>
        PrinterVoucher,
        /// <remarks/>
        MagStripe,
        /// <remarks/>
        ICC,
        /// <remarks/>
        EMVContactless,
        /// <remarks/>
        CashHandling,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum PrinterStatusEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        OK,
        /// <remarks/>
        PaperLow,
        /// <remarks/>
        NoPaper,
        /// <remarks/>
        PaperJam,
        /// <remarks/>
        OutOfOrder,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("775c9bd9-f6bf-4535-8d03-1ea568564cb5")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PrintOutputType : IPrintOutputType {
        private OutputContentType outputContentField = new OutputContentType();
        private byte[] outputSignatureField = new byte[0];
        private string documentQualifierField = default(string);
        private string responseModeField = default(string);
        private bool integratedPrintFlagField = default(bool);
        private bool requiredSignatureFlagField = default(bool);
        private bool outputContentFieldSpecified = false;
        private bool outputSignatureFieldSpecified = false;
        private bool documentQualifierFieldSpecified = false;
        private bool responseModeFieldSpecified = false;
        private bool integratedPrintFlagDefaultValue = false;
        private bool integratedPrintFlagFieldSpecified = false;
        private bool requiredSignatureFlagDefaultValue = false;
        private bool requiredSignatureFlagFieldSpecified = false;
        public PrintOutputType() {
            this.integratedPrintFlagField = this.integratedPrintFlagDefaultValue;
            this.requiredSignatureFlagField = this.requiredSignatureFlagDefaultValue;
        }
        public PrintOutputType(PrintOutputType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PrintOutputType))) {
            }
            else {
                this.OutputContent = value.OutputContent;
                this.OutputSignature = value.OutputSignature;
                this.DocumentQualifier = value.DocumentQualifier;
                this.ResponseMode = value.ResponseMode;
                this.IntegratedPrintFlag = value.IntegratedPrintFlag;
                this.RequiredSignatureFlag = value.RequiredSignatureFlag;
                this.OutputContentSpecified = value.OutputContentSpecified;
                this.OutputSignatureSpecified = value.OutputSignatureSpecified;
                this.DocumentQualifierSpecified = value.DocumentQualifierSpecified;
                this.ResponseModeSpecified = value.ResponseModeSpecified;
                this.IntegratedPrintFlagSpecified = value.IntegratedPrintFlagSpecified;
                this.RequiredSignatureFlagSpecified = value.RequiredSignatureFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OutputContentType OutputContent {
            get {
                return this.outputContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OutputContentType))
                            || false)) {
                    this.outputContentField = new OutputContentType();
                    this.outputContentFieldSpecified = false;
                }
                else {
                    this.outputContentField = value;
                    this.outputContentFieldSpecified = this.OutputContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] OutputSignature {
            get {
                return this.outputSignatureField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.outputSignatureField = new byte[0];
                    this.outputSignatureFieldSpecified = false;
                }
                else {
                    this.outputSignatureField = value;
                    this.outputSignatureFieldSpecified = (this.OutputSignatureLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DocumentQualifier {
            get {
                return this.documentQualifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.documentQualifierField = default(string);
                    this.documentQualifierFieldSpecified = false;
                }
                else {
                    this.documentQualifierField = value;
                    this.documentQualifierFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ResponseMode {
            get {
                return this.responseModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.responseModeField = default(string);
                    this.responseModeFieldSpecified = false;
                }
                else {
                    this.responseModeField = value;
                    this.responseModeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IntegratedPrintFlag {
            get {
                return this.integratedPrintFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.IntegratedPrintFlagDefaultValue)
                            || false)) {
                    this.integratedPrintFlagField = this.IntegratedPrintFlagDefaultValue;
                    this.integratedPrintFlagFieldSpecified = false;
                }
                else {
                    this.integratedPrintFlagField = value;
                    this.integratedPrintFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool RequiredSignatureFlag {
            get {
                return this.requiredSignatureFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.RequiredSignatureFlagDefaultValue)
                            || false)) {
                    this.requiredSignatureFlagField = this.RequiredSignatureFlagDefaultValue;
                    this.requiredSignatureFlagFieldSpecified = false;
                }
                else {
                    this.requiredSignatureFlagField = value;
                    this.requiredSignatureFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputContentFieldSpecified || this.OutputContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OutputSignatureSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.outputSignatureFieldSpecified
                            || (this.OutputSignatureLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.outputSignatureFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DocumentQualifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.documentQualifierFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.documentQualifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseModeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IntegratedPrintFlagDefaultValue {
            get {
                return this.integratedPrintFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IntegratedPrintFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.integratedPrintFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.integratedPrintFlagFieldSpecified = value;
                if ((this.integratedPrintFlagFieldSpecified
                            && (this.integratedPrintFlagField == default(bool)))) {
                    this.integratedPrintFlagField = this.integratedPrintFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RequiredSignatureFlagDefaultValue {
            get {
                return this.requiredSignatureFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RequiredSignatureFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.requiredSignatureFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.requiredSignatureFlagFieldSpecified = value;
                if ((this.requiredSignatureFlagFieldSpecified
                            && (this.requiredSignatureFlagField == default(bool)))) {
                    this.requiredSignatureFlagField = this.requiredSignatureFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.OutputContent != default(OutputContentType))
                            && this.OutputContentSpecified))
                            || (this.OutputSignatureLength() != 0))
                            || ((this.DocumentQualifier != default(string))
                            && this.DocumentQualifierSpecified))
                            || ((this.ResponseMode != default(string))
                            && this.ResponseModeSpecified))
                            || ((this.IntegratedPrintFlag != default(bool))
                            && this.IntegratedPrintFlagSpecified))
                            || ((this.RequiredSignatureFlag != default(bool))
                            && this.RequiredSignatureFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PrintOutputTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PrintOutputType";
                // END ADDED BY XSD
            }
        }
        public int OutputSignatureLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.outputSignatureField == default(byte[]))) {
                return 0;
            }
            else {
                return this.outputSignatureField.Length;
            }
            // END ADDED BY XSD
        }
        public byte OutputSignatureGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.outputSignatureField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.outputSignatureField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.outputSignatureField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.outputSignatureField.Length); i = (i + 1)) {
                        array[i] = outputSignatureField[i];
                    }
                    array[i] = value;
                    this.OutputSignature = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool OutputSignatureRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.outputSignatureField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.outputSignatureField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = outputSignatureField[i];
                            }
                            for (i = (i + 1); (i < this.outputSignatureField.Length); i = (i + 1)) {
                                array[i] = outputSignatureField[i];
                            }
                            this.OutputSignature = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int OutputSignatureInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.outputSignatureField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.outputSignatureField.Length <= index)) {
                        if ((this.OutputSignatureAddItem(value) == true)) {
                            return this.OutputSignatureLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.outputSignatureField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = outputSignatureField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.outputSignatureField.Length); j = (j + 1)) {
                            array[k] = outputSignatureField[j];
                            k = (k + 1);
                        }
                        this.OutputSignature = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("38e2435b-0cdc-46df-976a-4b65878972c5")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PrintRequestType : IPrintRequestType {
        private PrintOutputType printOutputField = new PrintOutputType();
        private bool printOutputFieldSpecified = false;
        public PrintRequestType() {
        }
        public PrintRequestType(PrintRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PrintRequestType))) {
            }
            else {
                this.PrintOutput = value.PrintOutput;
                this.PrintOutputSpecified = value.PrintOutputSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PrintOutputType PrintOutput {
            get {
                return this.printOutputField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PrintOutputType))
                            || false)) {
                    this.printOutputField = new PrintOutputType();
                    this.printOutputFieldSpecified = false;
                }
                else {
                    this.printOutputField = value;
                    this.printOutputFieldSpecified = this.PrintOutput.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PrintOutputSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.printOutputFieldSpecified || this.PrintOutput.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.printOutputFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.PrintOutput != default(PrintOutputType))
                            && this.PrintOutputSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PrintRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PrintRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e4360df1-f08f-44ec-a90f-a9dd4fb148b1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class PrintResponseType : IPrintResponseType {
        private ResponseType responseField = new ResponseType();
        private string documentQualifierField = default(string);
        private bool responseFieldSpecified = false;
        private bool documentQualifierFieldSpecified = false;
        public PrintResponseType() {
        }
        public PrintResponseType(PrintResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(PrintResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.DocumentQualifier = value.DocumentQualifier;
                this.ResponseSpecified = value.ResponseSpecified;
                this.DocumentQualifierSpecified = value.DocumentQualifierSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DocumentQualifier {
            get {
                return this.documentQualifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.documentQualifierField = default(string);
                    this.documentQualifierFieldSpecified = false;
                }
                else {
                    this.documentQualifierField = value;
                    this.documentQualifierFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DocumentQualifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.documentQualifierFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.documentQualifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.DocumentQualifier != default(string))
                            && this.DocumentQualifierSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string PrintResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "PrintResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("7dbd030c-a004-47df-8ea6-4eb5c5144671")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ReconciliationRequestType : IReconciliationRequestType {
        private string[] acquirerIDField = new string[0];
        private string reconciliationTypeField = default(string);
        private string pOIReconciliationIDField = default(string);
        private bool acquirerIDFieldSpecified = false;
        private bool reconciliationTypeFieldSpecified = false;
        private bool pOIReconciliationIDFieldSpecified = false;
        public ReconciliationRequestType() {
        }
        public ReconciliationRequestType(ReconciliationRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ReconciliationRequestType))) {
            }
            else {
                this.AcquirerID = value.AcquirerID;
                this.ReconciliationType = value.ReconciliationType;
                this.POIReconciliationID = value.POIReconciliationID;
                this.AcquirerIDSpecified = value.AcquirerIDSpecified;
                this.ReconciliationTypeSpecified = value.ReconciliationTypeSpecified;
                this.POIReconciliationIDSpecified = value.POIReconciliationIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AcquirerID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AcquirerID {
            get {
                return this.acquirerIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.acquirerIDField = new string[0];
                    this.acquirerIDFieldSpecified = false;
                }
                else {
                    this.acquirerIDField = value;
                    this.acquirerIDFieldSpecified = (this.AcquirerIDLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReconciliationType {
            get {
                return this.reconciliationTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.reconciliationTypeField = default(string);
                    this.reconciliationTypeFieldSpecified = false;
                }
                else {
                    this.reconciliationTypeField = value;
                    this.reconciliationTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIReconciliationID {
            get {
                return this.pOIReconciliationIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIReconciliationIDField = default(string);
                    this.pOIReconciliationIDFieldSpecified = false;
                }
                else {
                    this.pOIReconciliationIDField = value;
                    this.pOIReconciliationIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool AcquirerIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.acquirerIDFieldSpecified
                            || (this.AcquirerIDLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.acquirerIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReconciliationTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reconciliationTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reconciliationTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIReconciliationIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIReconciliationIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIReconciliationIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || (this.AcquirerIDLength() != 0))
                            || ((this.ReconciliationType != default(string))
                            && this.ReconciliationTypeSpecified))
                            || ((this.POIReconciliationID != default(string))
                            && this.POIReconciliationIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ReconciliationRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ReconciliationRequestType";
                // END ADDED BY XSD
            }
        }
        public int AcquirerIDLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.acquirerIDField == default(string[]))) {
                return 0;
            }
            else {
                return this.acquirerIDField.Length;
            }
            // END ADDED BY XSD
        }
        public string AcquirerIDGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.acquirerIDField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.acquirerIDField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.acquirerIDField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.acquirerIDField.Length); i = (i + 1)) {
                        array[i] = acquirerIDField[i];
                    }
                    array[i] = value;
                    this.AcquirerID = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool AcquirerIDRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.acquirerIDField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.acquirerIDField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = acquirerIDField[i];
                            }
                            for (i = (i + 1); (i < this.acquirerIDField.Length); i = (i + 1)) {
                                array[i] = acquirerIDField[i];
                            }
                            this.AcquirerID = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int AcquirerIDInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.acquirerIDField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.acquirerIDField.Length <= index)) {
                        if ((this.AcquirerIDAddItem(value) == true)) {
                            return this.AcquirerIDLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.acquirerIDField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = acquirerIDField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.acquirerIDField.Length); j = (j + 1)) {
                            array[k] = acquirerIDField[j];
                            k = (k + 1);
                        }
                        this.AcquirerID = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("64dcc973-6301-463a-bb58-6aabd7e90c78")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ReconciliationResponseType : IReconciliationResponseType {
        private ResponseType responseField = new ResponseType();
        private TransactionTotalsType[] transactionTotalsField = new TransactionTotalsType[0];
        private string reconciliationTypeField = default(string);
        private string pOIReconciliationIDField = default(string);
        private bool responseFieldSpecified = false;
        private bool transactionTotalsFieldSpecified = false;
        private bool reconciliationTypeFieldSpecified = false;
        private bool pOIReconciliationIDFieldSpecified = false;
        public ReconciliationResponseType() {
        }
        public ReconciliationResponseType(ReconciliationResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ReconciliationResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.TransactionTotals = value.TransactionTotals;
                this.ReconciliationType = value.ReconciliationType;
                this.POIReconciliationID = value.POIReconciliationID;
                this.ResponseSpecified = value.ResponseSpecified;
                this.TransactionTotalsSpecified = value.TransactionTotalsSpecified;
                this.ReconciliationTypeSpecified = value.ReconciliationTypeSpecified;
                this.POIReconciliationIDSpecified = value.POIReconciliationIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TransactionTotals", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionTotalsType[] TransactionTotals {
            get {
                return this.transactionTotalsField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(TransactionTotalsType[]))
                            || false)) {
                    this.transactionTotalsField = new TransactionTotalsType[0];
                    this.transactionTotalsFieldSpecified = false;
                }
                else {
                    this.transactionTotalsField = value;
                    this.transactionTotalsFieldSpecified = (this.TransactionTotalsLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReconciliationType {
            get {
                return this.reconciliationTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.reconciliationTypeField = default(string);
                    this.reconciliationTypeFieldSpecified = false;
                }
                else {
                    this.reconciliationTypeField = value;
                    this.reconciliationTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string POIReconciliationID {
            get {
                return this.pOIReconciliationIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.pOIReconciliationIDField = default(string);
                    this.pOIReconciliationIDFieldSpecified = false;
                }
                else {
                    this.pOIReconciliationIDField = value;
                    this.pOIReconciliationIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionTotalsSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionTotalsFieldSpecified
                            || (this.TransactionTotalsLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionTotalsFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReconciliationTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reconciliationTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reconciliationTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIReconciliationIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIReconciliationIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIReconciliationIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || (this.TransactionTotalsLength() != 0))
                            || ((this.ReconciliationType != default(string))
                            && this.ReconciliationTypeSpecified))
                            || ((this.POIReconciliationID != default(string))
                            && this.POIReconciliationIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ReconciliationResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ReconciliationResponseType";
                // END ADDED BY XSD
            }
        }
        public int TransactionTotalsLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                return 0;
            }
            else {
                return this.transactionTotalsField.Length;
            }
            // END ADDED BY XSD
        }
        public TransactionTotalsType TransactionTotalsGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return default(TransactionTotalsType);
                }
                else {
                    if ((0 > index)) {
                        return default(TransactionTotalsType);
                    }
                    else {
                        if ((this.transactionTotalsField.Length <= index)) {
                            return default(TransactionTotalsType);
                        }
                        else {
                            return this.transactionTotalsField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(TransactionTotalsType);
            }
            // END ADDED BY XSD
        }
        public bool TransactionTotalsSetItem(int index, TransactionTotalsType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.transactionTotalsField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionTotalsAddItem(TransactionTotalsType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return false;
                }
                else {
                    TransactionTotalsType[] array = new TransactionTotalsType[(this.transactionTotalsField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.transactionTotalsField.Length); i = (i + 1)) {
                        array[i] = transactionTotalsField[i];
                    }
                    array[i] = value;
                    this.TransactionTotals = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionTotalsRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionTotalsField.Length <= index)) {
                            return false;
                        }
                        else {
                            TransactionTotalsType[] array = new TransactionTotalsType[(this.transactionTotalsField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = transactionTotalsField[i];
                            }
                            for (i = (i + 1); (i < this.transactionTotalsField.Length); i = (i + 1)) {
                                array[i] = transactionTotalsField[i];
                            }
                            this.TransactionTotals = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int TransactionTotalsInsertItem(int index, TransactionTotalsType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.transactionTotalsField == default(TransactionTotalsType[]))) {
                    return -1;
                }
                else {
                    if ((this.transactionTotalsField.Length <= index)) {
                        if ((this.TransactionTotalsAddItem(value) == true)) {
                            return this.TransactionTotalsLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        TransactionTotalsType[] array = new TransactionTotalsType[(this.transactionTotalsField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = transactionTotalsField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.transactionTotalsField.Length); j = (j + 1)) {
                            array[k] = transactionTotalsField[j];
                            k = (k + 1);
                        }
                        this.TransactionTotals = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ReconciliationTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        SaleReconciliation,
        /// <remarks/>
        AcquirerSynchronisation,
        /// <remarks/>
        AcquirerReconciliation,
        /// <remarks/>
        PreviousReconciliation,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("82e6a6d1-8e3c-4f38-a3bf-eadb93e0503e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class RepeatedMessageResponseType : IRepeatedMessageResponseType {
        private MessageHeaderType messageHeaderField = new MessageHeaderType();
        private object itemField = default(object);
        private bool messageHeaderFieldSpecified = false;
        private bool itemFieldSpecified = false;
        public RepeatedMessageResponseType() {
        }
        public RepeatedMessageResponseType(RepeatedMessageResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(RepeatedMessageResponseType))) {
            }
            else {
                this.MessageHeader = value.MessageHeader;
                this.Item = value.Item;
                this.MessageHeaderSpecified = value.MessageHeaderSpecified;
                this.ItemSpecified = value.ItemSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageHeaderType MessageHeader {
            get {
                return this.messageHeaderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MessageHeaderType))
                            || false)) {
                    this.messageHeaderField = new MessageHeaderType();
                    this.messageHeaderFieldSpecified = false;
                }
                else {
                    this.messageHeaderField = value;
                    this.messageHeaderFieldSpecified = this.MessageHeader.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CardAcquisitionResponse", typeof(CardAcquisitionResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardReaderAPDUResponse", typeof(CardReaderAPDUResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyResponse", typeof(LoyaltyResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentResponse", typeof(PaymentResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReversalResponse", typeof(ReversalResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StoredValueResponse", typeof(StoredValueResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(object))
                            || false)) {
                    this.itemField = default(object);
                    this.itemFieldSpecified = false;
                }
                else {
                    this.itemField = value;
                    this.itemFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageHeaderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageHeaderFieldSpecified || this.MessageHeader.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageHeaderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.MessageHeader != default(MessageHeaderType))
                            && this.MessageHeaderSpecified))
                            || ((this.Item != default(object))
                            && this.ItemSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string RepeatedMessageResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "RepeatedMessageResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("4d5074a0-52b1-461e-ab76-73403aa94012")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class ReversalResponseType : IReversalResponseType {
        private ResponseType responseField = new ResponseType();
        private POIDataType pOIDataField = new POIDataType();
        private OriginalPOITransactionType originalPOITransactionField = new OriginalPOITransactionType();
        private PaymentReceiptType[] paymentReceiptField = new PaymentReceiptType[0];
        private double reversedAmountField = default(double);
        private bool reversedAmountFieldSpecified = default(bool);
        private string customerOrderIDField = default(string);
        private bool responseFieldSpecified = false;
        private bool pOIDataFieldSpecified = false;
        private bool originalPOITransactionFieldSpecified = false;
        private bool paymentReceiptFieldSpecified = false;
        private bool customerOrderIDFieldSpecified = false;
        public ReversalResponseType() {
        }
        public ReversalResponseType(ReversalResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(ReversalResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.POIData = value.POIData;
                this.OriginalPOITransaction = value.OriginalPOITransaction;
                this.PaymentReceipt = value.PaymentReceipt;
                this.ReversedAmount = value.ReversedAmount;
                this.ReversedAmountSpecified = value.ReversedAmountSpecified;
                this.CustomerOrderID = value.CustomerOrderID;
                this.ResponseSpecified = value.ResponseSpecified;
                this.POIDataSpecified = value.POIDataSpecified;
                this.OriginalPOITransactionSpecified = value.OriginalPOITransactionSpecified;
                this.PaymentReceiptSpecified = value.PaymentReceiptSpecified;
                this.CustomerOrderIDSpecified = value.CustomerOrderIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIDataType POIData {
            get {
                return this.pOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIDataType))
                            || false)) {
                    this.pOIDataField = new POIDataType();
                    this.pOIDataFieldSpecified = false;
                }
                else {
                    this.pOIDataField = value;
                    this.pOIDataFieldSpecified = this.POIData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OriginalPOITransactionType OriginalPOITransaction {
            get {
                return this.originalPOITransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OriginalPOITransactionType))
                            || false)) {
                    this.originalPOITransactionField = new OriginalPOITransactionType();
                    this.originalPOITransactionFieldSpecified = false;
                }
                else {
                    this.originalPOITransactionField = value;
                    this.originalPOITransactionFieldSpecified = this.OriginalPOITransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PaymentReceipt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentReceiptType[] PaymentReceipt {
            get {
                return this.paymentReceiptField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(PaymentReceiptType[]))
                            || false)) {
                    this.paymentReceiptField = new PaymentReceiptType[0];
                    this.paymentReceiptFieldSpecified = false;
                }
                else {
                    this.paymentReceiptField = value;
                    this.paymentReceiptFieldSpecified = (this.PaymentReceiptLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ReversedAmount {
            get {
                return this.reversedAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.reversedAmountField = default(double);
                    this.reversedAmountFieldSpecified = false;
                }
                else {
                    this.reversedAmountField = value;
                    this.reversedAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReversedAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reversedAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reversedAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerOrderID {
            get {
                return this.customerOrderIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerOrderIDField = default(string);
                    this.customerOrderIDFieldSpecified = false;
                }
                else {
                    this.customerOrderIDField = value;
                    this.customerOrderIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIDataFieldSpecified || this.POIData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OriginalPOITransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.originalPOITransactionFieldSpecified || this.OriginalPOITransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.originalPOITransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentReceiptSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentReceiptFieldSpecified
                            || (this.PaymentReceiptLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentReceiptFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerOrderIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerOrderIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerOrderIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.POIData != default(POIDataType))
                            && this.POIDataSpecified))
                            || ((this.OriginalPOITransaction != default(OriginalPOITransactionType))
                            && this.OriginalPOITransactionSpecified))
                            || (this.PaymentReceiptLength() != 0))
                            || ((this.ReversedAmount != default(double))
                            && this.ReversedAmountSpecified))
                            || ((this.CustomerOrderID != default(string))
                            && this.CustomerOrderIDSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ReversalResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "ReversalResponseType";
                // END ADDED BY XSD
            }
        }
        public int PaymentReceiptLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                return 0;
            }
            else {
                return this.paymentReceiptField.Length;
            }
            // END ADDED BY XSD
        }
        public PaymentReceiptType PaymentReceiptGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return default(PaymentReceiptType);
                }
                else {
                    if ((0 > index)) {
                        return default(PaymentReceiptType);
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return default(PaymentReceiptType);
                        }
                        else {
                            return this.paymentReceiptField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(PaymentReceiptType);
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptSetItem(int index, PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.paymentReceiptField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptAddItem(PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.paymentReceiptField.Length); i = (i + 1)) {
                        array[i] = paymentReceiptField[i];
                    }
                    array[i] = value;
                    this.PaymentReceipt = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool PaymentReceiptRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.paymentReceiptField.Length <= index)) {
                            return false;
                        }
                        else {
                            PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = paymentReceiptField[i];
                            }
                            for (i = (i + 1); (i < this.paymentReceiptField.Length); i = (i + 1)) {
                                array[i] = paymentReceiptField[i];
                            }
                            this.PaymentReceipt = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int PaymentReceiptInsertItem(int index, PaymentReceiptType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.paymentReceiptField == default(PaymentReceiptType[]))) {
                    return -1;
                }
                else {
                    if ((this.paymentReceiptField.Length <= index)) {
                        if ((this.PaymentReceiptAddItem(value) == true)) {
                            return this.PaymentReceiptLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        PaymentReceiptType[] array = new PaymentReceiptType[(this.paymentReceiptField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = paymentReceiptField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.paymentReceiptField.Length); j = (j + 1)) {
                            array[k] = paymentReceiptField[j];
                            k = (k + 1);
                        }
                        this.PaymentReceipt = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e4ec8ac9-9dd3-4bc1-8a6e-9f588bc335d6")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class StoredValueResponseType : IStoredValueResponseType {
        private ResponseType responseField = new ResponseType();
        private SaleDataType saleDataField = new SaleDataType();
        private POIDataType pOIDataField = new POIDataType();
        private StoredValueResultType[] storedValueResultField = new StoredValueResultType[0];
        private bool responseFieldSpecified = false;
        private bool saleDataFieldSpecified = false;
        private bool pOIDataFieldSpecified = false;
        private bool storedValueResultFieldSpecified = false;
        public StoredValueResponseType() {
        }
        public StoredValueResponseType(StoredValueResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(StoredValueResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.SaleData = value.SaleData;
                this.POIData = value.POIData;
                this.StoredValueResult = value.StoredValueResult;
                this.ResponseSpecified = value.ResponseSpecified;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.POIDataSpecified = value.POIDataSpecified;
                this.StoredValueResultSpecified = value.StoredValueResultSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIDataType POIData {
            get {
                return this.pOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIDataType))
                            || false)) {
                    this.pOIDataField = new POIDataType();
                    this.pOIDataFieldSpecified = false;
                }
                else {
                    this.pOIDataField = value;
                    this.pOIDataFieldSpecified = this.POIData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StoredValueResult", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StoredValueResultType[] StoredValueResult {
            get {
                return this.storedValueResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(StoredValueResultType[]))
                            || false)) {
                    this.storedValueResultField = new StoredValueResultType[0];
                    this.storedValueResultFieldSpecified = false;
                }
                else {
                    this.storedValueResultField = value;
                    this.storedValueResultFieldSpecified = (this.StoredValueResultLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIDataFieldSpecified || this.POIData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueResultFieldSpecified
                            || (this.StoredValueResultLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.POIData != default(POIDataType))
                            && this.POIDataSpecified))
                            || (this.StoredValueResultLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string StoredValueResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "StoredValueResponseType";
                // END ADDED BY XSD
            }
        }
        public int StoredValueResultLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.storedValueResultField == default(StoredValueResultType[]))) {
                return 0;
            }
            else {
                return this.storedValueResultField.Length;
            }
            // END ADDED BY XSD
        }
        public StoredValueResultType StoredValueResultGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.storedValueResultField == default(StoredValueResultType[]))) {
                    return default(StoredValueResultType);
                }
                else {
                    if ((0 > index)) {
                        return default(StoredValueResultType);
                    }
                    else {
                        if ((this.storedValueResultField.Length <= index)) {
                            return default(StoredValueResultType);
                        }
                        else {
                            return this.storedValueResultField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(StoredValueResultType);
            }
            // END ADDED BY XSD
        }
        public bool StoredValueResultSetItem(int index, StoredValueResultType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.storedValueResultField == default(StoredValueResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.storedValueResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.storedValueResultField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool StoredValueResultAddItem(StoredValueResultType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.storedValueResultField == default(StoredValueResultType[]))) {
                    return false;
                }
                else {
                    StoredValueResultType[] array = new StoredValueResultType[(this.storedValueResultField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.storedValueResultField.Length); i = (i + 1)) {
                        array[i] = storedValueResultField[i];
                    }
                    array[i] = value;
                    this.StoredValueResult = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool StoredValueResultRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.storedValueResultField == default(StoredValueResultType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.storedValueResultField.Length <= index)) {
                            return false;
                        }
                        else {
                            StoredValueResultType[] array = new StoredValueResultType[(this.storedValueResultField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = storedValueResultField[i];
                            }
                            for (i = (i + 1); (i < this.storedValueResultField.Length); i = (i + 1)) {
                                array[i] = storedValueResultField[i];
                            }
                            this.StoredValueResult = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int StoredValueResultInsertItem(int index, StoredValueResultType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.storedValueResultField == default(StoredValueResultType[]))) {
                    return -1;
                }
                else {
                    if ((this.storedValueResultField.Length <= index)) {
                        if ((this.StoredValueResultAddItem(value) == true)) {
                            return this.StoredValueResultLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        StoredValueResultType[] array = new StoredValueResultType[(this.storedValueResultField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = storedValueResultField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.storedValueResultField.Length); j = (j + 1)) {
                            array[k] = storedValueResultField[j];
                            k = (k + 1);
                        }
                        this.StoredValueResult = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("02bc6aaa-e955-4195-8525-27e004adeb1a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class StoredValueResultType : IStoredValueResultType {
        private StoredValueAccountStatusType storedValueAccountStatusField = new StoredValueAccountStatusType();
        private TransactionIdentificationType hostTransactionIDField = new TransactionIdentificationType();
        private string storedValueTransactionTypeField = default(string);
        private string productCodeField = default(string);
        private string eanUpcField = default(string);
        private double itemAmountField = default(double);
        private string currencyField = default(string);
        private bool storedValueAccountStatusFieldSpecified = false;
        private bool hostTransactionIDFieldSpecified = false;
        private bool storedValueTransactionTypeFieldSpecified = false;
        private bool productCodeFieldSpecified = false;
        private bool eanUpcFieldSpecified = false;
        private bool itemAmountFieldSpecified = false;
        private bool currencyFieldSpecified = false;
        public StoredValueResultType() {
        }
        public StoredValueResultType(StoredValueResultType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(StoredValueResultType))) {
            }
            else {
                this.StoredValueAccountStatus = value.StoredValueAccountStatus;
                this.HostTransactionID = value.HostTransactionID;
                this.StoredValueTransactionType = value.StoredValueTransactionType;
                this.ProductCode = value.ProductCode;
                this.EanUpc = value.EanUpc;
                this.ItemAmount = value.ItemAmount;
                this.Currency = value.Currency;
                this.StoredValueAccountStatusSpecified = value.StoredValueAccountStatusSpecified;
                this.HostTransactionIDSpecified = value.HostTransactionIDSpecified;
                this.StoredValueTransactionTypeSpecified = value.StoredValueTransactionTypeSpecified;
                this.ProductCodeSpecified = value.ProductCodeSpecified;
                this.EanUpcSpecified = value.EanUpcSpecified;
                this.ItemAmountSpecified = value.ItemAmountSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StoredValueAccountStatusType StoredValueAccountStatus {
            get {
                return this.storedValueAccountStatusField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(StoredValueAccountStatusType))
                            || false)) {
                    this.storedValueAccountStatusField = new StoredValueAccountStatusType();
                    this.storedValueAccountStatusFieldSpecified = false;
                }
                else {
                    this.storedValueAccountStatusField = value;
                    this.storedValueAccountStatusFieldSpecified = this.StoredValueAccountStatus.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionIdentificationType HostTransactionID {
            get {
                return this.hostTransactionIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(TransactionIdentificationType))
                            || false)) {
                    this.hostTransactionIDField = new TransactionIdentificationType();
                    this.hostTransactionIDFieldSpecified = false;
                }
                else {
                    this.hostTransactionIDField = value;
                    this.hostTransactionIDFieldSpecified = this.HostTransactionID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StoredValueTransactionType {
            get {
                return this.storedValueTransactionTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.storedValueTransactionTypeField = default(string);
                    this.storedValueTransactionTypeFieldSpecified = false;
                }
                else {
                    this.storedValueTransactionTypeField = value;
                    this.storedValueTransactionTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.productCodeField = default(string);
                    this.productCodeFieldSpecified = false;
                }
                else {
                    this.productCodeField = value;
                    this.productCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EanUpc {
            get {
                return this.eanUpcField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.eanUpcField = default(string);
                    this.eanUpcFieldSpecified = false;
                }
                else {
                    this.eanUpcField = value;
                    this.eanUpcFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ItemAmount {
            get {
                return this.itemAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.itemAmountField = default(double);
                    this.itemAmountFieldSpecified = false;
                }
                else {
                    this.itemAmountField = value;
                    this.itemAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueAccountStatusSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueAccountStatusFieldSpecified || this.StoredValueAccountStatus.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueAccountStatusFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool HostTransactionIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.hostTransactionIDFieldSpecified || this.HostTransactionID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.hostTransactionIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueTransactionTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueTransactionTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueTransactionTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProductCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.productCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.productCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EanUpcSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.eanUpcFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.eanUpcFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || ((this.StoredValueAccountStatus != default(StoredValueAccountStatusType))
                            && this.StoredValueAccountStatusSpecified))
                            || ((this.HostTransactionID != default(TransactionIdentificationType))
                            && this.HostTransactionIDSpecified))
                            || ((this.StoredValueTransactionType != default(string))
                            && this.StoredValueTransactionTypeSpecified))
                            || ((this.ProductCode != default(string))
                            && this.ProductCodeSpecified))
                            || ((this.EanUpc != default(string))
                            && this.EanUpcSpecified))
                            || ((this.ItemAmount != default(double))
                            && this.ItemAmountSpecified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string StoredValueResultTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "StoredValueResultType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("e8781694-d60e-4b51-92ae-af66dd762da4")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class StoredValueAccountStatusType : IStoredValueAccountStatusType {
        private StoredValueAccountIDType storedValueAccountIDField = new StoredValueAccountIDType();
        private double currentBalanceField = default(double);
        private bool currentBalanceFieldSpecified = default(bool);
        private bool storedValueAccountIDFieldSpecified = false;
        public StoredValueAccountStatusType() {
        }
        public StoredValueAccountStatusType(StoredValueAccountStatusType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(StoredValueAccountStatusType))) {
            }
            else {
                this.StoredValueAccountID = value.StoredValueAccountID;
                this.CurrentBalance = value.CurrentBalance;
                this.CurrentBalanceSpecified = value.CurrentBalanceSpecified;
                this.StoredValueAccountIDSpecified = value.StoredValueAccountIDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StoredValueAccountIDType StoredValueAccountID {
            get {
                return this.storedValueAccountIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(StoredValueAccountIDType))
                            || false)) {
                    this.storedValueAccountIDField = new StoredValueAccountIDType();
                    this.storedValueAccountIDFieldSpecified = false;
                }
                else {
                    this.storedValueAccountIDField = value;
                    this.storedValueAccountIDFieldSpecified = this.StoredValueAccountID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.currentBalanceField = default(double);
                    this.currentBalanceFieldSpecified = false;
                }
                else {
                    this.currentBalanceField = value;
                    this.currentBalanceFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentBalanceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currentBalanceFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currentBalanceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueAccountIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueAccountIDFieldSpecified || this.StoredValueAccountID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueAccountIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.StoredValueAccountID != default(StoredValueAccountIDType))
                            && this.StoredValueAccountIDSpecified))
                            || ((this.CurrentBalance != default(double))
                            && this.CurrentBalanceSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string StoredValueAccountStatusTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "StoredValueAccountStatusType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("723627d3-427d-4048-99ea-8058e751253b")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class StoredValueAccountIDType : IStoredValueAccountIDType {
        private string storedValueAccountTypeField = default(string);
        private string storedValueProviderField = default(string);
        private string ownerNameField = default(string);
        private string expiryDateField = default(string);
        private string[] entryModeField = new string[0];
        private string identificationTypeField = default(string);
        private string valueField = default(string);
        private bool storedValueAccountTypeFieldSpecified = false;
        private bool storedValueProviderFieldSpecified = false;
        private bool ownerNameFieldSpecified = false;
        private bool expiryDateFieldSpecified = false;
        private bool entryModeFieldSpecified = false;
        private bool identificationTypeFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public StoredValueAccountIDType() {
        }
        public StoredValueAccountIDType(StoredValueAccountIDType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(StoredValueAccountIDType))) {
            }
            else {
                this.StoredValueAccountType = value.StoredValueAccountType;
                this.StoredValueProvider = value.StoredValueProvider;
                this.OwnerName = value.OwnerName;
                this.ExpiryDate = value.ExpiryDate;
                this.EntryMode = value.EntryMode;
                this.IdentificationType = value.IdentificationType;
                this.Value = value.Value;
                this.StoredValueAccountTypeSpecified = value.StoredValueAccountTypeSpecified;
                this.StoredValueProviderSpecified = value.StoredValueProviderSpecified;
                this.OwnerNameSpecified = value.OwnerNameSpecified;
                this.ExpiryDateSpecified = value.ExpiryDateSpecified;
                this.EntryModeSpecified = value.EntryModeSpecified;
                this.IdentificationTypeSpecified = value.IdentificationTypeSpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StoredValueAccountType {
            get {
                return this.storedValueAccountTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.storedValueAccountTypeField = default(string);
                    this.storedValueAccountTypeFieldSpecified = false;
                }
                else {
                    this.storedValueAccountTypeField = value;
                    this.storedValueAccountTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StoredValueProvider {
            get {
                return this.storedValueProviderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.storedValueProviderField = default(string);
                    this.storedValueProviderFieldSpecified = false;
                }
                else {
                    this.storedValueProviderField = value;
                    this.storedValueProviderFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.ownerNameField = default(string);
                    this.ownerNameFieldSpecified = false;
                }
                else {
                    this.ownerNameField = value;
                    this.ownerNameFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.expiryDateField = default(string);
                    this.expiryDateFieldSpecified = false;
                }
                else {
                    this.expiryDateField = value;
                    this.expiryDateFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] EntryMode {
            get {
                return this.entryModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.entryModeField = new string[0];
                    this.entryModeFieldSpecified = false;
                }
                else {
                    this.entryModeField = value;
                    this.entryModeFieldSpecified = (this.EntryModeLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IdentificationType {
            get {
                return this.identificationTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.identificationTypeField = default(string);
                    this.identificationTypeFieldSpecified = false;
                }
                else {
                    this.identificationTypeField = value;
                    this.identificationTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.valueField = default(string);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueAccountTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueAccountTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueAccountTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueProviderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueProviderFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueProviderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OwnerNameSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.ownerNameFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.ownerNameFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ExpiryDateSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.expiryDateFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.expiryDateFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EntryModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.entryModeFieldSpecified
                            || (this.EntryModeLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.entryModeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool IdentificationTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.identificationTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.identificationTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((((false
                            || (this.EntryModeLength() != 0))
                            || ((this.StoredValueAccountType != default(string))
                            && this.StoredValueAccountTypeSpecified))
                            || ((this.StoredValueProvider != default(string))
                            && this.StoredValueProviderSpecified))
                            || ((this.OwnerName != default(string))
                            && this.OwnerNameSpecified))
                            || ((this.ExpiryDate != default(string))
                            && this.ExpiryDateSpecified))
                            || ((this.IdentificationType != default(string))
                            && this.IdentificationTypeSpecified))
                            || ((this.Value != default(string))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string StoredValueAccountIDTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "StoredValueAccountIDType";
                // END ADDED BY XSD
            }
        }
        public int EntryModeLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.entryModeField == default(string[]))) {
                return 0;
            }
            else {
                return this.entryModeField.Length;
            }
            // END ADDED BY XSD
        }
        public string EntryModeGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.entryModeField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool EntryModeSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.entryModeField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.entryModeField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.entryModeField.Length); i = (i + 1)) {
                        array[i] = entryModeField[i];
                    }
                    array[i] = value;
                    this.EntryMode = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool EntryModeRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.entryModeField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.entryModeField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            for (i = (i + 1); (i < this.entryModeField.Length); i = (i + 1)) {
                                array[i] = entryModeField[i];
                            }
                            this.EntryMode = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int EntryModeInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.entryModeField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.entryModeField.Length <= index)) {
                        if ((this.EntryModeAddItem(value) == true)) {
                            return this.EntryModeLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.entryModeField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = entryModeField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.entryModeField.Length); j = (j + 1)) {
                            array[k] = entryModeField[j];
                            k = (k + 1);
                        }
                        this.EntryMode = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ResponseModeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        NotRequired,
        /// <remarks/>
        Immediate,
        /// <remarks/>
        PrintEnd,
        /// <remarks/>
        SoundEnd,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ResultEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Success,
        /// <remarks/>
        Failure,
        /// <remarks/>
        Partial,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ReversalReasonEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        CustCancel,
        /// <remarks/>
        MerchantCancel,
        /// <remarks/>
        Malfunction,
        /// <remarks/>
        Unable2Compl,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum SaleCapabilitiesEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        CashierStatus,
        /// <remarks/>
        CashierError,
        /// <remarks/>
        CashierDisplay,
        /// <remarks/>
        POIReplication,
        /// <remarks/>
        CashierInput,
        /// <remarks/>
        CustomerAssistance,
        /// <remarks/>
        CustomerDisplay,
        /// <remarks/>
        CustomerError,
        /// <remarks/>
        CustomerInput,
        /// <remarks/>
        PrinterReceipt,
        /// <remarks/>
        PrinterDocument,
        /// <remarks/>
        PrinterVoucher,
        /// <remarks/>
        MagStripe,
        /// <remarks/>
        ICC,
        /// <remarks/>
        EMVContactless,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3ed240cb-e985-48d7-afe3-ba47a585232d")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SearchANDType : ISearchANDType {
        private string targetField = default(string);
        private OperatorEnumeration operatorField = default(OperatorEnumeration);
        private string valueField = default(string);
        private bool targetFieldSpecified = false;
        private bool operatorFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public SearchANDType() {
        }
        public SearchANDType(SearchANDType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SearchANDType))) {
            }
            else {
                this.Target = value.Target;
                this.Operator = value.Operator;
                this.Value = value.Value;
                this.TargetSpecified = value.TargetSpecified;
                this.OperatorSpecified = value.OperatorSpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Target {
            get {
                return this.targetField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.targetField = default(string);
                    this.targetFieldSpecified = false;
                }
                else {
                    this.targetField = value;
                    this.targetFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperatorEnumeration Operator {
            get {
                return this.operatorField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OperatorEnumeration))
                            || false)) {
                    this.operatorField = default(OperatorEnumeration);
                    this.operatorFieldSpecified = false;
                }
                else {
                    this.operatorField = value;
                    this.operatorFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.valueField = default(string);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TargetSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.targetFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.targetFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OperatorSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.operatorFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.operatorFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Target != default(string))
                            && this.TargetSpecified))
                            || ((this.Value != default(string))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SearchANDTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SearchANDType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("a38c3d16-eb01-4b8a-a6bc-052934a28356")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SearchCriteriasType : ISearchCriteriasType {
        private SearchANDType[] searchORField = new SearchANDType[0];
        private bool searchORFieldSpecified = false;
        public SearchCriteriasType() {
        }
        public SearchCriteriasType(SearchCriteriasType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SearchCriteriasType))) {
            }
            else {
                this.SearchOR = value.SearchOR;
                this.SearchORSpecified = value.SearchORSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SearchAND", typeof(SearchANDType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SearchANDType[] SearchOR {
            get {
                return this.searchORField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SearchANDType[]))
                            || false)) {
                    this.searchORField = new SearchANDType[0];
                    this.searchORFieldSpecified = false;
                }
                else {
                    this.searchORField = value;
                    this.searchORFieldSpecified = (this.SearchORLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SearchORSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.searchORFieldSpecified
                            || (this.SearchORLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.searchORFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || (this.SearchORLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SearchCriteriasTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SearchCriteriasType";
                // END ADDED BY XSD
            }
        }
        public int SearchORLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.searchORField == default(SearchANDType[]))) {
                return 0;
            }
            else {
                return this.searchORField.Length;
            }
            // END ADDED BY XSD
        }
        public SearchANDType SearchORGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.searchORField == default(SearchANDType[]))) {
                    return default(SearchANDType);
                }
                else {
                    if ((0 > index)) {
                        return default(SearchANDType);
                    }
                    else {
                        if ((this.searchORField.Length <= index)) {
                            return default(SearchANDType);
                        }
                        else {
                            return this.searchORField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SearchANDType);
            }
            // END ADDED BY XSD
        }
        public bool SearchORSetItem(int index, SearchANDType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.searchORField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchORField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.searchORField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchORAddItem(SearchANDType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.searchORField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    SearchANDType[] array = new SearchANDType[(this.searchORField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.searchORField.Length); i = (i + 1)) {
                        array[i] = searchORField[i];
                    }
                    array[i] = value;
                    this.SearchOR = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchORRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.searchORField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchORField.Length <= index)) {
                            return false;
                        }
                        else {
                            SearchANDType[] array = new SearchANDType[(this.searchORField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = searchORField[i];
                            }
                            for (i = (i + 1); (i < this.searchORField.Length); i = (i + 1)) {
                                array[i] = searchORField[i];
                            }
                            this.SearchOR = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SearchORInsertItem(int index, SearchANDType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.searchORField == default(SearchANDType[]))) {
                    return -1;
                }
                else {
                    if ((this.searchORField.Length <= index)) {
                        if ((this.SearchORAddItem(value) == true)) {
                            return this.SearchORLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SearchANDType[] array = new SearchANDType[(this.searchORField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = searchORField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.searchORField.Length); j = (j + 1)) {
                            array[k] = searchORField[j];
                            k = (k + 1);
                        }
                        this.SearchOR = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("237c28d4-73e0-45ad-a9ba-621ae62f5362")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SearchORType : ISearchORType {
        private SearchANDType[] searchANDField = new SearchANDType[0];
        private bool searchANDFieldSpecified = false;
        public SearchORType() {
        }
        public SearchORType(SearchORType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SearchORType))) {
            }
            else {
                this.SearchAND = value.SearchAND;
                this.SearchANDSpecified = value.SearchANDSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SearchAND", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SearchANDType[] SearchAND {
            get {
                return this.searchANDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SearchANDType[]))
                            || false)) {
                    this.searchANDField = new SearchANDType[0];
                    this.searchANDFieldSpecified = false;
                }
                else {
                    this.searchANDField = value;
                    this.searchANDFieldSpecified = (this.SearchANDLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SearchANDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.searchANDFieldSpecified
                            || (this.SearchANDLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.searchANDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || (this.SearchANDLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SearchORTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SearchORType";
                // END ADDED BY XSD
            }
        }
        public int SearchANDLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.searchANDField == default(SearchANDType[]))) {
                return 0;
            }
            else {
                return this.searchANDField.Length;
            }
            // END ADDED BY XSD
        }
        public SearchANDType SearchANDGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.searchANDField == default(SearchANDType[]))) {
                    return default(SearchANDType);
                }
                else {
                    if ((0 > index)) {
                        return default(SearchANDType);
                    }
                    else {
                        if ((this.searchANDField.Length <= index)) {
                            return default(SearchANDType);
                        }
                        else {
                            return this.searchANDField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SearchANDType);
            }
            // END ADDED BY XSD
        }
        public bool SearchANDSetItem(int index, SearchANDType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.searchANDField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchANDField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.searchANDField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchANDAddItem(SearchANDType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.searchANDField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    SearchANDType[] array = new SearchANDType[(this.searchANDField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.searchANDField.Length); i = (i + 1)) {
                        array[i] = searchANDField[i];
                    }
                    array[i] = value;
                    this.SearchAND = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchANDRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.searchANDField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchANDField.Length <= index)) {
                            return false;
                        }
                        else {
                            SearchANDType[] array = new SearchANDType[(this.searchANDField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = searchANDField[i];
                            }
                            for (i = (i + 1); (i < this.searchANDField.Length); i = (i + 1)) {
                                array[i] = searchANDField[i];
                            }
                            this.SearchAND = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SearchANDInsertItem(int index, SearchANDType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.searchANDField == default(SearchANDType[]))) {
                    return -1;
                }
                else {
                    if ((this.searchANDField.Length <= index)) {
                        if ((this.SearchANDAddItem(value) == true)) {
                            return this.SearchANDLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SearchANDType[] array = new SearchANDType[(this.searchANDField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = searchANDField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.searchANDField.Length); j = (j + 1)) {
                            array[k] = searchANDField[j];
                            k = (k + 1);
                        }
                        this.SearchAND = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3d2862cb-9642-4259-8255-29937e7356a2")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SearchOutputOrderType : ISearchOutputOrderType {
        private CriteriaOrderType[] criteriaOrderField = new CriteriaOrderType[0];
        private bool criteriaOrderFieldSpecified = false;
        public SearchOutputOrderType() {
        }
        public SearchOutputOrderType(SearchOutputOrderType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SearchOutputOrderType))) {
            }
            else {
                this.CriteriaOrder = value.CriteriaOrder;
                this.CriteriaOrderSpecified = value.CriteriaOrderSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CriteriaOrder", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CriteriaOrderType[] CriteriaOrder {
            get {
                return this.criteriaOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CriteriaOrderType[]))
                            || false)) {
                    this.criteriaOrderField = new CriteriaOrderType[0];
                    this.criteriaOrderFieldSpecified = false;
                }
                else {
                    this.criteriaOrderField = value;
                    this.criteriaOrderFieldSpecified = (this.CriteriaOrderLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CriteriaOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.criteriaOrderFieldSpecified
                            || (this.CriteriaOrderLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.criteriaOrderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || (this.CriteriaOrderLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SearchOutputOrderTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SearchOutputOrderType";
                // END ADDED BY XSD
            }
        }
        public int CriteriaOrderLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.criteriaOrderField == default(CriteriaOrderType[]))) {
                return 0;
            }
            else {
                return this.criteriaOrderField.Length;
            }
            // END ADDED BY XSD
        }
        public CriteriaOrderType CriteriaOrderGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.criteriaOrderField == default(CriteriaOrderType[]))) {
                    return default(CriteriaOrderType);
                }
                else {
                    if ((0 > index)) {
                        return default(CriteriaOrderType);
                    }
                    else {
                        if ((this.criteriaOrderField.Length <= index)) {
                            return default(CriteriaOrderType);
                        }
                        else {
                            return this.criteriaOrderField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CriteriaOrderType);
            }
            // END ADDED BY XSD
        }
        public bool CriteriaOrderSetItem(int index, CriteriaOrderType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.criteriaOrderField == default(CriteriaOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.criteriaOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.criteriaOrderField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CriteriaOrderAddItem(CriteriaOrderType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.criteriaOrderField == default(CriteriaOrderType[]))) {
                    return false;
                }
                else {
                    CriteriaOrderType[] array = new CriteriaOrderType[(this.criteriaOrderField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.criteriaOrderField.Length); i = (i + 1)) {
                        array[i] = criteriaOrderField[i];
                    }
                    array[i] = value;
                    this.CriteriaOrder = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool CriteriaOrderRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.criteriaOrderField == default(CriteriaOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.criteriaOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            CriteriaOrderType[] array = new CriteriaOrderType[(this.criteriaOrderField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = criteriaOrderField[i];
                            }
                            for (i = (i + 1); (i < this.criteriaOrderField.Length); i = (i + 1)) {
                                array[i] = criteriaOrderField[i];
                            }
                            this.CriteriaOrder = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int CriteriaOrderInsertItem(int index, CriteriaOrderType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.criteriaOrderField == default(CriteriaOrderType[]))) {
                    return -1;
                }
                else {
                    if ((this.criteriaOrderField.Length <= index)) {
                        if ((this.CriteriaOrderAddItem(value) == true)) {
                            return this.CriteriaOrderLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CriteriaOrderType[] array = new CriteriaOrderType[(this.criteriaOrderField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = criteriaOrderField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.criteriaOrderField.Length); j = (j + 1)) {
                            array[k] = criteriaOrderField[j];
                            k = (k + 1);
                        }
                        this.CriteriaOrder = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ServicesEnabledEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        CardAcquisition,
        /// <remarks/>
        Payment,
        /// <remarks/>
        Loyalty,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum ServiceProfilesEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Synchro,
        /// <remarks/>
        Batch,
        /// <remarks/>
        OneTimeRes,
        /// <remarks/>
        Reservation,
        /// <remarks/>
        Loyalty,
        /// <remarks/>
        StoredValue,
        /// <remarks/>
        PIN,
        /// <remarks/>
        CardReader,
        /// <remarks/>
        Sound,
        /// <remarks/>
        Communication,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum SoundActionEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        StartSound,
        /// <remarks/>
        StopSound,
        /// <remarks/>
        SetDefaultVolume,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("53a2dd36-beba-47f2-996d-d7fd54a0d931")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SoundContentType : ISoundContentType {
        private string soundFormatField = default(string);
        private string languageField = default(string);
        private string referenceIDField = default(string);
        private string valueField = default(string);
        private bool soundFormatFieldSpecified = false;
        private bool languageFieldSpecified = false;
        private bool referenceIDFieldSpecified = false;
        private bool valueFieldSpecified = false;
        public SoundContentType() {
        }
        public SoundContentType(SoundContentType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SoundContentType))) {
            }
            else {
                this.SoundFormat = value.SoundFormat;
                this.Language = value.Language;
                this.ReferenceID = value.ReferenceID;
                this.Value = value.Value;
                this.SoundFormatSpecified = value.SoundFormatSpecified;
                this.LanguageSpecified = value.LanguageSpecified;
                this.ReferenceIDSpecified = value.ReferenceIDSpecified;
                this.ValueSpecified = value.ValueSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SoundFormat {
            get {
                return this.soundFormatField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.soundFormatField = default(string);
                    this.soundFormatFieldSpecified = false;
                }
                else {
                    this.soundFormatField = value;
                    this.soundFormatFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.languageField = default(string);
                    this.languageFieldSpecified = false;
                }
                else {
                    this.languageField = value;
                    this.languageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReferenceID {
            get {
                return this.referenceIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.referenceIDField = default(string);
                    this.referenceIDFieldSpecified = false;
                }
                else {
                    this.referenceIDField = value;
                    this.referenceIDFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.valueField = default(string);
                    this.valueFieldSpecified = false;
                }
                else {
                    this.valueField = value;
                    this.valueFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SoundFormatSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.soundFormatFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.soundFormatFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool LanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.languageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.languageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReferenceIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.referenceIDFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.referenceIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ValueSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.valueFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.valueFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.SoundFormat != default(string))
                            && this.SoundFormatSpecified))
                            || ((this.Language != default(string))
                            && this.LanguageSpecified))
                            || ((this.ReferenceID != default(string))
                            && this.ReferenceIDSpecified))
                            || ((this.Value != default(string))
                            && this.ValueSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SoundContentTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SoundContentType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("619cbc36-0189-47e8-9919-bf4720220b5e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SoundRequestType : ISoundRequestType {
        private SoundContentType soundContentField = new SoundContentType();
        private string responseModeField = default(string);
        private string soundActionField = default(string);
        private int soundVolumeField = default(int);
        private bool soundContentFieldSpecified = false;
        private string responseModeDefaultValue = "NotRequired";
        private bool responseModeFieldSpecified = false;
        private bool soundActionFieldSpecified = false;
        private bool soundVolumeFieldSpecified = false;
        public SoundRequestType() {
            this.responseModeField = this.responseModeDefaultValue;
        }
        public SoundRequestType(SoundRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SoundRequestType))) {
            }
            else {
                this.SoundContent = value.SoundContent;
                this.ResponseMode = value.ResponseMode;
                this.SoundAction = value.SoundAction;
                this.SoundVolume = value.SoundVolume;
                this.SoundContentSpecified = value.SoundContentSpecified;
                this.ResponseModeSpecified = value.ResponseModeSpecified;
                this.SoundActionSpecified = value.SoundActionSpecified;
                this.SoundVolumeSpecified = value.SoundVolumeSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SoundContentType SoundContent {
            get {
                return this.soundContentField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SoundContentType))
                            || false)) {
                    this.soundContentField = new SoundContentType();
                    this.soundContentFieldSpecified = false;
                }
                else {
                    this.soundContentField = value;
                    this.soundContentFieldSpecified = this.SoundContent.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("NotRequired")]
        public string ResponseMode {
            get {
                return this.responseModeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.ResponseModeDefaultValue)
                            || (value == default(string)))) {
                    this.responseModeField = this.ResponseModeDefaultValue;
                    this.responseModeFieldSpecified = false;
                }
                else {
                    this.responseModeField = value;
                    this.responseModeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SoundAction {
            get {
                return this.soundActionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.soundActionField = default(string);
                    this.soundActionFieldSpecified = false;
                }
                else {
                    this.soundActionField = value;
                    this.soundActionFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SoundVolume {
            get {
                return this.soundVolumeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.soundVolumeField = default(int);
                    this.soundVolumeFieldSpecified = false;
                }
                else {
                    this.soundVolumeField = value;
                    this.soundVolumeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SoundContentSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.soundContentFieldSpecified || this.SoundContent.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.soundContentFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string ResponseModeDefaultValue {
            get {
                return this.responseModeDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseModeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseModeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseModeFieldSpecified = value;
                if ((this.responseModeFieldSpecified
                            && (this.responseModeField == default(string)))) {
                    this.responseModeField = this.responseModeDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SoundActionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.soundActionFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.soundActionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SoundVolumeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.soundVolumeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.soundVolumeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.SoundContent != default(SoundContentType))
                            && this.SoundContentSpecified))
                            || ((this.ResponseMode != default(string))
                            && this.ResponseModeSpecified))
                            || ((this.SoundAction != default(string))
                            && this.SoundActionSpecified))
                            || ((this.SoundVolume != default(int))
                            && this.SoundVolumeSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SoundRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SoundRequestType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("ac961ade-9540-4237-9398-63df9d2792a0")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SoundResponseType : ISoundResponseType {
        private ResponseType responseField = new ResponseType();
        private bool responseFieldSpecified = false;
        public SoundResponseType() {
        }
        public SoundResponseType(SoundResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SoundResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.ResponseSpecified = value.ResponseSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SoundResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SoundResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum SoundFormatEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        SoundRef,
        /// <remarks/>
        MessageRef,
        /// <remarks/>
        Text,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum StoredValueAccountTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        GiftCard,
        /// <remarks/>
        PhoneCard,
        /// <remarks/>
        Other,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3b16818f-4fa2-4581-823a-99e502b60a45")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class StoredValueDataType : IStoredValueDataType {
        private StoredValueAccountIDType storedValueAccountIDField = new StoredValueAccountIDType();
        private OriginalPOITransactionType originalPOITransactionField = new OriginalPOITransactionType();
        private string storedValueProviderField = default(string);
        private string storedValueTransactionTypeField = default(string);
        private string productCodeField = default(string);
        private string eanUpcField = default(string);
        private double itemAmountField = default(double);
        private string currencyField = default(string);
        private bool storedValueAccountIDFieldSpecified = false;
        private bool originalPOITransactionFieldSpecified = false;
        private bool storedValueProviderFieldSpecified = false;
        private bool storedValueTransactionTypeFieldSpecified = false;
        private bool productCodeFieldSpecified = false;
        private bool eanUpcFieldSpecified = false;
        private bool itemAmountFieldSpecified = false;
        private bool currencyFieldSpecified = false;
        public StoredValueDataType() {
        }
        public StoredValueDataType(StoredValueDataType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(StoredValueDataType))) {
            }
            else {
                this.StoredValueAccountID = value.StoredValueAccountID;
                this.OriginalPOITransaction = value.OriginalPOITransaction;
                this.StoredValueProvider = value.StoredValueProvider;
                this.StoredValueTransactionType = value.StoredValueTransactionType;
                this.ProductCode = value.ProductCode;
                this.EanUpc = value.EanUpc;
                this.ItemAmount = value.ItemAmount;
                this.Currency = value.Currency;
                this.StoredValueAccountIDSpecified = value.StoredValueAccountIDSpecified;
                this.OriginalPOITransactionSpecified = value.OriginalPOITransactionSpecified;
                this.StoredValueProviderSpecified = value.StoredValueProviderSpecified;
                this.StoredValueTransactionTypeSpecified = value.StoredValueTransactionTypeSpecified;
                this.ProductCodeSpecified = value.ProductCodeSpecified;
                this.EanUpcSpecified = value.EanUpcSpecified;
                this.ItemAmountSpecified = value.ItemAmountSpecified;
                this.CurrencySpecified = value.CurrencySpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StoredValueAccountIDType StoredValueAccountID {
            get {
                return this.storedValueAccountIDField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(StoredValueAccountIDType))
                            || false)) {
                    this.storedValueAccountIDField = new StoredValueAccountIDType();
                    this.storedValueAccountIDFieldSpecified = false;
                }
                else {
                    this.storedValueAccountIDField = value;
                    this.storedValueAccountIDFieldSpecified = this.StoredValueAccountID.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OriginalPOITransactionType OriginalPOITransaction {
            get {
                return this.originalPOITransactionField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(OriginalPOITransactionType))
                            || false)) {
                    this.originalPOITransactionField = new OriginalPOITransactionType();
                    this.originalPOITransactionFieldSpecified = false;
                }
                else {
                    this.originalPOITransactionField = value;
                    this.originalPOITransactionFieldSpecified = this.OriginalPOITransaction.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StoredValueProvider {
            get {
                return this.storedValueProviderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.storedValueProviderField = default(string);
                    this.storedValueProviderFieldSpecified = false;
                }
                else {
                    this.storedValueProviderField = value;
                    this.storedValueProviderFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StoredValueTransactionType {
            get {
                return this.storedValueTransactionTypeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.storedValueTransactionTypeField = default(string);
                    this.storedValueTransactionTypeFieldSpecified = false;
                }
                else {
                    this.storedValueTransactionTypeField = value;
                    this.storedValueTransactionTypeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.productCodeField = default(string);
                    this.productCodeFieldSpecified = false;
                }
                else {
                    this.productCodeField = value;
                    this.productCodeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EanUpc {
            get {
                return this.eanUpcField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.eanUpcField = default(string);
                    this.eanUpcFieldSpecified = false;
                }
                else {
                    this.eanUpcField = value;
                    this.eanUpcFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ItemAmount {
            get {
                return this.itemAmountField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(double))
                            || false)) {
                    this.itemAmountField = default(double);
                    this.itemAmountFieldSpecified = false;
                }
                else {
                    this.itemAmountField = value;
                    this.itemAmountFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.currencyField = default(string);
                    this.currencyFieldSpecified = false;
                }
                else {
                    this.currencyField = value;
                    this.currencyFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueAccountIDSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueAccountIDFieldSpecified || this.StoredValueAccountID.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueAccountIDFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool OriginalPOITransactionSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.originalPOITransactionFieldSpecified || this.OriginalPOITransaction.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.originalPOITransactionFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueProviderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueProviderFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueProviderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueTransactionTypeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueTransactionTypeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueTransactionTypeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ProductCodeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.productCodeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.productCodeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool EanUpcSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.eanUpcFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.eanUpcFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemAmountSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemAmountFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemAmountFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CurrencySpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.currencyFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.currencyFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((((((false
                            || ((this.StoredValueAccountID != default(StoredValueAccountIDType))
                            && this.StoredValueAccountIDSpecified))
                            || ((this.OriginalPOITransaction != default(OriginalPOITransactionType))
                            && this.OriginalPOITransactionSpecified))
                            || ((this.StoredValueProvider != default(string))
                            && this.StoredValueProviderSpecified))
                            || ((this.StoredValueTransactionType != default(string))
                            && this.StoredValueTransactionTypeSpecified))
                            || ((this.ProductCode != default(string))
                            && this.ProductCodeSpecified))
                            || ((this.EanUpc != default(string))
                            && this.EanUpcSpecified))
                            || ((this.ItemAmount != default(double))
                            && this.ItemAmountSpecified))
                            || ((this.Currency != default(string))
                            && this.CurrencySpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string StoredValueDataTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "StoredValueDataType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("71526b88-edc5-449f-bd15-aa52dba3c40d")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class StoredValueRequestType : IStoredValueRequestType {
        private SaleDataType saleDataField = new SaleDataType();
        private StoredValueDataType[] storedValueDataField = new StoredValueDataType[0];
        private string customerLanguageField = default(string);
        private bool saleDataFieldSpecified = false;
        private bool storedValueDataFieldSpecified = false;
        private bool customerLanguageFieldSpecified = false;
        public StoredValueRequestType() {
        }
        public StoredValueRequestType(StoredValueRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(StoredValueRequestType))) {
            }
            else {
                this.SaleData = value.SaleData;
                this.StoredValueData = value.StoredValueData;
                this.CustomerLanguage = value.CustomerLanguage;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.StoredValueDataSpecified = value.StoredValueDataSpecified;
                this.CustomerLanguageSpecified = value.CustomerLanguageSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StoredValueData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StoredValueDataType[] StoredValueData {
            get {
                return this.storedValueDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(StoredValueDataType[]))
                            || false)) {
                    this.storedValueDataField = new StoredValueDataType[0];
                    this.storedValueDataFieldSpecified = false;
                }
                else {
                    this.storedValueDataField = value;
                    this.storedValueDataFieldSpecified = (this.StoredValueDataLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerLanguage {
            get {
                return this.customerLanguageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.customerLanguageField = default(string);
                    this.customerLanguageFieldSpecified = false;
                }
                else {
                    this.customerLanguageField = value;
                    this.customerLanguageFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool StoredValueDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.storedValueDataFieldSpecified
                            || (this.StoredValueDataLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.storedValueDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool CustomerLanguageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.customerLanguageFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.customerLanguageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || (this.StoredValueDataLength() != 0))
                            || ((this.CustomerLanguage != default(string))
                            && this.CustomerLanguageSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string StoredValueRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "StoredValueRequestType";
                // END ADDED BY XSD
            }
        }
        public int StoredValueDataLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.storedValueDataField == default(StoredValueDataType[]))) {
                return 0;
            }
            else {
                return this.storedValueDataField.Length;
            }
            // END ADDED BY XSD
        }
        public StoredValueDataType StoredValueDataGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.storedValueDataField == default(StoredValueDataType[]))) {
                    return default(StoredValueDataType);
                }
                else {
                    if ((0 > index)) {
                        return default(StoredValueDataType);
                    }
                    else {
                        if ((this.storedValueDataField.Length <= index)) {
                            return default(StoredValueDataType);
                        }
                        else {
                            return this.storedValueDataField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(StoredValueDataType);
            }
            // END ADDED BY XSD
        }
        public bool StoredValueDataSetItem(int index, StoredValueDataType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.storedValueDataField == default(StoredValueDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.storedValueDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.storedValueDataField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool StoredValueDataAddItem(StoredValueDataType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.storedValueDataField == default(StoredValueDataType[]))) {
                    return false;
                }
                else {
                    StoredValueDataType[] array = new StoredValueDataType[(this.storedValueDataField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.storedValueDataField.Length); i = (i + 1)) {
                        array[i] = storedValueDataField[i];
                    }
                    array[i] = value;
                    this.StoredValueData = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool StoredValueDataRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.storedValueDataField == default(StoredValueDataType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.storedValueDataField.Length <= index)) {
                            return false;
                        }
                        else {
                            StoredValueDataType[] array = new StoredValueDataType[(this.storedValueDataField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = storedValueDataField[i];
                            }
                            for (i = (i + 1); (i < this.storedValueDataField.Length); i = (i + 1)) {
                                array[i] = storedValueDataField[i];
                            }
                            this.StoredValueData = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int StoredValueDataInsertItem(int index, StoredValueDataType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.storedValueDataField == default(StoredValueDataType[]))) {
                    return -1;
                }
                else {
                    if ((this.storedValueDataField.Length <= index)) {
                        if ((this.StoredValueDataAddItem(value) == true)) {
                            return this.StoredValueDataLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        StoredValueDataType[] array = new StoredValueDataType[(this.storedValueDataField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = storedValueDataField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.storedValueDataField.Length); j = (j + 1)) {
                            array[k] = storedValueDataField[j];
                            k = (k + 1);
                        }
                        this.StoredValueData = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum StoredValueTransactionTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Reserve,
        /// <remarks/>
        Activate,
        /// <remarks/>
        Load,
        /// <remarks/>
        Unload,
        /// <remarks/>
        Reverse,
        /// <remarks/>
        Duplicate,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum TerminalEnvironmentEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Attended,
        /// <remarks/>
        SemiAttended,
        /// <remarks/>
        Unattended,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum TokenRequestedTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Transaction,
        /// <remarks/>
        Customer,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum TotalDetailsEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        POIID,
        /// <remarks/>
        SaleID,
        /// <remarks/>
        OperatorID,
        /// <remarks/>
        ShiftNumber,
        /// <remarks/>
        TotalsGroupID,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum TrackFormatEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        ISO,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("JIS-I")]
        JISI,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("JIS-II")]
        JISII,
        /// <remarks/>
        AAMVA,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CMC-7")]
        CMC7,
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("E-13B")]
        E13B,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("c2f0968d-4411-48f6-ae18-5f3887ac4ab1")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransmitRequestType : ITransmitRequestType {
        private byte[] messageField = new byte[0];
        private bool waitResponseFlagField = default(bool);
        private int maximumTransmitTimeField = default(int);
        private string destinationAddressField = default(string);
        private bool messageFieldSpecified = false;
        private bool waitResponseFlagDefaultValue = false;
        private bool waitResponseFlagFieldSpecified = false;
        private bool maximumTransmitTimeFieldSpecified = false;
        private bool destinationAddressFieldSpecified = false;
        public TransmitRequestType() {
            this.waitResponseFlagField = this.waitResponseFlagDefaultValue;
        }
        public TransmitRequestType(TransmitRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransmitRequestType))) {
            }
            else {
                this.Message = value.Message;
                this.WaitResponseFlag = value.WaitResponseFlag;
                this.MaximumTransmitTime = value.MaximumTransmitTime;
                this.DestinationAddress = value.DestinationAddress;
                this.MessageSpecified = value.MessageSpecified;
                this.WaitResponseFlagSpecified = value.WaitResponseFlagSpecified;
                this.MaximumTransmitTimeSpecified = value.MaximumTransmitTimeSpecified;
                this.DestinationAddressSpecified = value.DestinationAddressSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Message {
            get {
                return this.messageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.messageField = new byte[0];
                    this.messageFieldSpecified = false;
                }
                else {
                    this.messageField = value;
                    this.messageFieldSpecified = (this.MessageLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool WaitResponseFlag {
            get {
                return this.waitResponseFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.WaitResponseFlagDefaultValue)
                            || false)) {
                    this.waitResponseFlagField = this.WaitResponseFlagDefaultValue;
                    this.waitResponseFlagFieldSpecified = false;
                }
                else {
                    this.waitResponseFlagField = value;
                    this.waitResponseFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaximumTransmitTime {
            get {
                return this.maximumTransmitTimeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.maximumTransmitTimeField = default(int);
                    this.maximumTransmitTimeFieldSpecified = false;
                }
                else {
                    this.maximumTransmitTimeField = value;
                    this.maximumTransmitTimeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DestinationAddress {
            get {
                return this.destinationAddressField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(string))
                            || false)) {
                    this.destinationAddressField = default(string);
                    this.destinationAddressFieldSpecified = false;
                }
                else {
                    this.destinationAddressField = value;
                    this.destinationAddressFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageFieldSpecified
                            || (this.MessageLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool WaitResponseFlagDefaultValue {
            get {
                return this.waitResponseFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool WaitResponseFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.waitResponseFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.waitResponseFlagFieldSpecified = value;
                if ((this.waitResponseFlagFieldSpecified
                            && (this.waitResponseFlagField == default(bool)))) {
                    this.waitResponseFlagField = this.waitResponseFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MaximumTransmitTimeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.maximumTransmitTimeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.maximumTransmitTimeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DestinationAddressSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.destinationAddressFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.destinationAddressFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || (this.MessageLength() != 0))
                            || ((this.WaitResponseFlag != default(bool))
                            && this.WaitResponseFlagSpecified))
                            || ((this.MaximumTransmitTime != default(int))
                            && this.MaximumTransmitTimeSpecified))
                            || ((this.DestinationAddress != default(string))
                            && this.DestinationAddressSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransmitRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransmitRequestType";
                // END ADDED BY XSD
            }
        }
        public int MessageLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.messageField == default(byte[]))) {
                return 0;
            }
            else {
                return this.messageField.Length;
            }
            // END ADDED BY XSD
        }
        public byte MessageGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.messageField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.messageField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool MessageSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.messageField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.messageField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MessageAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.messageField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.messageField.Length); i = (i + 1)) {
                        array[i] = messageField[i];
                    }
                    array[i] = value;
                    this.Message = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MessageRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.messageField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.messageField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = messageField[i];
                            }
                            for (i = (i + 1); (i < this.messageField.Length); i = (i + 1)) {
                                array[i] = messageField[i];
                            }
                            this.Message = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int MessageInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.messageField.Length <= index)) {
                        if ((this.MessageAddItem(value) == true)) {
                            return this.MessageLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.messageField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = messageField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.messageField.Length); j = (j + 1)) {
                            array[k] = messageField[j];
                            k = (k + 1);
                        }
                        this.Message = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("0d6bcf2b-f2ac-4190-8f2a-a4b7644a928f")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransmitResponseType : ITransmitResponseType {
        private ResponseType responseField = new ResponseType();
        private byte[] messageField = new byte[0];
        private bool responseFieldSpecified = false;
        private bool messageFieldSpecified = false;
        public TransmitResponseType() {
        }
        public TransmitResponseType(TransmitResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransmitResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.Message = value.Message;
                this.ResponseSpecified = value.ResponseSpecified;
                this.MessageSpecified = value.MessageSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] Message {
            get {
                return this.messageField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(byte[]))
                            || false)) {
                    this.messageField = new byte[0];
                    this.messageFieldSpecified = false;
                }
                else {
                    this.messageField = value;
                    this.messageFieldSpecified = (this.MessageLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageFieldSpecified
                            || (this.MessageLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || (this.MessageLength() != 0));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransmitResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransmitResponseType";
                // END ADDED BY XSD
            }
        }
        public int MessageLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.messageField == default(byte[]))) {
                return 0;
            }
            else {
                return this.messageField.Length;
            }
            // END ADDED BY XSD
        }
        public byte MessageGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return default(byte);
                }
                else {
                    if ((0 > index)) {
                        return default(byte);
                    }
                    else {
                        if ((this.messageField.Length <= index)) {
                            return default(byte);
                        }
                        else {
                            return this.messageField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(byte);
            }
            // END ADDED BY XSD
        }
        public bool MessageSetItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.messageField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.messageField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MessageAddItem(byte value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return false;
                }
                else {
                    byte[] array = new byte[(this.messageField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.messageField.Length); i = (i + 1)) {
                        array[i] = messageField[i];
                    }
                    array[i] = value;
                    this.Message = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool MessageRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.messageField.Length <= index)) {
                            return false;
                        }
                        else {
                            byte[] array = new byte[(this.messageField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = messageField[i];
                            }
                            for (i = (i + 1); (i < this.messageField.Length); i = (i + 1)) {
                                array[i] = messageField[i];
                            }
                            this.Message = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int MessageInsertItem(int index, byte value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.messageField == default(byte[]))) {
                    return -1;
                }
                else {
                    if ((this.messageField.Length <= index)) {
                        if ((this.MessageAddItem(value) == true)) {
                            return this.MessageLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        byte[] array = new byte[(this.messageField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = messageField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.messageField.Length); j = (j + 1)) {
                            array[k] = messageField[j];
                            k = (k + 1);
                        }
                        this.Message = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("4d0f707d-4d89-4486-a8aa-9d46dc899f7e")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionReportType : ITransactionReportType {
        private ResponseType responseField = new ResponseType();
        private SaleDataType saleDataField = new SaleDataType();
        private POIDataType pOIDataField = new POIDataType();
        private PaymentResultType paymentResultField = new PaymentResultType();
        private bool responseFieldSpecified = false;
        private bool saleDataFieldSpecified = false;
        private bool pOIDataFieldSpecified = false;
        private bool paymentResultFieldSpecified = false;
        public TransactionReportType() {
        }
        public TransactionReportType(TransactionReportType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionReportType))) {
            }
            else {
                this.Response = value.Response;
                this.SaleData = value.SaleData;
                this.POIData = value.POIData;
                this.PaymentResult = value.PaymentResult;
                this.ResponseSpecified = value.ResponseSpecified;
                this.SaleDataSpecified = value.SaleDataSpecified;
                this.POIDataSpecified = value.POIDataSpecified;
                this.PaymentResultSpecified = value.PaymentResultSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SaleDataType SaleData {
            get {
                return this.saleDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(SaleDataType))
                            || false)) {
                    this.saleDataField = new SaleDataType();
                    this.saleDataFieldSpecified = false;
                }
                else {
                    this.saleDataField = value;
                    this.saleDataFieldSpecified = this.SaleData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public POIDataType POIData {
            get {
                return this.pOIDataField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(POIDataType))
                            || false)) {
                    this.pOIDataField = new POIDataType();
                    this.pOIDataFieldSpecified = false;
                }
                else {
                    this.pOIDataField = value;
                    this.pOIDataFieldSpecified = this.POIData.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PaymentResultType PaymentResult {
            get {
                return this.paymentResultField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(PaymentResultType))
                            || false)) {
                    this.paymentResultField = new PaymentResultType();
                    this.paymentResultFieldSpecified = false;
                }
                else {
                    this.paymentResultField = value;
                    this.paymentResultFieldSpecified = this.PaymentResult.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SaleDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.saleDataFieldSpecified || this.SaleData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.saleDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool POIDataSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.pOIDataFieldSpecified || this.POIData.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.pOIDataFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool PaymentResultSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.paymentResultFieldSpecified || this.PaymentResult.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.paymentResultFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return ((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.SaleData != default(SaleDataType))
                            && this.SaleDataSpecified))
                            || ((this.POIData != default(POIDataType))
                            && this.POIDataSpecified))
                            || ((this.PaymentResult != default(PaymentResultType))
                            && this.PaymentResultSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionReportTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionReportType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("8f46508c-517c-4cca-acae-a5e28a0cc941")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionReportRequestType : ITransactionReportRequestType {
        private SearchANDType[] searchCriteriasField = new SearchANDType[0];
        private CriteriaOrderType[] searchOutputOrderField = new CriteriaOrderType[0];
        private bool descendingOrderField = default(bool);
        private int blockStartField = default(int);
        private int blockStopField = default(int);
        private bool searchCriteriasFieldSpecified = false;
        private bool searchOutputOrderFieldSpecified = false;
        private bool descendingOrderDefaultValue = false;
        private bool descendingOrderFieldSpecified = false;
        private int blockStartDefaultValue = 0;
        private bool blockStartFieldSpecified = false;
        private bool blockStopFieldSpecified = false;
        public TransactionReportRequestType() {
            this.descendingOrderField = this.descendingOrderDefaultValue;
            this.blockStartField = this.blockStartDefaultValue;
        }
        public TransactionReportRequestType(TransactionReportRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionReportRequestType))) {
            }
            else {
                this.SearchCriterias = value.SearchCriterias;
                this.SearchOutputOrder = value.SearchOutputOrder;
                this.DescendingOrder = value.DescendingOrder;
                this.BlockStart = value.BlockStart;
                this.BlockStop = value.BlockStop;
                this.SearchCriteriasSpecified = value.SearchCriteriasSpecified;
                this.SearchOutputOrderSpecified = value.SearchOutputOrderSpecified;
                this.DescendingOrderSpecified = value.DescendingOrderSpecified;
                this.BlockStartSpecified = value.BlockStartSpecified;
                this.BlockStopSpecified = value.BlockStopSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SearchOR", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SearchAND", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false, NestingLevel=1)]
        public SearchANDType[] SearchCriterias {
            get {
                return this.searchCriteriasField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(SearchANDType[]))
                            || false)) {
                    this.searchCriteriasField = new SearchANDType[0];
                    this.searchCriteriasFieldSpecified = false;
                }
                else {
                    this.searchCriteriasField = value;
                    this.searchCriteriasFieldSpecified = (this.SearchCriteriasLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("CriteriaOrder", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public CriteriaOrderType[] SearchOutputOrder {
            get {
                return this.searchOutputOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(CriteriaOrderType[]))
                            || false)) {
                    this.searchOutputOrderField = new CriteriaOrderType[0];
                    this.searchOutputOrderFieldSpecified = false;
                }
                else {
                    this.searchOutputOrderField = value;
                    this.searchOutputOrderFieldSpecified = (this.SearchOutputOrderLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DescendingOrder {
            get {
                return this.descendingOrderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.DescendingOrderDefaultValue)
                            || false)) {
                    this.descendingOrderField = this.DescendingOrderDefaultValue;
                    this.descendingOrderFieldSpecified = false;
                }
                else {
                    this.descendingOrderField = value;
                    this.descendingOrderFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int BlockStart {
            get {
                return this.blockStartField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.BlockStartDefaultValue)
                            || false)) {
                    this.blockStartField = this.BlockStartDefaultValue;
                    this.blockStartFieldSpecified = false;
                }
                else {
                    this.blockStartField = value;
                    this.blockStartFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BlockStop {
            get {
                return this.blockStopField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.blockStopField = default(int);
                    this.blockStopFieldSpecified = false;
                }
                else {
                    this.blockStopField = value;
                    this.blockStopFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SearchCriteriasSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.searchCriteriasFieldSpecified
                            || (this.SearchCriteriasLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.searchCriteriasFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SearchOutputOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.searchOutputOrderFieldSpecified
                            || (this.SearchOutputOrderLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.searchOutputOrderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DescendingOrderDefaultValue {
            get {
                return this.descendingOrderDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DescendingOrderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.descendingOrderFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.descendingOrderFieldSpecified = value;
                if ((this.descendingOrderFieldSpecified
                            && (this.descendingOrderField == default(bool)))) {
                    this.descendingOrderField = this.descendingOrderDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public int BlockStartDefaultValue {
            get {
                return this.blockStartDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BlockStartSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.blockStartFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.blockStartFieldSpecified = value;
                if ((this.blockStartFieldSpecified
                            && (this.blockStartField == default(int)))) {
                    this.blockStartField = this.blockStartDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BlockStopSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.blockStopFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.blockStopFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || (this.SearchCriteriasLength() != 0))
                            || (this.SearchOutputOrderLength() != 0))
                            || ((this.DescendingOrder != default(bool))
                            && this.DescendingOrderSpecified))
                            || ((this.BlockStart != default(int))
                            && this.BlockStartSpecified))
                            || ((this.BlockStop != default(int))
                            && this.BlockStopSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionReportRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionReportRequestType";
                // END ADDED BY XSD
            }
        }
        public int SearchCriteriasLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.searchCriteriasField == default(SearchANDType[]))) {
                return 0;
            }
            else {
                return this.searchCriteriasField.Length;
            }
            // END ADDED BY XSD
        }
        public SearchANDType SearchCriteriasGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.searchCriteriasField == default(SearchANDType[]))) {
                    return default(SearchANDType);
                }
                else {
                    if ((0 > index)) {
                        return default(SearchANDType);
                    }
                    else {
                        if ((this.searchCriteriasField.Length <= index)) {
                            return default(SearchANDType);
                        }
                        else {
                            return this.searchCriteriasField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(SearchANDType);
            }
            // END ADDED BY XSD
        }
        public bool SearchCriteriasSetItem(int index, SearchANDType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.searchCriteriasField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchCriteriasField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.searchCriteriasField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchCriteriasAddItem(SearchANDType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.searchCriteriasField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    SearchANDType[] array = new SearchANDType[(this.searchCriteriasField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.searchCriteriasField.Length); i = (i + 1)) {
                        array[i] = searchCriteriasField[i];
                    }
                    array[i] = value;
                    this.SearchCriterias = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchCriteriasRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.searchCriteriasField == default(SearchANDType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchCriteriasField.Length <= index)) {
                            return false;
                        }
                        else {
                            SearchANDType[] array = new SearchANDType[(this.searchCriteriasField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = searchCriteriasField[i];
                            }
                            for (i = (i + 1); (i < this.searchCriteriasField.Length); i = (i + 1)) {
                                array[i] = searchCriteriasField[i];
                            }
                            this.SearchCriterias = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SearchCriteriasInsertItem(int index, SearchANDType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.searchCriteriasField == default(SearchANDType[]))) {
                    return -1;
                }
                else {
                    if ((this.searchCriteriasField.Length <= index)) {
                        if ((this.SearchCriteriasAddItem(value) == true)) {
                            return this.SearchCriteriasLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        SearchANDType[] array = new SearchANDType[(this.searchCriteriasField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = searchCriteriasField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.searchCriteriasField.Length); j = (j + 1)) {
                            array[k] = searchCriteriasField[j];
                            k = (k + 1);
                        }
                        this.SearchCriterias = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
        public int SearchOutputOrderLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.searchOutputOrderField == default(CriteriaOrderType[]))) {
                return 0;
            }
            else {
                return this.searchOutputOrderField.Length;
            }
            // END ADDED BY XSD
        }
        public CriteriaOrderType SearchOutputOrderGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.searchOutputOrderField == default(CriteriaOrderType[]))) {
                    return default(CriteriaOrderType);
                }
                else {
                    if ((0 > index)) {
                        return default(CriteriaOrderType);
                    }
                    else {
                        if ((this.searchOutputOrderField.Length <= index)) {
                            return default(CriteriaOrderType);
                        }
                        else {
                            return this.searchOutputOrderField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(CriteriaOrderType);
            }
            // END ADDED BY XSD
        }
        public bool SearchOutputOrderSetItem(int index, CriteriaOrderType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.searchOutputOrderField == default(CriteriaOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchOutputOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.searchOutputOrderField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchOutputOrderAddItem(CriteriaOrderType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.searchOutputOrderField == default(CriteriaOrderType[]))) {
                    return false;
                }
                else {
                    CriteriaOrderType[] array = new CriteriaOrderType[(this.searchOutputOrderField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.searchOutputOrderField.Length); i = (i + 1)) {
                        array[i] = searchOutputOrderField[i];
                    }
                    array[i] = value;
                    this.SearchOutputOrder = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool SearchOutputOrderRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.searchOutputOrderField == default(CriteriaOrderType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.searchOutputOrderField.Length <= index)) {
                            return false;
                        }
                        else {
                            CriteriaOrderType[] array = new CriteriaOrderType[(this.searchOutputOrderField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = searchOutputOrderField[i];
                            }
                            for (i = (i + 1); (i < this.searchOutputOrderField.Length); i = (i + 1)) {
                                array[i] = searchOutputOrderField[i];
                            }
                            this.SearchOutputOrder = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int SearchOutputOrderInsertItem(int index, CriteriaOrderType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.searchOutputOrderField == default(CriteriaOrderType[]))) {
                    return -1;
                }
                else {
                    if ((this.searchOutputOrderField.Length <= index)) {
                        if ((this.SearchOutputOrderAddItem(value) == true)) {
                            return this.SearchOutputOrderLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        CriteriaOrderType[] array = new CriteriaOrderType[(this.searchOutputOrderField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = searchOutputOrderField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.searchOutputOrderField.Length); j = (j + 1)) {
                            array[k] = searchOutputOrderField[j];
                            k = (k + 1);
                        }
                        this.SearchOutputOrder = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("019f1476-64e4-41a8-8c57-58d581431606")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionReportResponseType : ITransactionReportResponseType {
        private ResponseType responseField = new ResponseType();
        private TransactionReportType[] transactionReportField = new TransactionReportType[0];
        private int reportFullSizeField = default(int);
        private int blockStartField = default(int);
        private int blockStopField = default(int);
        private bool responseFieldSpecified = false;
        private bool transactionReportFieldSpecified = false;
        private bool reportFullSizeFieldSpecified = false;
        private bool blockStartFieldSpecified = false;
        private bool blockStopFieldSpecified = false;
        public TransactionReportResponseType() {
        }
        public TransactionReportResponseType(TransactionReportResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionReportResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.TransactionReport = value.TransactionReport;
                this.ReportFullSize = value.ReportFullSize;
                this.BlockStart = value.BlockStart;
                this.BlockStop = value.BlockStop;
                this.ResponseSpecified = value.ResponseSpecified;
                this.TransactionReportSpecified = value.TransactionReportSpecified;
                this.ReportFullSizeSpecified = value.ReportFullSizeSpecified;
                this.BlockStartSpecified = value.BlockStartSpecified;
                this.BlockStopSpecified = value.BlockStopSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TransactionReport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TransactionReportType[] TransactionReport {
            get {
                return this.transactionReportField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(TransactionReportType[]))
                            || false)) {
                    this.transactionReportField = new TransactionReportType[0];
                    this.transactionReportFieldSpecified = false;
                }
                else {
                    this.transactionReportField = value;
                    this.transactionReportFieldSpecified = (this.TransactionReportLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ReportFullSize {
            get {
                return this.reportFullSizeField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.reportFullSizeField = default(int);
                    this.reportFullSizeFieldSpecified = false;
                }
                else {
                    this.reportFullSizeField = value;
                    this.reportFullSizeFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BlockStart {
            get {
                return this.blockStartField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.blockStartField = default(int);
                    this.blockStartFieldSpecified = false;
                }
                else {
                    this.blockStartField = value;
                    this.blockStartFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BlockStop {
            get {
                return this.blockStopField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(int))
                            || false)) {
                    this.blockStopField = default(int);
                    this.blockStopFieldSpecified = false;
                }
                else {
                    this.blockStopField = value;
                    this.blockStopFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool TransactionReportSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.transactionReportFieldSpecified
                            || (this.TransactionReportLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.transactionReportFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReportFullSizeSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.reportFullSizeFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.reportFullSizeFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BlockStartSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.blockStartFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.blockStartFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool BlockStopSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.blockStopFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.blockStopFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || (this.TransactionReportLength() != 0))
                            || ((this.ReportFullSize != default(int))
                            && this.ReportFullSizeSpecified))
                            || ((this.BlockStart != default(int))
                            && this.BlockStartSpecified))
                            || ((this.BlockStop != default(int))
                            && this.BlockStopSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionReportResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionReportResponseType";
                // END ADDED BY XSD
            }
        }
        public int TransactionReportLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.transactionReportField == default(TransactionReportType[]))) {
                return 0;
            }
            else {
                return this.transactionReportField.Length;
            }
            // END ADDED BY XSD
        }
        public TransactionReportType TransactionReportGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.transactionReportField == default(TransactionReportType[]))) {
                    return default(TransactionReportType);
                }
                else {
                    if ((0 > index)) {
                        return default(TransactionReportType);
                    }
                    else {
                        if ((this.transactionReportField.Length <= index)) {
                            return default(TransactionReportType);
                        }
                        else {
                            return this.transactionReportField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(TransactionReportType);
            }
            // END ADDED BY XSD
        }
        public bool TransactionReportSetItem(int index, TransactionReportType value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.transactionReportField == default(TransactionReportType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionReportField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.transactionReportField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionReportAddItem(TransactionReportType value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.transactionReportField == default(TransactionReportType[]))) {
                    return false;
                }
                else {
                    TransactionReportType[] array = new TransactionReportType[(this.transactionReportField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.transactionReportField.Length); i = (i + 1)) {
                        array[i] = transactionReportField[i];
                    }
                    array[i] = value;
                    this.TransactionReport = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool TransactionReportRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.transactionReportField == default(TransactionReportType[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.transactionReportField.Length <= index)) {
                            return false;
                        }
                        else {
                            TransactionReportType[] array = new TransactionReportType[(this.transactionReportField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = transactionReportField[i];
                            }
                            for (i = (i + 1); (i < this.transactionReportField.Length); i = (i + 1)) {
                                array[i] = transactionReportField[i];
                            }
                            this.TransactionReport = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int TransactionReportInsertItem(int index, TransactionReportType value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.transactionReportField == default(TransactionReportType[]))) {
                    return -1;
                }
                else {
                    if ((this.transactionReportField.Length <= index)) {
                        if ((this.TransactionReportAddItem(value) == true)) {
                            return this.TransactionReportLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        TransactionReportType[] array = new TransactionReportType[(this.transactionReportField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = transactionReportField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.transactionReportField.Length); j = (j + 1)) {
                            array[k] = transactionReportField[j];
                            k = (k + 1);
                        }
                        this.TransactionReport = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("514711aa-ab69-4716-83c3-3103f90659de")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionStatusRequestType : ITransactionStatusRequestType {
        private MessageReferenceType messageReferenceField = new MessageReferenceType();
        private string[] documentQualifierField = new string[0];
        private bool receiptReprintFlagField = default(bool);
        private bool messageReferenceFieldSpecified = false;
        private bool documentQualifierFieldSpecified = false;
        private bool receiptReprintFlagDefaultValue = false;
        private bool receiptReprintFlagFieldSpecified = false;
        public TransactionStatusRequestType() {
            this.receiptReprintFlagField = this.receiptReprintFlagDefaultValue;
        }
        public TransactionStatusRequestType(TransactionStatusRequestType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionStatusRequestType))) {
            }
            else {
                this.MessageReference = value.MessageReference;
                this.DocumentQualifier = value.DocumentQualifier;
                this.ReceiptReprintFlag = value.ReceiptReprintFlag;
                this.MessageReferenceSpecified = value.MessageReferenceSpecified;
                this.DocumentQualifierSpecified = value.DocumentQualifierSpecified;
                this.ReceiptReprintFlagSpecified = value.ReceiptReprintFlagSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageReferenceType MessageReference {
            get {
                return this.messageReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MessageReferenceType))
                            || false)) {
                    this.messageReferenceField = new MessageReferenceType();
                    this.messageReferenceFieldSpecified = false;
                }
                else {
                    this.messageReferenceField = value;
                    this.messageReferenceFieldSpecified = this.MessageReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DocumentQualifier", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] DocumentQualifier {
            get {
                return this.documentQualifierField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent array from being null
                if (((value == default(string[]))
                            || false)) {
                    this.documentQualifierField = new string[0];
                    this.documentQualifierFieldSpecified = false;
                }
                else {
                    this.documentQualifierField = value;
                    this.documentQualifierFieldSpecified = (this.DocumentQualifierLength() > 0);
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReceiptReprintFlag {
            get {
                return this.receiptReprintFlagField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == this.ReceiptReprintFlagDefaultValue)
                            || false)) {
                    this.receiptReprintFlagField = this.ReceiptReprintFlagDefaultValue;
                    this.receiptReprintFlagFieldSpecified = false;
                }
                else {
                    this.receiptReprintFlagField = value;
                    this.receiptReprintFlagFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageReferenceFieldSpecified || this.MessageReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool DocumentQualifierSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.documentQualifierFieldSpecified
                            || (this.DocumentQualifierLength() > 0));
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.documentQualifierFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReceiptReprintFlagDefaultValue {
            get {
                return this.receiptReprintFlagDefaultValue;
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ReceiptReprintFlagSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.receiptReprintFlagFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.receiptReprintFlagFieldSpecified = value;
                if ((this.receiptReprintFlagFieldSpecified
                            && (this.receiptReprintFlagField == default(bool)))) {
                    this.receiptReprintFlagField = this.receiptReprintFlagDefaultValue;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.MessageReference != default(MessageReferenceType))
                            && this.MessageReferenceSpecified))
                            || (this.DocumentQualifierLength() != 0))
                            || ((this.ReceiptReprintFlag != default(bool))
                            && this.ReceiptReprintFlagSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionStatusRequestTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionStatusRequestType";
                // END ADDED BY XSD
            }
        }
        public int DocumentQualifierLength() {
            // BEGIN ADDED BY XSD - array Length accessor
            if ((this.documentQualifierField == default(string[]))) {
                return 0;
            }
            else {
                return this.documentQualifierField.Length;
            }
            // END ADDED BY XSD
        }
        public string DocumentQualifierGetItem(int index) {
            // BEGIN ADDED BY XSD - array GetItem accessor
            try {
                if ((this.documentQualifierField == default(string[]))) {
                    return default(string);
                }
                else {
                    if ((0 > index)) {
                        return default(string);
                    }
                    else {
                        if ((this.documentQualifierField.Length <= index)) {
                            return default(string);
                        }
                        else {
                            return this.documentQualifierField[index];
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return default(string);
            }
            // END ADDED BY XSD
        }
        public bool DocumentQualifierSetItem(int index, string value) {
            // BEGIN ADDED BY XSD - array SetItem accessor
            try {
                if ((this.documentQualifierField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.documentQualifierField.Length <= index)) {
                            return false;
                        }
                        else {
                            this.documentQualifierField[index] = value;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DocumentQualifierAddItem(string value) {
            // BEGIN ADDED BY XSD - array AddItem accessor
            try {
                if ((this.documentQualifierField == default(string[]))) {
                    return false;
                }
                else {
                    string[] array = new string[(this.documentQualifierField.Length + 1)];
                    int i = 0;
                    for (i = 0; (i < this.documentQualifierField.Length); i = (i + 1)) {
                        array[i] = documentQualifierField[i];
                    }
                    array[i] = value;
                    this.DocumentQualifier = array;
                    return true;
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public bool DocumentQualifierRemoveItem(int index) {
            // BEGIN ADDED BY XSD - array RemoveItem accessor
            try {
                if ((this.documentQualifierField == default(string[]))) {
                    return false;
                }
                else {
                    if ((0 > index)) {
                        return false;
                    }
                    else {
                        if ((this.documentQualifierField.Length <= index)) {
                            return false;
                        }
                        else {
                            string[] array = new string[(this.documentQualifierField.Length - 1)];
                            int i = 0;
                            for (i = 0; (i < index); i = (i + 1)) {
                                array[i] = documentQualifierField[i];
                            }
                            for (i = (i + 1); (i < this.documentQualifierField.Length); i = (i + 1)) {
                                array[i] = documentQualifierField[i];
                            }
                            this.DocumentQualifier = array;
                            return true;
                        }
                    }
                }
            }
            catch (System.Exception ex) {
                return false;
            }
            // END ADDED BY XSD
        }
        public int DocumentQualifierInsertItem(int index, string value) {
            // BEGIN ADDED BY XSD - array InsertItem accessor
            try {
                if ((this.documentQualifierField == default(string[]))) {
                    return -1;
                }
                else {
                    if ((this.documentQualifierField.Length <= index)) {
                        if ((this.DocumentQualifierAddItem(value) == true)) {
                            return this.DocumentQualifierLength();
                        }
                        else {
                            return -1;
                        }
                    }
                    else {
                        if ((index < 0)) {
                            index = 0;
                        }
                        string[] array = new string[(this.documentQualifierField.Length + 1)];
                        int i = 0;
                        for (i = 0; (i < index); i = (i + 1)) {
                            array[i] = documentQualifierField[i];
                        }
                        array[index] = value;
                        int j = 0;
                        int k = (index + 1);
                        for (j = i; (j < this.documentQualifierField.Length); j = (j + 1)) {
                            array[k] = documentQualifierField[j];
                            k = (k + 1);
                        }
                        this.DocumentQualifier = array;
                        return index;
                    }
                }
            }
            catch (System.Exception ex) {
                return -1;
            }
            // END ADDED BY XSD
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
    [System.Runtime.InteropServices.GuidAttribute("3ae40863-a7fe-44fb-b65c-e0c1c33a0e46")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class TransactionStatusResponseType : ITransactionStatusResponseType {
        private ResponseType responseField = new ResponseType();
        private MessageReferenceType messageReferenceField = new MessageReferenceType();
        private RepeatedMessageResponseType repeatedMessageResponseField = new RepeatedMessageResponseType();
        private bool responseFieldSpecified = false;
        private bool messageReferenceFieldSpecified = false;
        private bool repeatedMessageResponseFieldSpecified = false;
        public TransactionStatusResponseType() {
        }
        public TransactionStatusResponseType(TransactionStatusResponseType value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(TransactionStatusResponseType))) {
            }
            else {
                this.Response = value.Response;
                this.MessageReference = value.MessageReference;
                this.RepeatedMessageResponse = value.RepeatedMessageResponse;
                this.ResponseSpecified = value.ResponseSpecified;
                this.MessageReferenceSpecified = value.MessageReferenceSpecified;
                this.RepeatedMessageResponseSpecified = value.RepeatedMessageResponseSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ResponseType Response {
            get {
                return this.responseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ResponseType))
                            || false)) {
                    this.responseField = new ResponseType();
                    this.responseFieldSpecified = false;
                }
                else {
                    this.responseField = value;
                    this.responseFieldSpecified = this.Response.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageReferenceType MessageReference {
            get {
                return this.messageReferenceField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MessageReferenceType))
                            || false)) {
                    this.messageReferenceField = new MessageReferenceType();
                    this.messageReferenceFieldSpecified = false;
                }
                else {
                    this.messageReferenceField = value;
                    this.messageReferenceFieldSpecified = this.MessageReference.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RepeatedMessageResponseType RepeatedMessageResponse {
            get {
                return this.repeatedMessageResponseField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(RepeatedMessageResponseType))
                            || false)) {
                    this.repeatedMessageResponseField = new RepeatedMessageResponseType();
                    this.repeatedMessageResponseFieldSpecified = false;
                }
                else {
                    this.repeatedMessageResponseField = value;
                    this.repeatedMessageResponseFieldSpecified = this.RepeatedMessageResponse.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.responseFieldSpecified || this.Response.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.responseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageReferenceSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageReferenceFieldSpecified || this.MessageReference.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageReferenceFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool RepeatedMessageResponseSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.repeatedMessageResponseFieldSpecified || this.RepeatedMessageResponse.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.repeatedMessageResponseFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.Response != default(ResponseType))
                            && this.ResponseSpecified))
                            || ((this.MessageReference != default(MessageReferenceType))
                            && this.MessageReferenceSpecified))
                            || ((this.RepeatedMessageResponse != default(RepeatedMessageResponseType))
                            && this.RepeatedMessageResponseSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string TransactionStatusResponseTypeClassName {
            get {
                // BEGIN ADDED BY XSD
                return "TransactionStatusResponseType";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum TransactionActionEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        StartTransaction,
        /// <remarks/>
        AbortTransaction,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum TransactionTypeEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Debit,
        /// <remarks/>
        Credit,
        /// <remarks/>
        ReverseDebit,
        /// <remarks/>
        ReverseCredit,
        /// <remarks/>
        OneTimeReservation,
        /// <remarks/>
        CompletedDeffered,
        /// <remarks/>
        FirstReservation,
        /// <remarks/>
        UpdateReservation,
        /// <remarks/>
        CompletedReservation,
        /// <remarks/>
        CashAdvance,
        /// <remarks/>
        IssuerInstalment,
        /// <remarks/>
        Declined,
        /// <remarks/>
        Failed,
        /// <remarks/>
        Award,
        /// <remarks/>
        ReverseAward,
        /// <remarks/>
        Redemption,
        /// <remarks/>
        ReverseRedemption,
        /// <remarks/>
        Rebate,
        /// <remarks/>
        ReverseRebate,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum UnitOfMeasureEnumeration {
        _none = -2,
        _begin,
        /// <remarks/>
        Case,
        /// <remarks/>
        Foot,
        /// <remarks/>
        UKGallon,
        /// <remarks/>
        USGallon,
        /// <remarks/>
        Gram,
        /// <remarks/>
        Inch,
        /// <remarks/>
        Kilogram,
        /// <remarks/>
        Pound,
        /// <remarks/>
        Meter,
        /// <remarks/>
        Centimetre,
        /// <remarks/>
        Litre,
        /// <remarks/>
        Centilitre,
        /// <remarks/>
        Ounce,
        /// <remarks/>
        Quart,
        /// <remarks/>
        Pint,
        /// <remarks/>
        Mile,
        /// <remarks/>
        Kilometre,
        /// <remarks/>
        Yard,
        /// <remarks/>
        Other,
        _end,
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.GuidAttribute("bcfe5b96-2ba2-4d11-8f3b-8e9431fa382a")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleToPOIRequest : ISaleToPOIRequest {
        private MessageHeaderType messageHeaderField = new MessageHeaderType();
        private object itemField = default(object);
        private ContentInformationType securityTrailerField = new ContentInformationType();
        private bool messageHeaderFieldSpecified = false;
        private bool itemFieldSpecified = false;
        private bool securityTrailerFieldSpecified = false;
        public SaleToPOIRequest() {
        }
        public SaleToPOIRequest(SaleToPOIRequest value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleToPOIRequest))) {
            }
            else {
                this.MessageHeader = value.MessageHeader;
                this.Item = value.Item;
                this.SecurityTrailer = value.SecurityTrailer;
                this.MessageHeaderSpecified = value.MessageHeaderSpecified;
                this.ItemSpecified = value.ItemSpecified;
                this.SecurityTrailerSpecified = value.SecurityTrailerSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageHeaderType MessageHeader {
            get {
                return this.messageHeaderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MessageHeaderType))
                            || false)) {
                    this.messageHeaderField = new MessageHeaderType();
                    this.messageHeaderFieldSpecified = false;
                }
                else {
                    this.messageHeaderField = value;
                    this.messageHeaderFieldSpecified = this.MessageHeader.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AbortRequest", typeof(AbortRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AdminRequest", typeof(AdminRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BalanceInquiryRequest", typeof(BalanceInquiryRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BatchRequest", typeof(BatchRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardAcquisitionRequest", typeof(CardAcquisitionRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardReaderAPDURequest", typeof(CardReaderAPDURequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardReaderInitRequest", typeof(CardReaderInitRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardReaderPowerOffRequest", typeof(CardReaderPowerOffRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DiagnosisRequest", typeof(DiagnosisRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisplayRequest", typeof(DisplayRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnableServiceRequest", typeof(EnableServiceRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EventNotification", typeof(EventNotificationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetTotalsRequest", typeof(GetTotalsRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputRequest", typeof(InputRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputUpdate", typeof(InputUpdateType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoginRequest", typeof(LoginRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogoutRequest", typeof(LogoutRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyRequest", typeof(LoyaltyRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PINRequest", typeof(PINRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentRequest", typeof(PaymentRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PrintRequest", typeof(PrintRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReconciliationRequest", typeof(ReconciliationRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReversalRequest", typeof(ReversalRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoundRequest", typeof(SoundRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StoredValueRequest", typeof(StoredValueRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionReportRequest", typeof(TransactionReportRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionStatusRequest", typeof(TransactionStatusRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransmitRequest", typeof(TransmitRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(object))
                            || false)) {
                    this.itemField = default(object);
                    this.itemFieldSpecified = false;
                }
                else {
                    this.itemField = value;
                    this.itemFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContentInformationType SecurityTrailer {
            get {
                return this.securityTrailerField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ContentInformationType))
                            || false)) {
                    this.securityTrailerField = new ContentInformationType();
                    this.securityTrailerFieldSpecified = false;
                }
                else {
                    this.securityTrailerField = value;
                    this.securityTrailerFieldSpecified = this.SecurityTrailer.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageHeaderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageHeaderFieldSpecified || this.MessageHeader.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageHeaderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SecurityTrailerSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.securityTrailerFieldSpecified || this.SecurityTrailer.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.securityTrailerFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.MessageHeader != default(MessageHeaderType))
                            && this.MessageHeaderSpecified))
                            || ((this.SecurityTrailer != default(ContentInformationType))
                            && this.SecurityTrailerSpecified))
                            || ((this.Item != default(object))
                            && this.ItemSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleToPOIRequestClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleToPOIRequest";
                // END ADDED BY XSD
            }
        }
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("myXSD", "4.7.0.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    [System.Runtime.InteropServices.GuidAttribute("86c5dcef-662d-42e7-9c6c-665c3fc23702")]
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class SaleToPOIResponse : ISaleToPOIResponse {
        private MessageHeaderType messageHeaderField = new MessageHeaderType();
        private object itemField = default(object);
        private ContentInformationType securityTrailerField = new ContentInformationType();
        private bool messageHeaderFieldSpecified = false;
        private bool itemFieldSpecified = false;
        private bool securityTrailerFieldSpecified = false;
        public SaleToPOIResponse() {
        }
        public SaleToPOIResponse(SaleToPOIResponse value) {
            // BEGIN ADDED BY XSD - copy constructor
            if ((value == default(SaleToPOIResponse))) {
            }
            else {
                this.MessageHeader = value.MessageHeader;
                this.Item = value.Item;
                this.SecurityTrailer = value.SecurityTrailer;
                this.MessageHeaderSpecified = value.MessageHeaderSpecified;
                this.ItemSpecified = value.ItemSpecified;
                this.SecurityTrailerSpecified = value.SecurityTrailerSpecified;
            }
            // END ADDED BY XSD - copy constructor
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageHeaderType MessageHeader {
            get {
                return this.messageHeaderField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(MessageHeaderType))
                            || false)) {
                    this.messageHeaderField = new MessageHeaderType();
                    this.messageHeaderFieldSpecified = false;
                }
                else {
                    this.messageHeaderField = value;
                    this.messageHeaderFieldSpecified = this.MessageHeader.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AdminResponse", typeof(AdminResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BalanceInquiryResponse", typeof(BalanceInquiryResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BatchResponse", typeof(BatchResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardAcquisitionResponse", typeof(CardAcquisitionResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardReaderAPDUResponse", typeof(CardReaderAPDUResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardReaderInitResponse", typeof(CardReaderInitResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CardReaderPowerOffResponse", typeof(CardReaderPowerOffResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DiagnosisResponse", typeof(DiagnosisResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisplayResponse", typeof(DisplayResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnableServiceResponse", typeof(EnableServiceResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetTotalsResponse", typeof(GetTotalsResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputResponse", typeof(InputResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoginResponse", typeof(LoginResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogoutResponse", typeof(LogoutResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoyaltyResponse", typeof(LoyaltyResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PINResponse", typeof(PINResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PaymentResponse", typeof(PaymentResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PrintResponse", typeof(PrintResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReconciliationResponse", typeof(ReconciliationResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReversalResponse", typeof(ReversalResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoundResponse", typeof(SoundResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StoredValueResponse", typeof(StoredValueResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionReportResponse", typeof(TransactionReportResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionStatusResponse", typeof(TransactionStatusResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransmitResponse", typeof(TransmitResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(object))
                            || false)) {
                    this.itemField = default(object);
                    this.itemFieldSpecified = false;
                }
                else {
                    this.itemField = value;
                    this.itemFieldSpecified = true;
                }
                // END ADDED BY XSD
            }
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContentInformationType SecurityTrailer {
            get {
                return this.securityTrailerField;
            }
            set {
                // BEGIN ADDED BY XSD - prevent class from being null
                if (((value == default(ContentInformationType))
                            || false)) {
                    this.securityTrailerField = new ContentInformationType();
                    this.securityTrailerFieldSpecified = false;
                }
                else {
                    this.securityTrailerField = value;
                    this.securityTrailerFieldSpecified = this.SecurityTrailer.ObjectHasBeenSet;
                }
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool MessageHeaderSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.messageHeaderFieldSpecified || this.MessageHeader.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.messageHeaderFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ItemSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.itemFieldSpecified || false);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.itemFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool SecurityTrailerSpecified {
            get {
                // BEGIN ADDED BY XSD
                return (this.securityTrailerFieldSpecified || this.SecurityTrailer.ObjectHasBeenSet);
                // END ADDED BY XSD
            }
            set {
                // BEGIN ADDED BY XSD
                this.securityTrailerFieldSpecified = value;
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public bool ObjectHasBeenSet {
            get {
                // BEGIN ADDED BY XSD
                return (((false
                            || ((this.MessageHeader != default(MessageHeaderType))
                            && this.MessageHeaderSpecified))
                            || ((this.SecurityTrailer != default(ContentInformationType))
                            && this.SecurityTrailerSpecified))
                            || ((this.Item != default(object))
                            && this.ItemSpecified));
                // END ADDED BY XSD
            }
        }
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [Newtonsoft.Json.JsonIgnore()]
        public string SaleToPOIResponseClassName {
            get {
                // BEGIN ADDED BY XSD
                return "SaleToPOIResponse";
                // END ADDED BY XSD
            }
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("2161aa07-998f-496d-ada5-2d8b99d6a7f3")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAuthenticatedDataType {
        /// <remarks/>
        [DispId(2)]
        object[] Items {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        AlgorithmIdentifier MACAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        EncapsulatedContentType EncapsulatedContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string Version {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        byte[] MAC {
            get;
            set;
        }
        [DispId(7)]
        bool ItemsSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool MACAlgorithmSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool EncapsulatedContentSpecified {
            get;
            set;
        }
        [DispId(16)]
        string VersionDefaultValue {
            get;
        }
        [DispId(17)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool MACSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(26)]
        string AuthenticatedDataTypeClassName {
            get;
        }
        [DispId(8)]
        int ItemsLength();
        [DispId(9)]
        object ItemsGetItem(int index);
        [DispId(10)]
        bool ItemsSetItem(int index, object value);
        [DispId(11)]
        bool ItemsAddItem(object value);
        [DispId(12)]
        bool ItemsRemoveItem(int index);
        [DispId(13)]
        int ItemsInsertItem(int index, object value);
        [DispId(19)]
        int MACLength();
        [DispId(20)]
        byte MACGetItem(int index);
        [DispId(21)]
        bool MACSetItem(int index, byte value);
        [DispId(22)]
        bool MACAddItem(byte value);
        [DispId(23)]
        bool MACRemoveItem(int index);
        [DispId(24)]
        int MACInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("25a54351-2b1b-49d4-aeab-f76dbeff9c13")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IKEKType {
        /// <remarks/>
        [DispId(2)]
        KEKIdentifierType KEKIdentifier {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        AlgorithmIdentifier KeyEncryptionAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Version {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        byte[] EncryptedKey {
            get;
            set;
        }
        [DispId(6)]
        bool KEKIdentifierSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool KeyEncryptionAlgorithmSpecified {
            get;
            set;
        }
        [DispId(8)]
        string VersionDefaultValue {
            get;
        }
        [DispId(9)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool EncryptedKeySpecified {
            get;
            set;
        }
        [DispId(17)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(18)]
        string KEKTypeClassName {
            get;
        }
        [DispId(11)]
        int EncryptedKeyLength();
        [DispId(12)]
        byte EncryptedKeyGetItem(int index);
        [DispId(13)]
        bool EncryptedKeySetItem(int index, byte value);
        [DispId(14)]
        bool EncryptedKeyAddItem(byte value);
        [DispId(15)]
        bool EncryptedKeyRemoveItem(int index);
        [DispId(16)]
        int EncryptedKeyInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("e2d6603b-1bd0-4380-bb35-8369f99b8698")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IKEKIdentifierType {
        /// <remarks/>
        [DispId(1)]
        string KeyIdentifier {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string KeyVersion {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] DerivationIdentifier {
            get;
            set;
        }
        [DispId(5)]
        bool KeyIdentifierSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool KeyVersionSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool DerivationIdentifierSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string KEKIdentifierTypeClassName {
            get;
        }
        [DispId(8)]
        int DerivationIdentifierLength();
        [DispId(9)]
        byte DerivationIdentifierGetItem(int index);
        [DispId(10)]
        bool DerivationIdentifierSetItem(int index, byte value);
        [DispId(11)]
        bool DerivationIdentifierAddItem(byte value);
        [DispId(12)]
        bool DerivationIdentifierRemoveItem(int index);
        [DispId(13)]
        int DerivationIdentifierInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("d494915b-de09-47f2-9b65-70ca8daa1b64")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IDisplayResponseType {
        /// <remarks/>
        [DispId(1)]
        OutputResultType[] OutputResult {
            get;
            set;
        }
        [DispId(3)]
        bool OutputResultSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string DisplayResponseTypeClassName {
            get;
        }
        [DispId(4)]
        int OutputResultLength();
        [DispId(5)]
        OutputResultType OutputResultGetItem(int index);
        [DispId(6)]
        bool OutputResultSetItem(int index, OutputResultType value);
        [DispId(7)]
        bool OutputResultAddItem(OutputResultType value);
        [DispId(8)]
        bool OutputResultRemoveItem(int index);
        [DispId(9)]
        int OutputResultInsertItem(int index, OutputResultType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("e224d9da-70aa-47ae-8763-c34ac542117a")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IOutputResultType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Device {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string InfoQualify {
            get;
            set;
        }
        [DispId(5)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool DeviceSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool InfoQualifySpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string OutputResultTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("53e1cb95-e3d5-4f8c-9925-299e0113defa")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IResponseType {
        /// <remarks/>
        [DispId(1)]
        string AdditionalResponse {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Result {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ErrorCondition {
            get;
            set;
        }
        [DispId(5)]
        bool AdditionalResponseSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ResultSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool ErrorConditionSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string ResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("e9f3fca2-7a3c-46f6-be1a-75b5e5059c3d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IDisplayRequestType {
        /// <remarks/>
        [DispId(1)]
        DisplayOutputType[] DisplayOutput {
            get;
            set;
        }
        [DispId(3)]
        bool DisplayOutputSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string DisplayRequestTypeClassName {
            get;
        }
        [DispId(4)]
        int DisplayOutputLength();
        [DispId(5)]
        DisplayOutputType DisplayOutputGetItem(int index);
        [DispId(6)]
        bool DisplayOutputSetItem(int index, DisplayOutputType value);
        [DispId(7)]
        bool DisplayOutputAddItem(DisplayOutputType value);
        [DispId(8)]
        bool DisplayOutputRemoveItem(int index);
        [DispId(9)]
        int DisplayOutputInsertItem(int index, DisplayOutputType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("cd282c3b-d9f2-4252-b051-b56e03d5c2cd")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IDisplayOutputType {
        /// <remarks/>
        [DispId(2)]
        OutputContentType OutputContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        MenuEntryType[] MenuEntry {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        byte[] OutputSignature {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool ResponseRequiredFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        int MinimumDisplayTime {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string Device {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string InfoQualify {
            get;
            set;
        }
        [DispId(9)]
        bool OutputContentSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool MenuEntrySpecified {
            get;
            set;
        }
        [DispId(17)]
        bool OutputSignatureSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool ResponseRequiredFlagDefaultValue {
            get;
        }
        [DispId(25)]
        bool ResponseRequiredFlagSpecified {
            get;
            set;
        }
        [DispId(26)]
        int MinimumDisplayTimeDefaultValue {
            get;
        }
        [DispId(27)]
        bool MinimumDisplayTimeSpecified {
            get;
            set;
        }
        [DispId(28)]
        bool DeviceSpecified {
            get;
            set;
        }
        [DispId(29)]
        bool InfoQualifySpecified {
            get;
            set;
        }
        [DispId(30)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(31)]
        string DisplayOutputTypeClassName {
            get;
        }
        [DispId(11)]
        int MenuEntryLength();
        [DispId(12)]
        MenuEntryType MenuEntryGetItem(int index);
        [DispId(13)]
        bool MenuEntrySetItem(int index, MenuEntryType value);
        [DispId(14)]
        bool MenuEntryAddItem(MenuEntryType value);
        [DispId(15)]
        bool MenuEntryRemoveItem(int index);
        [DispId(16)]
        int MenuEntryInsertItem(int index, MenuEntryType value);
        [DispId(18)]
        int OutputSignatureLength();
        [DispId(19)]
        byte OutputSignatureGetItem(int index);
        [DispId(20)]
        bool OutputSignatureSetItem(int index, byte value);
        [DispId(21)]
        bool OutputSignatureAddItem(byte value);
        [DispId(22)]
        bool OutputSignatureRemoveItem(int index);
        [DispId(23)]
        int OutputSignatureInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("5580fcc7-4988-4d82-a8eb-1dc9bcda3d1d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IOutputContentType {
        /// <remarks/>
        [DispId(1)]
        PredefinedContentType PredefinedContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        OutputTextType[] OutputText {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] OutputXHTML {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        OutputBarcodeType OutputBarcode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string OutputFormat {
            get;
            set;
        }
        [DispId(7)]
        bool PredefinedContentSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool OutputTextSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool OutputXHTMLSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool OutputBarcodeSpecified {
            get;
            set;
        }
        [DispId(23)]
        bool OutputFormatSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(25)]
        string OutputContentTypeClassName {
            get;
        }
        [DispId(9)]
        int OutputTextLength();
        [DispId(10)]
        OutputTextType OutputTextGetItem(int index);
        [DispId(11)]
        bool OutputTextSetItem(int index, OutputTextType value);
        [DispId(12)]
        bool OutputTextAddItem(OutputTextType value);
        [DispId(13)]
        bool OutputTextRemoveItem(int index);
        [DispId(14)]
        int OutputTextInsertItem(int index, OutputTextType value);
        [DispId(16)]
        int OutputXHTMLLength();
        [DispId(17)]
        byte OutputXHTMLGetItem(int index);
        [DispId(18)]
        bool OutputXHTMLSetItem(int index, byte value);
        [DispId(19)]
        bool OutputXHTMLAddItem(byte value);
        [DispId(20)]
        bool OutputXHTMLRemoveItem(int index);
        [DispId(21)]
        int OutputXHTMLInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("4cff8ce3-d070-41f5-a074-03ca54f74a20")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPredefinedContentType {
        /// <remarks/>
        [DispId(1)]
        string ReferenceID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Language {
            get;
            set;
        }
        [DispId(4)]
        bool ReferenceIDSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool LanguageSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string PredefinedContentTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("b7689716-ae7b-439e-8fa3-a92b1135c566")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IOutputTextType {
        /// <remarks/>
        [DispId(2)]
        int CharacterSet {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string Font {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        int StartRow {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        int StartColumn {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string Color {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string CharacterWidth {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string CharacterHeight {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string CharacterStyle {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        string Alignment {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        bool EndOfLineFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        string Value {
            get;
            set;
        }
        [DispId(13)]
        bool CharacterSetSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool FontSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool StartRowSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool StartColumnSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool ColorSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool CharacterWidthSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool CharacterHeightSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool CharacterStyleSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool AlignmentSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool EndOfLineFlagDefaultValue {
            get;
        }
        [DispId(23)]
        bool EndOfLineFlagSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(26)]
        string OutputTextTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a2e21440-2d5e-42f7-ba84-434314e211bf")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IOutputBarcodeType {
        /// <remarks/>
        [DispId(2)]
        string BarcodeValue {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] QRCodeBinaryValue {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string BarcodeType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string QRCodeVersion {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        QRCodeEncodingModeEnumeration QRCodeEncodingMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool QRCodeEncodingModeSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        QRCodeErrorCorrectionEnumeration QRCodeErrorCorrection {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        bool QRCodeErrorCorrectionSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool BarcodeValueSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool QRCodeBinaryValueSpecified {
            get;
            set;
        }
        [DispId(18)]
        string BarcodeTypeDefaultValue {
            get;
        }
        [DispId(19)]
        bool BarcodeTypeSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool QRCodeVersionSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(22)]
        string OutputBarcodeTypeClassName {
            get;
        }
        [DispId(12)]
        int QRCodeBinaryValueLength();
        [DispId(13)]
        byte QRCodeBinaryValueGetItem(int index);
        [DispId(14)]
        bool QRCodeBinaryValueSetItem(int index, byte value);
        [DispId(15)]
        bool QRCodeBinaryValueAddItem(byte value);
        [DispId(16)]
        bool QRCodeBinaryValueRemoveItem(int index);
        [DispId(17)]
        int QRCodeBinaryValueInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("65b57e09-3e06-40eb-a7fb-112f53fc5a64")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IMenuEntryType {
        /// <remarks/>
        [DispId(2)]
        PredefinedContentType PredefinedContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        OutputTextType[] OutputText {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        byte[] OutputXHTML {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string MenuEntryTag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string OutputFormat {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool DefaultSelectedFlag {
            get;
            set;
        }
        [DispId(8)]
        bool PredefinedContentSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool OutputTextSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool OutputXHTMLSpecified {
            get;
            set;
        }
        [DispId(23)]
        string MenuEntryTagDefaultValue {
            get;
        }
        [DispId(24)]
        bool MenuEntryTagSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool OutputFormatSpecified {
            get;
            set;
        }
        [DispId(26)]
        bool DefaultSelectedFlagDefaultValue {
            get;
        }
        [DispId(27)]
        bool DefaultSelectedFlagSpecified {
            get;
            set;
        }
        [DispId(28)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(29)]
        string MenuEntryTypeClassName {
            get;
        }
        [DispId(10)]
        int OutputTextLength();
        [DispId(11)]
        OutputTextType OutputTextGetItem(int index);
        [DispId(12)]
        bool OutputTextSetItem(int index, OutputTextType value);
        [DispId(13)]
        bool OutputTextAddItem(OutputTextType value);
        [DispId(14)]
        bool OutputTextRemoveItem(int index);
        [DispId(15)]
        int OutputTextInsertItem(int index, OutputTextType value);
        [DispId(17)]
        int OutputXHTMLLength();
        [DispId(18)]
        byte OutputXHTMLGetItem(int index);
        [DispId(19)]
        bool OutputXHTMLSetItem(int index, byte value);
        [DispId(20)]
        bool OutputXHTMLAddItem(byte value);
        [DispId(21)]
        bool OutputXHTMLRemoveItem(int index);
        [DispId(22)]
        int OutputXHTMLInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("6c50bf19-6691-4266-bad1-693f40c930f9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAlgorithmIdentifier {
        /// <remarks/>
        [DispId(1)]
        ParameterType Parameter {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Algorithm {
            get;
            set;
        }
        [DispId(4)]
        bool ParameterSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool AlgorithmSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string AlgorithmIdentifierClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("25619cbc-ebcc-4f0c-8826-8b36877879c9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IParameterType {
        /// <remarks/>
        [DispId(1)]
        byte[] InitialisationVector {
            get;
            set;
        }
        [DispId(3)]
        bool InitialisationVectorSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string ParameterTypeClassName {
            get;
        }
        [DispId(4)]
        int InitialisationVectorLength();
        [DispId(5)]
        byte InitialisationVectorGetItem(int index);
        [DispId(6)]
        bool InitialisationVectorSetItem(int index, byte value);
        [DispId(7)]
        bool InitialisationVectorAddItem(byte value);
        [DispId(8)]
        bool InitialisationVectorRemoveItem(int index);
        [DispId(9)]
        int InitialisationVectorInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("c1cc45cb-3d28-48ac-bab8-a4f605e2666a")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IKeyTransportType {
        /// <remarks/>
        [DispId(2)]
        RecipientIdentifierType RecipientIdentifier {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        AlgorithmIdentifier KeyEncryptionAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Version {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        byte[] EncryptedKey {
            get;
            set;
        }
        [DispId(6)]
        bool RecipientIdentifierSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool KeyEncryptionAlgorithmSpecified {
            get;
            set;
        }
        [DispId(8)]
        string VersionDefaultValue {
            get;
        }
        [DispId(9)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool EncryptedKeySpecified {
            get;
            set;
        }
        [DispId(17)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(18)]
        string KeyTransportTypeClassName {
            get;
        }
        [DispId(11)]
        int EncryptedKeyLength();
        [DispId(12)]
        byte EncryptedKeyGetItem(int index);
        [DispId(13)]
        bool EncryptedKeySetItem(int index, byte value);
        [DispId(14)]
        bool EncryptedKeyAddItem(byte value);
        [DispId(15)]
        bool EncryptedKeyRemoveItem(int index);
        [DispId(16)]
        int EncryptedKeyInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("6db4cfd9-6c18-4d16-824d-d71574d198ea")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IRecipientIdentifierType {
        /// <remarks/>
        [DispId(1)]
        IssuerAndSerialNumberType IssuerAndSerialNumber {
            get;
            set;
        }
        [DispId(3)]
        bool IssuerAndSerialNumberSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string RecipientIdentifierTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("140f3252-09c3-4bd0-9d70-144ea9cd975c")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IIssuerAndSerialNumberType {
        /// <remarks/>
        [DispId(1)]
        RelativeDistinguishedNameType[] Issuer {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string SerialNumber {
            get;
            set;
        }
        [DispId(4)]
        bool IssuerSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool SerialNumberSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string IssuerAndSerialNumberTypeClassName {
            get;
        }
        [DispId(5)]
        int IssuerLength();
        [DispId(6)]
        RelativeDistinguishedNameType IssuerGetItem(int index);
        [DispId(7)]
        bool IssuerSetItem(int index, RelativeDistinguishedNameType value);
        [DispId(8)]
        bool IssuerAddItem(RelativeDistinguishedNameType value);
        [DispId(9)]
        bool IssuerRemoveItem(int index);
        [DispId(10)]
        int IssuerInsertItem(int index, RelativeDistinguishedNameType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("07dc8070-9cbc-4c61-b8aa-5e93f78fd7e7")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IRelativeDistinguishedNameType {
        /// <remarks/>
        [DispId(1)]
        string AttributeType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string AttributeValue {
            get;
            set;
        }
        [DispId(4)]
        bool AttributeTypeSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool AttributeValueSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string RelativeDistinguishedNameTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("ef9bba7b-b531-40e8-b62c-6dc80aec2f62")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IEncapsulatedContentType {
        /// <remarks/>
        [DispId(1)]
        byte[] Content {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string ContentType {
            get;
            set;
        }
        [DispId(4)]
        bool ContentSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool ContentTypeSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string EncapsulatedContentTypeClassName {
            get;
        }
        [DispId(5)]
        int ContentLength();
        [DispId(6)]
        byte ContentGetItem(int index);
        [DispId(7)]
        bool ContentSetItem(int index, byte value);
        [DispId(8)]
        bool ContentAddItem(byte value);
        [DispId(9)]
        bool ContentRemoveItem(int index);
        [DispId(10)]
        int ContentInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("bcb677a8-5a84-45a7-9cad-8e11292a068e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IDigestedDataType {
        /// <remarks/>
        [DispId(1)]
        AlgorithmIdentifier DigestAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        EncapsulatedContentType EncapsulatedContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] Digest {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Version {
            get;
            set;
        }
        [DispId(6)]
        bool DigestAlgorithmSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool EncapsulatedContentSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool DigestSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string DigestedDataTypeClassName {
            get;
        }
        [DispId(9)]
        int DigestLength();
        [DispId(10)]
        byte DigestGetItem(int index);
        [DispId(11)]
        bool DigestSetItem(int index, byte value);
        [DispId(12)]
        bool DigestAddItem(byte value);
        [DispId(13)]
        bool DigestRemoveItem(int index);
        [DispId(14)]
        int DigestInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("170ddf7b-e750-47c7-aa56-0080f035f762")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IEncryptedContentType {
        /// <remarks/>
        [DispId(1)]
        AlgorithmIdentifier ContentEncryptionAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        byte[] EncryptedData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ContentType {
            get;
            set;
        }
        [DispId(5)]
        bool ContentEncryptionAlgorithmSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool EncryptedDataSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool ContentTypeSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string EncryptedContentTypeClassName {
            get;
        }
        [DispId(7)]
        int EncryptedDataLength();
        [DispId(8)]
        byte EncryptedDataGetItem(int index);
        [DispId(9)]
        bool EncryptedDataSetItem(int index, byte value);
        [DispId(10)]
        bool EncryptedDataAddItem(byte value);
        [DispId(11)]
        bool EncryptedDataRemoveItem(int index);
        [DispId(12)]
        int EncryptedDataInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("5b646eb0-4615-41f6-96d7-ff1eaebf05bd")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IEnvelopedDataType {
        /// <remarks/>
        [DispId(2)]
        object[] Items {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        EncryptedContentType EncryptedContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Version {
            get;
            set;
        }
        [DispId(5)]
        bool ItemsSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool EncryptedContentSpecified {
            get;
            set;
        }
        [DispId(13)]
        string VersionDefaultValue {
            get;
        }
        [DispId(14)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(16)]
        string EnvelopedDataTypeClassName {
            get;
        }
        [DispId(6)]
        int ItemsLength();
        [DispId(7)]
        object ItemsGetItem(int index);
        [DispId(8)]
        bool ItemsSetItem(int index, object value);
        [DispId(9)]
        bool ItemsAddItem(object value);
        [DispId(10)]
        bool ItemsRemoveItem(int index);
        [DispId(11)]
        int ItemsInsertItem(int index, object value);
    }
    [System.Runtime.InteropServices.GuidAttribute("afbf8f8a-6002-4b49-9fa8-87f75857c360")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IIssuerType {
        /// <remarks/>
        [DispId(1)]
        RelativeDistinguishedNameType[] RelativeDistinguishedName {
            get;
            set;
        }
        [DispId(3)]
        bool RelativeDistinguishedNameSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string IssuerTypeClassName {
            get;
        }
        [DispId(4)]
        int RelativeDistinguishedNameLength();
        [DispId(5)]
        RelativeDistinguishedNameType RelativeDistinguishedNameGetItem(int index);
        [DispId(6)]
        bool RelativeDistinguishedNameSetItem(int index, RelativeDistinguishedNameType value);
        [DispId(7)]
        bool RelativeDistinguishedNameAddItem(RelativeDistinguishedNameType value);
        [DispId(8)]
        bool RelativeDistinguishedNameRemoveItem(int index);
        [DispId(9)]
        int RelativeDistinguishedNameInsertItem(int index, RelativeDistinguishedNameType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("00089630-84c1-427b-94cf-c677a0c9d2ba")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface INamedKeyEncryptedDataType {
        /// <remarks/>
        [DispId(2)]
        string KeyName {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        EncryptedContentType EncryptedContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Version {
            get;
            set;
        }
        [DispId(5)]
        bool KeyNameSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool EncryptedContentSpecified {
            get;
            set;
        }
        [DispId(7)]
        string VersionDefaultValue {
            get;
        }
        [DispId(8)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(10)]
        string NamedKeyEncryptedDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("45ef16bd-72e4-422f-8d5e-3f3ab4870d36")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISignedDataType {
        /// <remarks/>
        [DispId(2)]
        AlgorithmIdentifier[] DigestAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        EncapsulatedContentType EncapsulatedContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        byte[] Certificate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        SignerType[] Signer {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string Version {
            get;
            set;
        }
        [DispId(7)]
        bool DigestAlgorithmSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool EncapsulatedContentSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool CertificateSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool SignerSpecified {
            get;
            set;
        }
        [DispId(29)]
        string VersionDefaultValue {
            get;
        }
        [DispId(30)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(31)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(32)]
        string SignedDataTypeClassName {
            get;
        }
        [DispId(8)]
        int DigestAlgorithmLength();
        [DispId(9)]
        AlgorithmIdentifier DigestAlgorithmGetItem(int index);
        [DispId(10)]
        bool DigestAlgorithmSetItem(int index, AlgorithmIdentifier value);
        [DispId(11)]
        bool DigestAlgorithmAddItem(AlgorithmIdentifier value);
        [DispId(12)]
        bool DigestAlgorithmRemoveItem(int index);
        [DispId(13)]
        int DigestAlgorithmInsertItem(int index, AlgorithmIdentifier value);
        [DispId(16)]
        int CertificateLength();
        [DispId(17)]
        byte CertificateGetItem(int index);
        [DispId(18)]
        bool CertificateSetItem(int index, byte value);
        [DispId(19)]
        bool CertificateAddItem(byte value);
        [DispId(20)]
        bool CertificateRemoveItem(int index);
        [DispId(21)]
        int CertificateInsertItem(int index, byte value);
        [DispId(23)]
        int SignerLength();
        [DispId(24)]
        SignerType SignerGetItem(int index);
        [DispId(25)]
        bool SignerSetItem(int index, SignerType value);
        [DispId(26)]
        bool SignerAddItem(SignerType value);
        [DispId(27)]
        bool SignerRemoveItem(int index);
        [DispId(28)]
        int SignerInsertItem(int index, SignerType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("d754e2e7-052a-44dd-b545-cfa79d3ba0e3")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISignerType {
        /// <remarks/>
        [DispId(2)]
        SignerIdentifierType SignerIdentifier {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        AlgorithmIdentifier DigestAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        AlgorithmIdentifier SignatureAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        byte[] Signature {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string Version {
            get;
            set;
        }
        [DispId(7)]
        bool SignerIdentifierSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool DigestAlgorithmSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool SignatureAlgorithmSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SignatureSpecified {
            get;
            set;
        }
        [DispId(17)]
        string VersionDefaultValue {
            get;
        }
        [DispId(18)]
        bool VersionSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(20)]
        string SignerTypeClassName {
            get;
        }
        [DispId(11)]
        int SignatureLength();
        [DispId(12)]
        byte SignatureGetItem(int index);
        [DispId(13)]
        bool SignatureSetItem(int index, byte value);
        [DispId(14)]
        bool SignatureAddItem(byte value);
        [DispId(15)]
        bool SignatureRemoveItem(int index);
        [DispId(16)]
        int SignatureInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("a3424537-524a-4f0c-ae34-ef563680ca63")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISignerIdentifierType {
        /// <remarks/>
        [DispId(1)]
        IssuerAndSerialNumberType IssuerAndSerialNumber {
            get;
            set;
        }
        [DispId(3)]
        bool IssuerAndSerialNumberSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string SignerIdentifierTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("479940a2-e787-4b96-991e-5bbf75154ec0")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IContentInformationType {
        /// <remarks/>
        [DispId(1)]
        object Item {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string ContentType {
            get;
            set;
        }
        [DispId(4)]
        bool ItemSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool ContentTypeSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string ContentInformationTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("1611dd7c-f067-4641-a697-8abb357f7cf9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAbortRequestType {
        /// <remarks/>
        [DispId(1)]
        MessageReferenceType MessageReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string AbortReason {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        DisplayOutputType DisplayOutput {
            get;
            set;
        }
        [DispId(5)]
        bool MessageReferenceSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool AbortReasonSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool DisplayOutputSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string AbortRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("2aff2f31-246b-449d-861b-3b026720b6d3")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IMessageReferenceType {
        /// <remarks/>
        [DispId(1)]
        string MessageCategory {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string ServiceID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string DeviceID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string SaleID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string POIID {
            get;
            set;
        }
        [DispId(7)]
        bool MessageCategorySpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ServiceIDSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool DeviceIDSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SaleIDSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool POIIDSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string MessageReferenceTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a666bea9-cea1-4196-8721-369255ba07cc")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAdminRequestType {
        /// <remarks/>
        [DispId(1)]
        string ServiceIdentification {
            get;
            set;
        }
        [DispId(3)]
        bool ServiceIdentificationSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string AdminRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("01f42532-b3d8-4166-b52b-0b48f89dbaad")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAdminResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        [DispId(3)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string AdminResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("abd66cd9-797b-4234-a76c-8c0b9622705e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAllowedProductType {
        /// <remarks/>
        [DispId(1)]
        string ProductLabel {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string AdditionalProductInfo {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ProductCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string EanUpc {
            get;
            set;
        }
        [DispId(6)]
        bool ProductLabelSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool AdditionalProductInfoSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ProductCodeSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool EanUpcSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string AllowedProductTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("573081f7-c7d4-44f8-90c7-675d1837a8ba")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAmountsReqType {
        /// <remarks/>
        [DispId(1)]
        string Currency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        double RequestedAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool RequestedAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        double CashBackAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool CashBackAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        double TipAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool TipAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        double PaidAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        bool PaidAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        double MinimumAmountToDeliver {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        bool MinimumAmountToDeliverSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        double MaximumCashBackAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        bool MaximumCashBackAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(14)]
        double MinimumSplitAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(15)]
        bool MinimumSplitAmountSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(19)]
        string AmountsReqTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("0c8fcddb-00ce-4e42-a265-8fa04c2619da")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAmountsRespType {
        /// <remarks/>
        [DispId(1)]
        string Currency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        double AuthorizedAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        double TotalRebatesAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool TotalRebatesAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        double TotalFeesAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool TotalFeesAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        double CashBackAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        bool CashBackAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        double TipAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        bool TipAmountSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(13)]
        bool AuthorizedAmountSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string AmountsRespTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("e7c4609a-bbde-4f82-b274-2256c0596948")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAreaSizeType {
        /// <remarks/>
        [DispId(1)]
        string X {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Y {
            get;
            set;
        }
        [DispId(4)]
        bool XSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool YSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string AreaSizeTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a7dea9ff-f701-42b2-85fe-219099be8715")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IBalanceInquiryRequestType {
        /// <remarks/>
        [DispId(1)]
        PaymentAccountReqType PaymentAccountReq {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        LoyaltyAccountReqType LoyaltyAccountReq {
            get;
            set;
        }
        [DispId(4)]
        bool PaymentAccountReqSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool LoyaltyAccountReqSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string BalanceInquiryRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("541d7652-61d4-4425-9dbe-5e462b094edf")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentAccountReqType {
        /// <remarks/>
        [DispId(2)]
        TransactionIdentificationType CardAcquisitionReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        PaymentInstrumentDataType PaymentInstrumentData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string AccountType {
            get;
            set;
        }
        [DispId(5)]
        bool CardAcquisitionReferenceSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool PaymentInstrumentDataSpecified {
            get;
            set;
        }
        [DispId(7)]
        string AccountTypeDefaultValue {
            get;
        }
        [DispId(8)]
        bool AccountTypeSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(10)]
        string PaymentAccountReqTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("75dfee9d-def2-4b70-89a2-ffafa354689e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionIdentificationType {
        /// <remarks/>
        [DispId(1)]
        string TransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string TimeStamp {
            get;
            set;
        }
        [DispId(4)]
        bool TransactionIDSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool TimeStampSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string TransactionIdentificationTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("32cc6249-9b74-437f-b0a1-2d6e48ac2284")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentInstrumentDataType {
        /// <remarks/>
        [DispId(1)]
        CardDataType CardData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        CheckDataType CheckData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        MobileDataType MobileData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string PaymentInstrumentType {
            get;
            set;
        }
        [DispId(6)]
        bool CardDataSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool CheckDataSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool MobileDataSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool PaymentInstrumentTypeSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string PaymentInstrumentDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a233dfcb-0403-418b-af6a-63ce234a87e4")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardDataType {
        /// <remarks/>
        [DispId(1)]
        ContentInformationType ProtectedCardData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SensitiveCardDataType SensitiveCardData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string[] AllowedProductCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        AllowedProductType[] AllowedProduct {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        PaymentTokenType PaymentToken {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        CustomerOrderType[] CustomerOrder {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string PaymentBrand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string MaskedPAN {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string PaymentAccountRef {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        string[] EntryMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        string CardCountryCode {
            get;
            set;
        }
        [DispId(13)]
        bool ProtectedCardDataSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool SensitiveCardDataSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool AllowedProductCodeSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool AllowedProductSpecified {
            get;
            set;
        }
        [DispId(29)]
        bool PaymentTokenSpecified {
            get;
            set;
        }
        [DispId(30)]
        bool CustomerOrderSpecified {
            get;
            set;
        }
        [DispId(37)]
        bool PaymentBrandSpecified {
            get;
            set;
        }
        [DispId(38)]
        bool MaskedPANSpecified {
            get;
            set;
        }
        [DispId(39)]
        bool PaymentAccountRefSpecified {
            get;
            set;
        }
        [DispId(40)]
        bool EntryModeSpecified {
            get;
            set;
        }
        [DispId(47)]
        bool CardCountryCodeSpecified {
            get;
            set;
        }
        [DispId(48)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(49)]
        string CardDataTypeClassName {
            get;
        }
        [DispId(16)]
        int AllowedProductCodeLength();
        [DispId(17)]
        string AllowedProductCodeGetItem(int index);
        [DispId(18)]
        bool AllowedProductCodeSetItem(int index, string value);
        [DispId(19)]
        bool AllowedProductCodeAddItem(string value);
        [DispId(20)]
        bool AllowedProductCodeRemoveItem(int index);
        [DispId(21)]
        int AllowedProductCodeInsertItem(int index, string value);
        [DispId(23)]
        int AllowedProductLength();
        [DispId(24)]
        AllowedProductType AllowedProductGetItem(int index);
        [DispId(25)]
        bool AllowedProductSetItem(int index, AllowedProductType value);
        [DispId(26)]
        bool AllowedProductAddItem(AllowedProductType value);
        [DispId(27)]
        bool AllowedProductRemoveItem(int index);
        [DispId(28)]
        int AllowedProductInsertItem(int index, AllowedProductType value);
        [DispId(31)]
        int CustomerOrderLength();
        [DispId(32)]
        CustomerOrderType CustomerOrderGetItem(int index);
        [DispId(33)]
        bool CustomerOrderSetItem(int index, CustomerOrderType value);
        [DispId(34)]
        bool CustomerOrderAddItem(CustomerOrderType value);
        [DispId(35)]
        bool CustomerOrderRemoveItem(int index);
        [DispId(36)]
        int CustomerOrderInsertItem(int index, CustomerOrderType value);
        [DispId(41)]
        int EntryModeLength();
        [DispId(42)]
        string EntryModeGetItem(int index);
        [DispId(43)]
        bool EntryModeSetItem(int index, string value);
        [DispId(44)]
        bool EntryModeAddItem(string value);
        [DispId(45)]
        bool EntryModeRemoveItem(int index);
        [DispId(46)]
        int EntryModeInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("e9a516dc-faff-4fbc-9f4f-9da402f27469")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISensitiveCardDataType {
        /// <remarks/>
        [DispId(1)]
        TrackDataType[] TrackData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string PAN {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string CardSeqNumb {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string ExpiryDate {
            get;
            set;
        }
        [DispId(6)]
        bool TrackDataSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool PANSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool CardSeqNumbSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool ExpiryDateSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string SensitiveCardDataTypeClassName {
            get;
        }
        [DispId(7)]
        int TrackDataLength();
        [DispId(8)]
        TrackDataType TrackDataGetItem(int index);
        [DispId(9)]
        bool TrackDataSetItem(int index, TrackDataType value);
        [DispId(10)]
        bool TrackDataAddItem(TrackDataType value);
        [DispId(11)]
        bool TrackDataRemoveItem(int index);
        [DispId(12)]
        int TrackDataInsertItem(int index, TrackDataType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("3cc800b5-fdb2-49ba-a73e-454217a9bfcd")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITrackDataType {
        /// <remarks/>
        [DispId(2)]
        int TrackNumb {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string TrackFormat {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Value {
            get;
            set;
        }
        [DispId(5)]
        int TrackNumbDefaultValue {
            get;
        }
        [DispId(6)]
        bool TrackNumbSpecified {
            get;
            set;
        }
        [DispId(7)]
        string TrackFormatDefaultValue {
            get;
        }
        [DispId(8)]
        bool TrackFormatSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string TrackDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("1a985220-4d49-45e7-9b98-e45b65b46b8e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentTokenType {
        /// <remarks/>
        [DispId(1)]
        string TokenRequestedType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string TokenValue {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ExpiryDateTime {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool ExpiryDateTimeSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool TokenRequestedTypeSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool TokenValueSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string PaymentTokenTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("84c8cb4f-daae-4b6b-9f44-bc2c2933a968")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICustomerOrderType {
        /// <remarks/>
        [DispId(2)]
        string AdditionalInformation {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string CustomerOrderID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool OpenOrderState {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string StartDate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string EndDate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool EndDateSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        double ForecastedAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        double CurrentAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        bool CurrentAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        string Currency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        string AccessedBy {
            get;
            set;
        }
        [DispId(13)]
        bool AdditionalInformationSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool CustomerOrderIDSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool OpenOrderStateDefaultValue {
            get;
        }
        [DispId(16)]
        bool OpenOrderStateSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool StartDateSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ForecastedAmountSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(20)]
        bool AccessedBySpecified {
            get;
            set;
        }
        [DispId(21)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(22)]
        string CustomerOrderTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("359ba6e3-7343-4f0c-83bc-3f304308f9e3")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICheckDataType {
        /// <remarks/>
        [DispId(2)]
        string BankID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string AccountNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string CheckNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        TrackDataType TrackData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string CheckCardNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string TypeCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string Country {
            get;
            set;
        }
        [DispId(9)]
        bool BankIDSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool AccountNumberSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool CheckNumberSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool TrackDataSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool CheckCardNumberSpecified {
            get;
            set;
        }
        [DispId(14)]
        string TypeCodeDefaultValue {
            get;
        }
        [DispId(15)]
        bool TypeCodeSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool CountrySpecified {
            get;
            set;
        }
        [DispId(17)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(18)]
        string CheckDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("8ef17531-fc1e-4310-8e3e-30b1dbbd3428")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IMobileDataType {
        /// <remarks/>
        [DispId(1)]
        string MobileCountryCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        GeolocationType Geolocation {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        ContentInformationType ProtectedMobileData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        SensitiveMobileDataType SensitiveMobileData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string MobileNetworkCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string MaskedMSISDN {
            get;
            set;
        }
        [DispId(8)]
        bool MobileCountryCodeSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool GeolocationSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ProtectedMobileDataSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool SensitiveMobileDataSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool MobileNetworkCodeSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool MaskedMSISDNSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string MobileDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("fcef2552-c9c4-476f-a19d-1b4420a0ac04")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IGeolocationType {
        /// <remarks/>
        [DispId(1)]
        GeographicCoordinatesType GeographicCoordinates {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        UTMCoordinatesType UTMCoordinates {
            get;
            set;
        }
        [DispId(4)]
        bool GeographicCoordinatesSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool UTMCoordinatesSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string GeolocationTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("523c934b-44e5-4fa9-9af3-6d4cb2cbdb89")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IGeographicCoordinatesType {
        /// <remarks/>
        [DispId(1)]
        string Latitude {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Longitude {
            get;
            set;
        }
        [DispId(4)]
        bool LatitudeSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool LongitudeSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string GeographicCoordinatesTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("d1654104-ddfc-439c-8582-da3e030f5201")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IUTMCoordinatesType {
        /// <remarks/>
        [DispId(1)]
        string UTMZone {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string UTMEastward {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string UTMNorthward {
            get;
            set;
        }
        [DispId(5)]
        bool UTMZoneSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool UTMEastwardSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool UTMNorthwardSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string UTMCoordinatesTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("ec932a8b-4c7c-4183-aa37-99eaca179145")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISensitiveMobileDataType {
        /// <remarks/>
        [DispId(1)]
        string MSISDN {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string IMSI {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string IMEI {
            get;
            set;
        }
        [DispId(5)]
        bool MSISDNSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool IMSISpecified {
            get;
            set;
        }
        [DispId(7)]
        bool IMEISpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string SensitiveMobileDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("704ef719-4300-4767-9750-1ad7bf129412")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyAccountReqType {
        /// <remarks/>
        [DispId(1)]
        TransactionIdentificationType CardAcquisitionReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        LoyaltyAccountIDType LoyaltyAccountID {
            get;
            set;
        }
        [DispId(4)]
        bool CardAcquisitionReferenceSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool LoyaltyAccountIDSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string LoyaltyAccountReqTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("518ac8c8-07d7-41b4-9e84-40ead36f44d9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyAccountIDType {
        /// <remarks/>
        [DispId(1)]
        string[] EntryMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string IdentificationType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string IdentificationSupport {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Value {
            get;
            set;
        }
        [DispId(6)]
        bool EntryModeSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool IdentificationTypeSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool IdentificationSupportSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string LoyaltyAccountIDTypeClassName {
            get;
        }
        [DispId(7)]
        int EntryModeLength();
        [DispId(8)]
        string EntryModeGetItem(int index);
        [DispId(9)]
        bool EntryModeSetItem(int index, string value);
        [DispId(10)]
        bool EntryModeAddItem(string value);
        [DispId(11)]
        bool EntryModeRemoveItem(int index);
        [DispId(12)]
        int EntryModeInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("67d0187e-ce24-4699-8801-3b2fbf3cdd43")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IBalanceInquiryResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        PaymentAccountStatusType PaymentAccountStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        LoyaltyAccountStatusType LoyaltyAccountStatus {
            get;
            set;
        }
        [DispId(5)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool PaymentAccountStatusSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool LoyaltyAccountStatusSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string BalanceInquiryResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("37673d07-a95e-4bbf-9aa0-d1cadc87816a")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentAccountStatusType {
        /// <remarks/>
        [DispId(1)]
        PaymentInstrumentDataType PaymentInstrumentData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        PaymentAcquirerDataType PaymentAcquirerData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        LoyaltyAccountStatusType LoyaltyAccountStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Currency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        double CurrentBalance {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool CurrentBalanceSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool PaymentInstrumentDataSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool PaymentAcquirerDataSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool LoyaltyAccountStatusSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string PaymentAccountStatusTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("dc727b5a-d96c-47f1-a311-6d582ec4197f")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentAcquirerDataType {
        /// <remarks/>
        [DispId(1)]
        TransactionIdentificationType AcquirerTransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string ApprovalCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string AcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string MerchantID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string AcquirerPOIID {
            get;
            set;
        }
        [DispId(7)]
        bool AcquirerTransactionIDSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ApprovalCodeSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool AcquirerIDSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool MerchantIDSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool AcquirerPOIIDSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string PaymentAcquirerDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("b1707d73-eab5-4801-9265-e0b428039a7d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyAccountStatusType {
        /// <remarks/>
        [DispId(2)]
        LoyaltyAccountType LoyaltyAccount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        double CurrentBalance {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool CurrentBalanceSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string LoyaltyUnit {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string Currency {
            get;
            set;
        }
        [DispId(7)]
        bool LoyaltyAccountSpecified {
            get;
            set;
        }
        [DispId(8)]
        string LoyaltyUnitDefaultValue {
            get;
        }
        [DispId(9)]
        bool LoyaltyUnitSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(11)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(12)]
        string LoyaltyAccountStatusTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("ae212cdc-f36f-4331-aa8c-ffc28c02f37d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyAccountType {
        /// <remarks/>
        [DispId(1)]
        LoyaltyAccountIDType LoyaltyAccountID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string LoyaltyBrand {
            get;
            set;
        }
        [DispId(4)]
        bool LoyaltyAccountIDSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool LoyaltyBrandSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string LoyaltyAccountTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("b8bc3637-ef1a-4b17-9278-ec566182863c")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IBatchRequestType {
        /// <remarks/>
        [DispId(1)]
        TransactionToPerformType[] TransactionToPerform {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        bool RemoveAllFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool RemoveAllFlagSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool TransactionToPerformSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string BatchRequestTypeClassName {
            get;
        }
        [DispId(6)]
        int TransactionToPerformLength();
        [DispId(7)]
        TransactionToPerformType TransactionToPerformGetItem(int index);
        [DispId(8)]
        bool TransactionToPerformSetItem(int index, TransactionToPerformType value);
        [DispId(9)]
        bool TransactionToPerformAddItem(TransactionToPerformType value);
        [DispId(10)]
        bool TransactionToPerformRemoveItem(int index);
        [DispId(11)]
        int TransactionToPerformInsertItem(int index, TransactionToPerformType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("72e8f8f8-ce66-4578-a3dc-04138133f8e6")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionToPerformType {
        /// <remarks/>
        [DispId(1)]
        object Item {
            get;
            set;
        }
        [DispId(3)]
        bool ItemSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string TransactionToPerformTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("3da5251c-5b52-4837-9cc1-f89a6b8a8ed1")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyRequestType {
        /// <remarks/>
        [DispId(1)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        LoyaltyTransactionType LoyaltyTransaction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        LoyaltyDataType[] LoyaltyData {
            get;
            set;
        }
        [DispId(5)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool LoyaltyTransactionSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool LoyaltyDataSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string LoyaltyRequestTypeClassName {
            get;
        }
        [DispId(8)]
        int LoyaltyDataLength();
        [DispId(9)]
        LoyaltyDataType LoyaltyDataGetItem(int index);
        [DispId(10)]
        bool LoyaltyDataSetItem(int index, LoyaltyDataType value);
        [DispId(11)]
        bool LoyaltyDataAddItem(LoyaltyDataType value);
        [DispId(12)]
        bool LoyaltyDataRemoveItem(int index);
        [DispId(13)]
        int LoyaltyDataInsertItem(int index, LoyaltyDataType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("32070be2-f276-45f1-8b9f-6788642ec320")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleDataType {
        /// <remarks/>
        [DispId(1)]
        TransactionIdentificationType SaleTransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleTerminalDataType SaleTerminalData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        SponsoredMerchantType[] SponsoredMerchant {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string SaleToPOIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string SaleToAcquirerData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        SaleToIssuerDataType SaleToIssuerData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string OperatorID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string OperatorLanguage {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string ShiftNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        string SaleReferenceID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        string TokenRequestedType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        string CustomerOrderID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        string[] CustomerOrderReq {
            get;
            set;
        }
        [DispId(15)]
        bool SaleTransactionIDSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool SaleTerminalDataSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool SponsoredMerchantSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool SaleToPOIDataSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool SaleToAcquirerDataSpecified {
            get;
            set;
        }
        [DispId(26)]
        bool SaleToIssuerDataSpecified {
            get;
            set;
        }
        [DispId(27)]
        bool OperatorIDSpecified {
            get;
            set;
        }
        [DispId(28)]
        bool OperatorLanguageSpecified {
            get;
            set;
        }
        [DispId(29)]
        bool ShiftNumberSpecified {
            get;
            set;
        }
        [DispId(30)]
        bool SaleReferenceIDSpecified {
            get;
            set;
        }
        [DispId(31)]
        bool TokenRequestedTypeSpecified {
            get;
            set;
        }
        [DispId(32)]
        bool CustomerOrderIDSpecified {
            get;
            set;
        }
        [DispId(33)]
        bool CustomerOrderReqSpecified {
            get;
            set;
        }
        [DispId(40)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(41)]
        string SaleDataTypeClassName {
            get;
        }
        [DispId(18)]
        int SponsoredMerchantLength();
        [DispId(19)]
        SponsoredMerchantType SponsoredMerchantGetItem(int index);
        [DispId(20)]
        bool SponsoredMerchantSetItem(int index, SponsoredMerchantType value);
        [DispId(21)]
        bool SponsoredMerchantAddItem(SponsoredMerchantType value);
        [DispId(22)]
        bool SponsoredMerchantRemoveItem(int index);
        [DispId(23)]
        int SponsoredMerchantInsertItem(int index, SponsoredMerchantType value);
        [DispId(34)]
        int CustomerOrderReqLength();
        [DispId(35)]
        string CustomerOrderReqGetItem(int index);
        [DispId(36)]
        bool CustomerOrderReqSetItem(int index, string value);
        [DispId(37)]
        bool CustomerOrderReqAddItem(string value);
        [DispId(38)]
        bool CustomerOrderReqRemoveItem(int index);
        [DispId(39)]
        int CustomerOrderReqInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("7158487a-1320-4ca5-a35e-06fda5b5e3ae")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleTerminalDataType {
        /// <remarks/>
        [DispId(1)]
        string SaleCapabilities {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleProfileType SaleProfile {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string TerminalEnvironment {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string TotalsGroupID {
            get;
            set;
        }
        [DispId(6)]
        bool SaleCapabilitiesSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool SaleProfileSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool TerminalEnvironmentSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool TotalsGroupIDSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string SaleTerminalDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("0974f0f5-8b3b-4a73-ac20-33f73d562793")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleProfileType {
        /// <remarks/>
        [DispId(2)]
        string ServiceProfiles {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string GenericProfile {
            get;
            set;
        }
        [DispId(4)]
        bool ServiceProfilesSpecified {
            get;
            set;
        }
        [DispId(5)]
        string GenericProfileDefaultValue {
            get;
        }
        [DispId(6)]
        bool GenericProfileSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(8)]
        string SaleProfileTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("ca9243a6-2358-40e8-81e3-0f92d87b66d6")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISponsoredMerchantType {
        /// <remarks/>
        [DispId(1)]
        string CommonName {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Address {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string CountryCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string MerchantCategoryCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string RegisteredIdentifier {
            get;
            set;
        }
        [DispId(7)]
        bool CommonNameSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool AddressSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool CountryCodeSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool MerchantCategoryCodeSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool RegisteredIdentifierSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string SponsoredMerchantTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("99f5f345-757a-4cb5-a92f-7aa3e4c4951b")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleToIssuerDataType {
        /// <remarks/>
        [DispId(1)]
        string StatementReference {
            get;
            set;
        }
        [DispId(3)]
        bool StatementReferenceSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string SaleToIssuerDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("0a4fd7cf-6f04-492c-a9d5-1a5ffc443a87")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyTransactionType {
        /// <remarks/>
        [DispId(1)]
        OriginalPOITransactionType OriginalPOITransaction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TransactionConditionsType TransactionConditions {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        SaleItemType[] SaleItem {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string LoyaltyTransactionType1 {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string Currency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        double TotalAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool TotalAmountSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool OriginalPOITransactionSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool TransactionConditionsSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool SaleItemSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool LoyaltyTransactionType1Specified {
            get;
            set;
        }
        [DispId(19)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(20)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(21)]
        string LoyaltyTransactionTypeClassName {
            get;
        }
        [DispId(12)]
        int SaleItemLength();
        [DispId(13)]
        SaleItemType SaleItemGetItem(int index);
        [DispId(14)]
        bool SaleItemSetItem(int index, SaleItemType value);
        [DispId(15)]
        bool SaleItemAddItem(SaleItemType value);
        [DispId(16)]
        bool SaleItemRemoveItem(int index);
        [DispId(17)]
        int SaleItemInsertItem(int index, SaleItemType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("785406cd-5f41-4d6b-b519-92f9cda4472d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IOriginalPOITransactionType {
        /// <remarks/>
        [DispId(2)]
        TransactionIdentificationType POITransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ApprovalCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        TransactionIdentificationType HostTransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string SaleID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string POIID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool ReuseCardDataFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string CustomerLanguage {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string AcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        bool LastTransactionFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        bool LastTransactionFlagSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool POITransactionIDSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool ApprovalCodeSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool HostTransactionIDSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool SaleIDSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool POIIDSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool ReuseCardDataFlagDefaultValue {
            get;
        }
        [DispId(18)]
        bool ReuseCardDataFlagSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool CustomerLanguageSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool AcquirerIDSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(22)]
        string OriginalPOITransactionTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("601fbbf3-beb5-4202-9bc5-1cff42354678")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionConditionsType {
        /// <remarks/>
        [DispId(2)]
        string[] AllowedPaymentBrand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string[] AcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string[] AllowedLoyaltyBrand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string[] ForceEntryMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool DebitPreferredFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string LoyaltyHandling {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string CustomerLanguage {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        bool ForceOnlineFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        string MerchantCategoryCode {
            get;
            set;
        }
        [DispId(11)]
        bool AllowedPaymentBrandSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool AcquirerIDSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool AllowedLoyaltyBrandSpecified {
            get;
            set;
        }
        [DispId(32)]
        bool ForceEntryModeSpecified {
            get;
            set;
        }
        [DispId(39)]
        bool DebitPreferredFlagDefaultValue {
            get;
        }
        [DispId(40)]
        bool DebitPreferredFlagSpecified {
            get;
            set;
        }
        [DispId(41)]
        string LoyaltyHandlingDefaultValue {
            get;
        }
        [DispId(42)]
        bool LoyaltyHandlingSpecified {
            get;
            set;
        }
        [DispId(43)]
        bool CustomerLanguageSpecified {
            get;
            set;
        }
        [DispId(44)]
        bool ForceOnlineFlagDefaultValue {
            get;
        }
        [DispId(45)]
        bool ForceOnlineFlagSpecified {
            get;
            set;
        }
        [DispId(46)]
        bool MerchantCategoryCodeSpecified {
            get;
            set;
        }
        [DispId(47)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(48)]
        string TransactionConditionsTypeClassName {
            get;
        }
        [DispId(12)]
        int AllowedPaymentBrandLength();
        [DispId(13)]
        string AllowedPaymentBrandGetItem(int index);
        [DispId(14)]
        bool AllowedPaymentBrandSetItem(int index, string value);
        [DispId(15)]
        bool AllowedPaymentBrandAddItem(string value);
        [DispId(16)]
        bool AllowedPaymentBrandRemoveItem(int index);
        [DispId(17)]
        int AllowedPaymentBrandInsertItem(int index, string value);
        [DispId(19)]
        int AcquirerIDLength();
        [DispId(20)]
        string AcquirerIDGetItem(int index);
        [DispId(21)]
        bool AcquirerIDSetItem(int index, string value);
        [DispId(22)]
        bool AcquirerIDAddItem(string value);
        [DispId(23)]
        bool AcquirerIDRemoveItem(int index);
        [DispId(24)]
        int AcquirerIDInsertItem(int index, string value);
        [DispId(26)]
        int AllowedLoyaltyBrandLength();
        [DispId(27)]
        string AllowedLoyaltyBrandGetItem(int index);
        [DispId(28)]
        bool AllowedLoyaltyBrandSetItem(int index, string value);
        [DispId(29)]
        bool AllowedLoyaltyBrandAddItem(string value);
        [DispId(30)]
        bool AllowedLoyaltyBrandRemoveItem(int index);
        [DispId(31)]
        int AllowedLoyaltyBrandInsertItem(int index, string value);
        [DispId(33)]
        int ForceEntryModeLength();
        [DispId(34)]
        string ForceEntryModeGetItem(int index);
        [DispId(35)]
        bool ForceEntryModeSetItem(int index, string value);
        [DispId(36)]
        bool ForceEntryModeAddItem(string value);
        [DispId(37)]
        bool ForceEntryModeRemoveItem(int index);
        [DispId(38)]
        int ForceEntryModeInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("fcace9e6-e8c9-41cb-b920-21f13515f583")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleItemType {
        /// <remarks/>
        [DispId(1)]
        string UnitOfMeasure {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        double Quantity {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool QuantitySpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        double UnitPrice {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool UnitPriceSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string TaxCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string SaleChannel {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string ProductLabel {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string AdditionalProductInfo {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        int ItemID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        string ProductCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        string EanUpc {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        double ItemAmount {
            get;
            set;
        }
        [DispId(15)]
        bool UnitOfMeasureSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool TaxCodeSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool SaleChannelSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ProductLabelSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool AdditionalProductInfoSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool ItemIDSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool ProductCodeSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool EanUpcSpecified {
            get;
            set;
        }
        [DispId(23)]
        bool ItemAmountSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(25)]
        string SaleItemTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("0180c6af-97a1-42ce-b27c-48b411b40436")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyDataType {
        /// <remarks/>
        [DispId(1)]
        TransactionIdentificationType CardAcquisitionReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        LoyaltyAccountIDType LoyaltyAccountID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        LoyaltyAmountType LoyaltyAmount {
            get;
            set;
        }
        [DispId(5)]
        bool CardAcquisitionReferenceSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool LoyaltyAccountIDSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool LoyaltyAmountSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string LoyaltyDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("251c8a94-6eac-45e5-b83d-94bf0c8eefc4")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyAmountType {
        /// <remarks/>
        [DispId(2)]
        string LoyaltyUnit {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string Currency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        double Value {
            get;
            set;
        }
        [DispId(5)]
        string LoyaltyUnitDefaultValue {
            get;
        }
        [DispId(6)]
        bool LoyaltyUnitSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(10)]
        string LoyaltyAmountTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("6e551918-5a25-493a-b008-56dc3ebd3cd8")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentRequestType {
        /// <remarks/>
        [DispId(1)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        PaymentTransactionType PaymentTransaction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        PaymentDataType PaymentData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        LoyaltyDataType[] LoyaltyData {
            get;
            set;
        }
        [DispId(6)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool PaymentTransactionSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool PaymentDataSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool LoyaltyDataSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string PaymentRequestTypeClassName {
            get;
        }
        [DispId(10)]
        int LoyaltyDataLength();
        [DispId(11)]
        LoyaltyDataType LoyaltyDataGetItem(int index);
        [DispId(12)]
        bool LoyaltyDataSetItem(int index, LoyaltyDataType value);
        [DispId(13)]
        bool LoyaltyDataAddItem(LoyaltyDataType value);
        [DispId(14)]
        bool LoyaltyDataRemoveItem(int index);
        [DispId(15)]
        int LoyaltyDataInsertItem(int index, LoyaltyDataType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("680ffe8f-b860-410a-87df-58d4a38759e1")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentTransactionType {
        /// <remarks/>
        [DispId(1)]
        AmountsReqType AmountsReq {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        OriginalPOITransactionType OriginalPOITransaction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        TransactionConditionsType TransactionConditions {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        SaleItemType[] SaleItem {
            get;
            set;
        }
        [DispId(6)]
        bool AmountsReqSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool OriginalPOITransactionSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool TransactionConditionsSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool SaleItemSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string PaymentTransactionTypeClassName {
            get;
        }
        [DispId(10)]
        int SaleItemLength();
        [DispId(11)]
        SaleItemType SaleItemGetItem(int index);
        [DispId(12)]
        bool SaleItemSetItem(int index, SaleItemType value);
        [DispId(13)]
        bool SaleItemAddItem(SaleItemType value);
        [DispId(14)]
        bool SaleItemRemoveItem(int index);
        [DispId(15)]
        int SaleItemInsertItem(int index, SaleItemType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("6f9c47c2-a2c9-4ebf-95e3-676aca14142e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentDataType {
        /// <remarks/>
        [DispId(2)]
        TransactionIdentificationType CardAcquisitionReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string RequestedValidityDate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        InstalmentType Instalment {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        CustomerOrderType CustomerOrder {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        PaymentInstrumentDataType PaymentInstrumentData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string PaymentType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        bool SplitPaymentFlag {
            get;
            set;
        }
        [DispId(9)]
        bool CardAcquisitionReferenceSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool RequestedValidityDateSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool InstalmentSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool CustomerOrderSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool PaymentInstrumentDataSpecified {
            get;
            set;
        }
        [DispId(14)]
        string PaymentTypeDefaultValue {
            get;
        }
        [DispId(15)]
        bool PaymentTypeSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool SplitPaymentFlagDefaultValue {
            get;
        }
        [DispId(17)]
        bool SplitPaymentFlagSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(19)]
        string PaymentDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("99733329-084d-47b7-bdb6-85d2f5f6a0c9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IInstalmentType {
        /// <remarks/>
        [DispId(1)]
        string InstalmentType1 {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        int SequenceNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string PlanID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        int Period {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string PeriodUnit {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string FirstPaymentDate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        int TotalNbOfPayments {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        double CumulativeAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        bool CumulativeAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        double FirstAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        bool FirstAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        double Charges {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        bool ChargesSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool InstalmentType1Specified {
            get;
            set;
        }
        [DispId(16)]
        bool SequenceNumberSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool PlanIDSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool PeriodSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool PeriodUnitSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool FirstPaymentDateSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool TotalNbOfPaymentsSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(23)]
        string InstalmentTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("95d254d3-b315-4f1e-bfd8-5d3ad92a543a")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IReversalRequestType {
        /// <remarks/>
        [DispId(1)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        OriginalPOITransactionType OriginalPOITransaction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        CustomerOrderType CustomerOrder {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string ReversalReason {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        double ReversedAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool ReversedAmountSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool OriginalPOITransactionSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool CustomerOrderSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool ReversalReasonSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string ReversalRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("8b158732-e467-41d4-b2cc-3bc73c29f994")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IBatchResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        PerformedTransactionType[] PerformedTransaction {
            get;
            set;
        }
        [DispId(4)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool PerformedTransactionSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string BatchResponseTypeClassName {
            get;
        }
        [DispId(6)]
        int PerformedTransactionLength();
        [DispId(7)]
        PerformedTransactionType PerformedTransactionGetItem(int index);
        [DispId(8)]
        bool PerformedTransactionSetItem(int index, PerformedTransactionType value);
        [DispId(9)]
        bool PerformedTransactionAddItem(PerformedTransactionType value);
        [DispId(10)]
        bool PerformedTransactionRemoveItem(int index);
        [DispId(11)]
        int PerformedTransactionInsertItem(int index, PerformedTransactionType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("9bd5c61a-39fe-42a9-8d5b-03a63aa8803f")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPerformedTransactionType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POIDataType POIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        PaymentResultType PaymentResult {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        LoyaltyResultType[] LoyaltyResult {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        double ReversedAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool ReversedAmountSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool POIDataSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool PaymentResultSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool LoyaltyResultSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(21)]
        string PerformedTransactionTypeClassName {
            get;
        }
        [DispId(14)]
        int LoyaltyResultLength();
        [DispId(15)]
        LoyaltyResultType LoyaltyResultGetItem(int index);
        [DispId(16)]
        bool LoyaltyResultSetItem(int index, LoyaltyResultType value);
        [DispId(17)]
        bool LoyaltyResultAddItem(LoyaltyResultType value);
        [DispId(18)]
        bool LoyaltyResultRemoveItem(int index);
        [DispId(19)]
        int LoyaltyResultInsertItem(int index, LoyaltyResultType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("aad9b1a2-cabc-42a4-937f-6af5b0813afd")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPOIDataType {
        /// <remarks/>
        [DispId(1)]
        TransactionIdentificationType POITransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string POIReconciliationID {
            get;
            set;
        }
        [DispId(4)]
        bool POITransactionIDSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool POIReconciliationIDSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string POIDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("aa1cd352-fc33-4f67-bee0-0054966adf13")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentResultType {
        /// <remarks/>
        [DispId(2)]
        PaymentInstrumentDataType PaymentInstrumentData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        AmountsRespType AmountsResp {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        InstalmentType Instalment {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        CurrencyConversionType[] CurrencyConversion {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        CapturedSignatureType CapturedSignature {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        ContentInformationType ProtectedSignature {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        PaymentAcquirerDataType PaymentAcquirerData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string PaymentType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        bool MerchantOverrideFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        string CustomerLanguage {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        bool OnlineFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        string[] AuthenticationMethod {
            get;
            set;
        }
        /// <remarks/>
        [DispId(14)]
        string ValidityDate {
            get;
            set;
        }
        [DispId(15)]
        bool PaymentInstrumentDataSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool AmountsRespSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool InstalmentSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool CurrencyConversionSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool CapturedSignatureSpecified {
            get;
            set;
        }
        [DispId(26)]
        bool ProtectedSignatureSpecified {
            get;
            set;
        }
        [DispId(27)]
        bool PaymentAcquirerDataSpecified {
            get;
            set;
        }
        [DispId(28)]
        string PaymentTypeDefaultValue {
            get;
        }
        [DispId(29)]
        bool PaymentTypeSpecified {
            get;
            set;
        }
        [DispId(30)]
        bool MerchantOverrideFlagDefaultValue {
            get;
        }
        [DispId(31)]
        bool MerchantOverrideFlagSpecified {
            get;
            set;
        }
        [DispId(32)]
        bool CustomerLanguageSpecified {
            get;
            set;
        }
        [DispId(33)]
        bool OnlineFlagDefaultValue {
            get;
        }
        [DispId(34)]
        bool OnlineFlagSpecified {
            get;
            set;
        }
        [DispId(35)]
        bool AuthenticationMethodSpecified {
            get;
            set;
        }
        [DispId(42)]
        bool ValidityDateSpecified {
            get;
            set;
        }
        [DispId(43)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(44)]
        string PaymentResultTypeClassName {
            get;
        }
        [DispId(19)]
        int CurrencyConversionLength();
        [DispId(20)]
        CurrencyConversionType CurrencyConversionGetItem(int index);
        [DispId(21)]
        bool CurrencyConversionSetItem(int index, CurrencyConversionType value);
        [DispId(22)]
        bool CurrencyConversionAddItem(CurrencyConversionType value);
        [DispId(23)]
        bool CurrencyConversionRemoveItem(int index);
        [DispId(24)]
        int CurrencyConversionInsertItem(int index, CurrencyConversionType value);
        [DispId(36)]
        int AuthenticationMethodLength();
        [DispId(37)]
        string AuthenticationMethodGetItem(int index);
        [DispId(38)]
        bool AuthenticationMethodSetItem(int index, string value);
        [DispId(39)]
        bool AuthenticationMethodAddItem(string value);
        [DispId(40)]
        bool AuthenticationMethodRemoveItem(int index);
        [DispId(41)]
        int AuthenticationMethodInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("a8321d2a-651a-4e4a-9c54-1a7f51b464ce")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICurrencyConversionType {
        /// <remarks/>
        [DispId(2)]
        AmountType ConvertedAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        double Commission {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool CommissionSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string Declaration {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool CustomerApprovedFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        double Rate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        bool RateSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        double Markup {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        bool MarkupSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool ConvertedAmountSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool DeclarationSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool CustomerApprovedFlagDefaultValue {
            get;
        }
        [DispId(14)]
        bool CustomerApprovedFlagSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(16)]
        string CurrencyConversionTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("9092e447-692d-438b-b3ed-fc2ac8725945")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IAmountType {
        /// <remarks/>
        [DispId(1)]
        string Currency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        double Value {
            get;
            set;
        }
        [DispId(4)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(5)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string AmountTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("6d9fd3ae-9240-4c8f-b56c-f3fea252799a")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICapturedSignatureType {
        /// <remarks/>
        [DispId(1)]
        RawSignatureType RawSignature {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SignatureImageType SignatureImage {
            get;
            set;
        }
        [DispId(4)]
        bool RawSignatureSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool SignatureImageSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string CapturedSignatureTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("eb54c8b4-31b9-4c27-a6f6-4e3fd967d67c")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IRawSignatureType {
        /// <remarks/>
        [DispId(1)]
        AreaSizeType AreaSize {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SignaturePointType[] SignaturePoint {
            get;
            set;
        }
        [DispId(4)]
        bool AreaSizeSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool SignaturePointSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string RawSignatureTypeClassName {
            get;
        }
        [DispId(6)]
        int SignaturePointLength();
        [DispId(7)]
        SignaturePointType SignaturePointGetItem(int index);
        [DispId(8)]
        bool SignaturePointSetItem(int index, SignaturePointType value);
        [DispId(9)]
        bool SignaturePointAddItem(SignaturePointType value);
        [DispId(10)]
        bool SignaturePointRemoveItem(int index);
        [DispId(11)]
        int SignaturePointInsertItem(int index, SignaturePointType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("46fda4bb-a758-4a39-ad36-7553a948d7c6")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISignaturePointType {
        /// <remarks/>
        [DispId(1)]
        string X {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Y {
            get;
            set;
        }
        [DispId(4)]
        bool XSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool YSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string SignaturePointTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("d639fe3e-a025-49dc-9a73-03f3ac5d693d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISignatureImageType {
        /// <remarks/>
        [DispId(1)]
        string ImageFormat {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        byte[] ImageData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ImageReference {
            get;
            set;
        }
        [DispId(5)]
        bool ImageFormatSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ImageDataSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool ImageReferenceSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string SignatureImageTypeClassName {
            get;
        }
        [DispId(7)]
        int ImageDataLength();
        [DispId(8)]
        byte ImageDataGetItem(int index);
        [DispId(9)]
        bool ImageDataSetItem(int index, byte value);
        [DispId(10)]
        bool ImageDataAddItem(byte value);
        [DispId(11)]
        bool ImageDataRemoveItem(int index);
        [DispId(12)]
        int ImageDataInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("c1b1aeaa-8c2e-4ff9-a3b4-4d287acf254e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyResultType {
        /// <remarks/>
        [DispId(1)]
        LoyaltyAccountType LoyaltyAccount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        LoyaltyAmountType LoyaltyAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        LoyaltyAcquirerDataType LoyaltyAcquirerData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        RebatesType Rebates {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        double CurrentBalance {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool CurrentBalanceSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool LoyaltyAccountSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool LoyaltyAmountSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool LoyaltyAcquirerDataSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool RebatesSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string LoyaltyResultTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("2999dc31-359c-411a-9b0e-ad90f841973d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyAcquirerDataType {
        /// <remarks/>
        [DispId(1)]
        string ApprovalCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TransactionIdentificationType LoyaltyTransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string LoyaltyAcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string HostReconciliationID {
            get;
            set;
        }
        [DispId(6)]
        bool ApprovalCodeSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool LoyaltyTransactionIDSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool LoyaltyAcquirerIDSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool HostReconciliationIDSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string LoyaltyAcquirerDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("5199d0a3-7d6a-4be2-b2fe-b4148ae7d288")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IRebatesType {
        /// <remarks/>
        [DispId(1)]
        double TotalRebate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        bool TotalRebateSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string RebateLabel {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        SaleItemRebateType[] SaleItemRebate {
            get;
            set;
        }
        [DispId(6)]
        bool RebateLabelSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool SaleItemRebateSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string RebatesTypeClassName {
            get;
        }
        [DispId(8)]
        int SaleItemRebateLength();
        [DispId(9)]
        SaleItemRebateType SaleItemRebateGetItem(int index);
        [DispId(10)]
        bool SaleItemRebateSetItem(int index, SaleItemRebateType value);
        [DispId(11)]
        bool SaleItemRebateAddItem(SaleItemRebateType value);
        [DispId(12)]
        bool SaleItemRebateRemoveItem(int index);
        [DispId(13)]
        int SaleItemRebateInsertItem(int index, SaleItemRebateType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("83f7ecaf-65fc-4434-bdf6-f7a8a94c757d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleItemRebateType {
        /// <remarks/>
        [DispId(1)]
        string UnitOfMeasure {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        double Quantity {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool QuantitySpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string RebateLabel {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        int ItemID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string ProductCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string EanUpc {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        double ItemAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        bool ItemAmountSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool UnitOfMeasureSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool RebateLabelSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool ItemIDSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ProductCodeSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool EanUpcSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string SaleItemRebateTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("ad742516-fc7c-44b5-b23e-0cf8c1c7d339")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardAcquisitionRequestType {
        /// <remarks/>
        [DispId(1)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        CardAcquisitionTransactionType CardAcquisitionTransaction {
            get;
            set;
        }
        [DispId(4)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool CardAcquisitionTransactionSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string CardAcquisitionRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("1f4cc173-7e94-4fd8-9675-4e5dd7d872eb")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardAcquisitionTransactionType {
        /// <remarks/>
        [DispId(2)]
        string[] AllowedPaymentBrand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string[] AllowedLoyaltyBrand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string[] ForceEntryMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string LoyaltyHandling {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string CustomerLanguage {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool ForceCustomerSelectionFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        double TotalAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        bool TotalAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        string PaymentType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        bool CashBackFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        bool CashBackFlagSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool AllowedPaymentBrandSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool AllowedLoyaltyBrandSpecified {
            get;
            set;
        }
        [DispId(27)]
        bool ForceEntryModeSpecified {
            get;
            set;
        }
        [DispId(34)]
        string LoyaltyHandlingDefaultValue {
            get;
        }
        [DispId(35)]
        bool LoyaltyHandlingSpecified {
            get;
            set;
        }
        [DispId(36)]
        bool CustomerLanguageSpecified {
            get;
            set;
        }
        [DispId(37)]
        bool ForceCustomerSelectionFlagDefaultValue {
            get;
        }
        [DispId(38)]
        bool ForceCustomerSelectionFlagSpecified {
            get;
            set;
        }
        [DispId(39)]
        bool PaymentTypeSpecified {
            get;
            set;
        }
        [DispId(40)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(41)]
        string CardAcquisitionTransactionTypeClassName {
            get;
        }
        [DispId(14)]
        int AllowedPaymentBrandLength();
        [DispId(15)]
        string AllowedPaymentBrandGetItem(int index);
        [DispId(16)]
        bool AllowedPaymentBrandSetItem(int index, string value);
        [DispId(17)]
        bool AllowedPaymentBrandAddItem(string value);
        [DispId(18)]
        bool AllowedPaymentBrandRemoveItem(int index);
        [DispId(19)]
        int AllowedPaymentBrandInsertItem(int index, string value);
        [DispId(21)]
        int AllowedLoyaltyBrandLength();
        [DispId(22)]
        string AllowedLoyaltyBrandGetItem(int index);
        [DispId(23)]
        bool AllowedLoyaltyBrandSetItem(int index, string value);
        [DispId(24)]
        bool AllowedLoyaltyBrandAddItem(string value);
        [DispId(25)]
        bool AllowedLoyaltyBrandRemoveItem(int index);
        [DispId(26)]
        int AllowedLoyaltyBrandInsertItem(int index, string value);
        [DispId(28)]
        int ForceEntryModeLength();
        [DispId(29)]
        string ForceEntryModeGetItem(int index);
        [DispId(30)]
        bool ForceEntryModeSetItem(int index, string value);
        [DispId(31)]
        bool ForceEntryModeAddItem(string value);
        [DispId(32)]
        bool ForceEntryModeRemoveItem(int index);
        [DispId(33)]
        int ForceEntryModeInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("908c9f8f-b431-45d9-8932-e933203d510c")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardAcquisitionResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POIDataType POIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string[] PaymentBrand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        PaymentInstrumentDataType PaymentInstrumentData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        LoyaltyAccountType[] LoyaltyAccount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        CustomerOrderType[] CustomerOrder {
            get;
            set;
        }
        [DispId(9)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool POIDataSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool PaymentBrandSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool PaymentInstrumentDataSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool LoyaltyAccountSpecified {
            get;
            set;
        }
        [DispId(27)]
        bool CustomerOrderSpecified {
            get;
            set;
        }
        [DispId(34)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(35)]
        string CardAcquisitionResponseTypeClassName {
            get;
        }
        [DispId(13)]
        int PaymentBrandLength();
        [DispId(14)]
        string PaymentBrandGetItem(int index);
        [DispId(15)]
        bool PaymentBrandSetItem(int index, string value);
        [DispId(16)]
        bool PaymentBrandAddItem(string value);
        [DispId(17)]
        bool PaymentBrandRemoveItem(int index);
        [DispId(18)]
        int PaymentBrandInsertItem(int index, string value);
        [DispId(21)]
        int LoyaltyAccountLength();
        [DispId(22)]
        LoyaltyAccountType LoyaltyAccountGetItem(int index);
        [DispId(23)]
        bool LoyaltyAccountSetItem(int index, LoyaltyAccountType value);
        [DispId(24)]
        bool LoyaltyAccountAddItem(LoyaltyAccountType value);
        [DispId(25)]
        bool LoyaltyAccountRemoveItem(int index);
        [DispId(26)]
        int LoyaltyAccountInsertItem(int index, LoyaltyAccountType value);
        [DispId(28)]
        int CustomerOrderLength();
        [DispId(29)]
        CustomerOrderType CustomerOrderGetItem(int index);
        [DispId(30)]
        bool CustomerOrderSetItem(int index, CustomerOrderType value);
        [DispId(31)]
        bool CustomerOrderAddItem(CustomerOrderType value);
        [DispId(32)]
        bool CustomerOrderRemoveItem(int index);
        [DispId(33)]
        int CustomerOrderInsertItem(int index, CustomerOrderType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("c30cd775-6112-422a-b652-3052a8962660")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardholderPINType {
        /// <remarks/>
        [DispId(1)]
        ContentInformationType EncrPINBlock {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string PINFormat {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string AdditionalInput {
            get;
            set;
        }
        [DispId(5)]
        bool EncrPINBlockSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool PINFormatSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool AdditionalInputSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string CardholderPINTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("7aad3ef6-2e81-4809-8cde-4ffa3fdf8a11")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardReaderAPDURequestType {
        /// <remarks/>
        [DispId(1)]
        byte[] APDUData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        byte[] APDUClass {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] APDUInstruction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        byte[] APDUPar1 {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        byte[] APDUPar2 {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        byte[] APDUExpectedLength {
            get;
            set;
        }
        [DispId(8)]
        bool APDUDataSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool APDUClassSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool APDUInstructionSpecified {
            get;
            set;
        }
        [DispId(29)]
        bool APDUPar1Specified {
            get;
            set;
        }
        [DispId(36)]
        bool APDUPar2Specified {
            get;
            set;
        }
        [DispId(43)]
        bool APDUExpectedLengthSpecified {
            get;
            set;
        }
        [DispId(50)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(51)]
        string CardReaderAPDURequestTypeClassName {
            get;
        }
        [DispId(9)]
        int APDUDataLength();
        [DispId(10)]
        byte APDUDataGetItem(int index);
        [DispId(11)]
        bool APDUDataSetItem(int index, byte value);
        [DispId(12)]
        bool APDUDataAddItem(byte value);
        [DispId(13)]
        bool APDUDataRemoveItem(int index);
        [DispId(14)]
        int APDUDataInsertItem(int index, byte value);
        [DispId(16)]
        int APDUClassLength();
        [DispId(17)]
        byte APDUClassGetItem(int index);
        [DispId(18)]
        bool APDUClassSetItem(int index, byte value);
        [DispId(19)]
        bool APDUClassAddItem(byte value);
        [DispId(20)]
        bool APDUClassRemoveItem(int index);
        [DispId(21)]
        int APDUClassInsertItem(int index, byte value);
        [DispId(23)]
        int APDUInstructionLength();
        [DispId(24)]
        byte APDUInstructionGetItem(int index);
        [DispId(25)]
        bool APDUInstructionSetItem(int index, byte value);
        [DispId(26)]
        bool APDUInstructionAddItem(byte value);
        [DispId(27)]
        bool APDUInstructionRemoveItem(int index);
        [DispId(28)]
        int APDUInstructionInsertItem(int index, byte value);
        [DispId(30)]
        int APDUPar1Length();
        [DispId(31)]
        byte APDUPar1GetItem(int index);
        [DispId(32)]
        bool APDUPar1SetItem(int index, byte value);
        [DispId(33)]
        bool APDUPar1AddItem(byte value);
        [DispId(34)]
        bool APDUPar1RemoveItem(int index);
        [DispId(35)]
        int APDUPar1InsertItem(int index, byte value);
        [DispId(37)]
        int APDUPar2Length();
        [DispId(38)]
        byte APDUPar2GetItem(int index);
        [DispId(39)]
        bool APDUPar2SetItem(int index, byte value);
        [DispId(40)]
        bool APDUPar2AddItem(byte value);
        [DispId(41)]
        bool APDUPar2RemoveItem(int index);
        [DispId(42)]
        int APDUPar2InsertItem(int index, byte value);
        [DispId(44)]
        int APDUExpectedLengthLength();
        [DispId(45)]
        byte APDUExpectedLengthGetItem(int index);
        [DispId(46)]
        bool APDUExpectedLengthSetItem(int index, byte value);
        [DispId(47)]
        bool APDUExpectedLengthAddItem(byte value);
        [DispId(48)]
        bool APDUExpectedLengthRemoveItem(int index);
        [DispId(49)]
        int APDUExpectedLengthInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("acb6e03d-ffdc-4f8e-8ad0-9ef7f5ddf51e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardReaderAPDUResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        byte[] APDUData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] CardStatusWords {
            get;
            set;
        }
        [DispId(5)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool APDUDataSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool CardStatusWordsSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(21)]
        string CardReaderAPDUResponseTypeClassName {
            get;
        }
        [DispId(7)]
        int APDUDataLength();
        [DispId(8)]
        byte APDUDataGetItem(int index);
        [DispId(9)]
        bool APDUDataSetItem(int index, byte value);
        [DispId(10)]
        bool APDUDataAddItem(byte value);
        [DispId(11)]
        bool APDUDataRemoveItem(int index);
        [DispId(12)]
        int APDUDataInsertItem(int index, byte value);
        [DispId(14)]
        int CardStatusWordsLength();
        [DispId(15)]
        byte CardStatusWordsGetItem(int index);
        [DispId(16)]
        bool CardStatusWordsSetItem(int index, byte value);
        [DispId(17)]
        bool CardStatusWordsAddItem(byte value);
        [DispId(18)]
        bool CardStatusWordsRemoveItem(int index);
        [DispId(19)]
        int CardStatusWordsInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("1d112f01-6759-4041-9b1b-9b987137dc69")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardReaderInitRequestType {
        /// <remarks/>
        [DispId(2)]
        string[] ForceEntryMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        DisplayOutputType DisplayOutput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool WarmResetFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool WarmResetFlagSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool LeaveCardFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        int MaxWaitingTime {
            get;
            set;
        }
        [DispId(8)]
        bool ForceEntryModeSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool DisplayOutputSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool LeaveCardFlagDefaultValue {
            get;
        }
        [DispId(17)]
        bool LeaveCardFlagSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool MaxWaitingTimeSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(20)]
        string CardReaderInitRequestTypeClassName {
            get;
        }
        [DispId(9)]
        int ForceEntryModeLength();
        [DispId(10)]
        string ForceEntryModeGetItem(int index);
        [DispId(11)]
        bool ForceEntryModeSetItem(int index, string value);
        [DispId(12)]
        bool ForceEntryModeAddItem(string value);
        [DispId(13)]
        bool ForceEntryModeRemoveItem(int index);
        [DispId(14)]
        int ForceEntryModeInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("07fbd7ba-3f3b-4993-b84b-fd57c779e445")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardReaderInitResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TrackDataType[] TrackData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        ICCResetDataType ICCResetData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string[] EntryMode {
            get;
            set;
        }
        [DispId(6)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool TrackDataSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ICCResetDataSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool EntryModeSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(23)]
        string CardReaderInitResponseTypeClassName {
            get;
        }
        [DispId(8)]
        int TrackDataLength();
        [DispId(9)]
        TrackDataType TrackDataGetItem(int index);
        [DispId(10)]
        bool TrackDataSetItem(int index, TrackDataType value);
        [DispId(11)]
        bool TrackDataAddItem(TrackDataType value);
        [DispId(12)]
        bool TrackDataRemoveItem(int index);
        [DispId(13)]
        int TrackDataInsertItem(int index, TrackDataType value);
        [DispId(16)]
        int EntryModeLength();
        [DispId(17)]
        string EntryModeGetItem(int index);
        [DispId(18)]
        bool EntryModeSetItem(int index, string value);
        [DispId(19)]
        bool EntryModeAddItem(string value);
        [DispId(20)]
        bool EntryModeRemoveItem(int index);
        [DispId(21)]
        int EntryModeInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("8b05640c-154d-456a-a5fb-5c0e204b79cb")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IICCResetDataType {
        /// <remarks/>
        [DispId(1)]
        byte[] ATRValue {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        byte[] CardStatusWords {
            get;
            set;
        }
        [DispId(4)]
        bool ATRValueSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool CardStatusWordsSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(19)]
        string ICCResetDataTypeClassName {
            get;
        }
        [DispId(5)]
        int ATRValueLength();
        [DispId(6)]
        byte ATRValueGetItem(int index);
        [DispId(7)]
        bool ATRValueSetItem(int index, byte value);
        [DispId(8)]
        bool ATRValueAddItem(byte value);
        [DispId(9)]
        bool ATRValueRemoveItem(int index);
        [DispId(10)]
        int ATRValueInsertItem(int index, byte value);
        [DispId(12)]
        int CardStatusWordsLength();
        [DispId(13)]
        byte CardStatusWordsGetItem(int index);
        [DispId(14)]
        bool CardStatusWordsSetItem(int index, byte value);
        [DispId(15)]
        bool CardStatusWordsAddItem(byte value);
        [DispId(16)]
        bool CardStatusWordsRemoveItem(int index);
        [DispId(17)]
        int CardStatusWordsInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("edec93fd-9249-4d26-8705-dc690517ce1d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardReaderPowerOffRequestType {
        /// <remarks/>
        [DispId(1)]
        DisplayOutputType DisplayOutput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        int MaxWaitingTime {
            get;
            set;
        }
        [DispId(4)]
        bool DisplayOutputSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool MaxWaitingTimeSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string CardReaderPowerOffRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("159ca306-05ce-408d-8e13-508866e63266")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICardReaderPowerOffResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        [DispId(3)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string CardReaderPowerOffResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a2381f2a-a3b0-4a32-b499-071b498f12c2")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICashHandlingDeviceType {
        /// <remarks/>
        [DispId(1)]
        CoinsOrBillsType[] CoinsOrBills {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        bool CashHandlingOKFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string Currency {
            get;
            set;
        }
        [DispId(5)]
        bool CoinsOrBillsSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool CashHandlingOKFlagSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string CashHandlingDeviceTypeClassName {
            get;
        }
        [DispId(6)]
        int CoinsOrBillsLength();
        [DispId(7)]
        CoinsOrBillsType CoinsOrBillsGetItem(int index);
        [DispId(8)]
        bool CoinsOrBillsSetItem(int index, CoinsOrBillsType value);
        [DispId(9)]
        bool CoinsOrBillsAddItem(CoinsOrBillsType value);
        [DispId(10)]
        bool CoinsOrBillsRemoveItem(int index);
        [DispId(11)]
        int CoinsOrBillsInsertItem(int index, CoinsOrBillsType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("54b577d3-7250-4ba6-bbbb-8f33e1613422")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICoinsOrBillsType {
        /// <remarks/>
        [DispId(1)]
        double UnitValue {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        int Number {
            get;
            set;
        }
        [DispId(4)]
        bool UnitValueSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool NumberSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string CoinsOrBillsTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("fd9c257c-ebea-4c45-be61-5b9d4aef54b3")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ICriteriaOrderType {
        /// <remarks/>
        [DispId(1)]
        string Target {
            get;
            set;
        }
        [DispId(3)]
        bool TargetSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string CriteriaOrderTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("1670b2a0-73d6-4471-9b00-e66d43df86a8")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IDiagnosisRequestType {
        /// <remarks/>
        [DispId(2)]
        string[] AcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string POIID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool HostDiagnosisFlag {
            get;
            set;
        }
        [DispId(5)]
        bool AcquirerIDSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool POIIDSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool HostDiagnosisFlagDefaultValue {
            get;
        }
        [DispId(14)]
        bool HostDiagnosisFlagSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(16)]
        string DiagnosisRequestTypeClassName {
            get;
        }
        [DispId(6)]
        int AcquirerIDLength();
        [DispId(7)]
        string AcquirerIDGetItem(int index);
        [DispId(8)]
        bool AcquirerIDSetItem(int index, string value);
        [DispId(9)]
        bool AcquirerIDAddItem(string value);
        [DispId(10)]
        bool AcquirerIDRemoveItem(int index);
        [DispId(11)]
        int AcquirerIDInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("adab2979-c795-417d-ba95-20423b29a836")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IDiagnosisResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string[] LoggedSaleID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POIStatusType POIStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        HostStatusType[] HostStatus {
            get;
            set;
        }
        [DispId(6)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool LoggedSaleIDSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool POIStatusSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool HostStatusSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(23)]
        string DiagnosisResponseTypeClassName {
            get;
        }
        [DispId(8)]
        int LoggedSaleIDLength();
        [DispId(9)]
        string LoggedSaleIDGetItem(int index);
        [DispId(10)]
        bool LoggedSaleIDSetItem(int index, string value);
        [DispId(11)]
        bool LoggedSaleIDAddItem(string value);
        [DispId(12)]
        bool LoggedSaleIDRemoveItem(int index);
        [DispId(13)]
        int LoggedSaleIDInsertItem(int index, string value);
        [DispId(16)]
        int HostStatusLength();
        [DispId(17)]
        HostStatusType HostStatusGetItem(int index);
        [DispId(18)]
        bool HostStatusSetItem(int index, HostStatusType value);
        [DispId(19)]
        bool HostStatusAddItem(HostStatusType value);
        [DispId(20)]
        bool HostStatusRemoveItem(int index);
        [DispId(21)]
        int HostStatusInsertItem(int index, HostStatusType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("a640573c-3c4c-462e-8a2f-915560447bdd")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPOIStatusType {
        /// <remarks/>
        [DispId(1)]
        CashHandlingDeviceType[] CashHandlingDevice {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string GlobalStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool SecurityOKFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool SecurityOKFlagSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool PEDOKFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool PEDOKFlagSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool CardReaderOKFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        bool CardReaderOKFlagSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string PrinterStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        bool CommunicationOKFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        bool CommunicationOKFlagSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        bool FraudPreventionFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        bool FraudPreventionFlagSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool CashHandlingDeviceSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool GlobalStatusSpecified {
            get;
            set;
        }
        [DispId(23)]
        bool PrinterStatusSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(25)]
        string POIStatusTypeClassName {
            get;
        }
        [DispId(16)]
        int CashHandlingDeviceLength();
        [DispId(17)]
        CashHandlingDeviceType CashHandlingDeviceGetItem(int index);
        [DispId(18)]
        bool CashHandlingDeviceSetItem(int index, CashHandlingDeviceType value);
        [DispId(19)]
        bool CashHandlingDeviceAddItem(CashHandlingDeviceType value);
        [DispId(20)]
        bool CashHandlingDeviceRemoveItem(int index);
        [DispId(21)]
        int CashHandlingDeviceInsertItem(int index, CashHandlingDeviceType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("1205fd8f-7536-413a-91a2-439979aa76cb")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IHostStatusType {
        /// <remarks/>
        [DispId(2)]
        string AcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool IsReachableFlag {
            get;
            set;
        }
        [DispId(4)]
        bool AcquirerIDSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool IsReachableFlagDefaultValue {
            get;
        }
        [DispId(6)]
        bool IsReachableFlagSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(8)]
        string HostStatusTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("44b2dd5a-3eec-4206-b575-e0756f7660a4")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IEnableServiceRequestType {
        /// <remarks/>
        [DispId(1)]
        string ServicesEnabled {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        DisplayOutputType DisplayOutput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string TransactionAction {
            get;
            set;
        }
        [DispId(5)]
        bool ServicesEnabledSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool DisplayOutputSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool TransactionActionSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string EnableServiceRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("74400c5b-5444-4657-8ba2-21363ea9d4bf")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IEnableServiceResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        [DispId(3)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string EnableServiceResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("676d5d45-c43c-413f-b0b0-2eb9c2743e44")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IEventNotificationType {
        /// <remarks/>
        [DispId(2)]
        string EventDetails {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] RejectedMessage {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        DisplayOutputType DisplayOutput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string TimeStamp {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string EventToNotify {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool MaintenanceRequiredFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string CustomerLanguage {
            get;
            set;
        }
        [DispId(9)]
        bool EventDetailsSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool RejectedMessageSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool DisplayOutputSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool TimeStampSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool EventToNotifySpecified {
            get;
            set;
        }
        [DispId(20)]
        bool MaintenanceRequiredFlagDefaultValue {
            get;
        }
        [DispId(21)]
        bool MaintenanceRequiredFlagSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool CustomerLanguageSpecified {
            get;
            set;
        }
        [DispId(23)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(24)]
        string EventNotificationTypeClassName {
            get;
        }
        [DispId(11)]
        int RejectedMessageLength();
        [DispId(12)]
        byte RejectedMessageGetItem(int index);
        [DispId(13)]
        bool RejectedMessageSetItem(int index, byte value);
        [DispId(14)]
        bool RejectedMessageAddItem(byte value);
        [DispId(15)]
        bool RejectedMessageRemoveItem(int index);
        [DispId(16)]
        int RejectedMessageInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("754c27fa-75a9-4277-86b6-85e0c76b1942")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IGetTotalsRequestType {
        /// <remarks/>
        [DispId(1)]
        string TotalDetails {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TotalFilterType TotalFilter {
            get;
            set;
        }
        [DispId(4)]
        bool TotalDetailsSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool TotalFilterSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string GetTotalsRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("23ea6ab6-c252-40d1-8c63-4cafc0739413")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITotalFilterType {
        /// <remarks/>
        [DispId(1)]
        string POIID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string SaleID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string OperatorID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string ShiftNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string TotalsGroupID {
            get;
            set;
        }
        [DispId(7)]
        bool POIIDSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool SaleIDSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool OperatorIDSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ShiftNumberSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool TotalsGroupIDSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string TotalFilterTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("197ebc2a-1119-4cc4-9ec6-4d3ad83da757")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IGetTotalsResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TransactionTotalsType[] TransactionTotals {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string POIReconciliationID {
            get;
            set;
        }
        [DispId(5)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool TransactionTotalsSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool POIReconciliationIDSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string GetTotalsResponseTypeClassName {
            get;
        }
        [DispId(7)]
        int TransactionTotalsLength();
        [DispId(8)]
        TransactionTotalsType TransactionTotalsGetItem(int index);
        [DispId(9)]
        bool TransactionTotalsSetItem(int index, TransactionTotalsType value);
        [DispId(10)]
        bool TransactionTotalsAddItem(TransactionTotalsType value);
        [DispId(11)]
        bool TransactionTotalsRemoveItem(int index);
        [DispId(12)]
        int TransactionTotalsInsertItem(int index, TransactionTotalsType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("d440f99d-cb76-4a5f-8815-32857e316d47")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionTotalsType {
        /// <remarks/>
        [DispId(2)]
        PaymentTotalsType[] PaymentTotals {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        LoyaltyTotalsType[] LoyaltyTotals {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string PaymentInstrumentType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string AcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string ErrorCondition {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string HostReconciliationID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string CardBrand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string POIID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        string SaleID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        string OperatorID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        string ShiftNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        string TotalsGroupID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(14)]
        string PaymentCurrency {
            get;
            set;
        }
        /// <remarks/>
        [DispId(15)]
        string LoyaltyUnit {
            get;
            set;
        }
        /// <remarks/>
        [DispId(16)]
        string LoyaltyCurrency {
            get;
            set;
        }
        [DispId(17)]
        bool PaymentTotalsSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool LoyaltyTotalsSpecified {
            get;
            set;
        }
        [DispId(31)]
        bool PaymentInstrumentTypeSpecified {
            get;
            set;
        }
        [DispId(32)]
        bool AcquirerIDSpecified {
            get;
            set;
        }
        [DispId(33)]
        bool ErrorConditionSpecified {
            get;
            set;
        }
        [DispId(34)]
        bool HostReconciliationIDSpecified {
            get;
            set;
        }
        [DispId(35)]
        bool CardBrandSpecified {
            get;
            set;
        }
        [DispId(36)]
        bool POIIDSpecified {
            get;
            set;
        }
        [DispId(37)]
        bool SaleIDSpecified {
            get;
            set;
        }
        [DispId(38)]
        bool OperatorIDSpecified {
            get;
            set;
        }
        [DispId(39)]
        bool ShiftNumberSpecified {
            get;
            set;
        }
        [DispId(40)]
        bool TotalsGroupIDSpecified {
            get;
            set;
        }
        [DispId(41)]
        bool PaymentCurrencySpecified {
            get;
            set;
        }
        [DispId(42)]
        string LoyaltyUnitDefaultValue {
            get;
        }
        [DispId(43)]
        bool LoyaltyUnitSpecified {
            get;
            set;
        }
        [DispId(44)]
        bool LoyaltyCurrencySpecified {
            get;
            set;
        }
        [DispId(45)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(46)]
        string TransactionTotalsTypeClassName {
            get;
        }
        [DispId(18)]
        int PaymentTotalsLength();
        [DispId(19)]
        PaymentTotalsType PaymentTotalsGetItem(int index);
        [DispId(20)]
        bool PaymentTotalsSetItem(int index, PaymentTotalsType value);
        [DispId(21)]
        bool PaymentTotalsAddItem(PaymentTotalsType value);
        [DispId(22)]
        bool PaymentTotalsRemoveItem(int index);
        [DispId(23)]
        int PaymentTotalsInsertItem(int index, PaymentTotalsType value);
        [DispId(25)]
        int LoyaltyTotalsLength();
        [DispId(26)]
        LoyaltyTotalsType LoyaltyTotalsGetItem(int index);
        [DispId(27)]
        bool LoyaltyTotalsSetItem(int index, LoyaltyTotalsType value);
        [DispId(28)]
        bool LoyaltyTotalsAddItem(LoyaltyTotalsType value);
        [DispId(29)]
        bool LoyaltyTotalsRemoveItem(int index);
        [DispId(30)]
        int LoyaltyTotalsInsertItem(int index, LoyaltyTotalsType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("b26c1d1b-fdb2-4dc2-939a-4172f4a4e4a9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentTotalsType {
        /// <remarks/>
        [DispId(1)]
        string TransactionType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        int TransactionCount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        double TransactionAmount {
            get;
            set;
        }
        [DispId(5)]
        bool TransactionTypeSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool TransactionCountSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool TransactionAmountSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string PaymentTotalsTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("d7119b81-b979-4b4a-8603-93c1b75845fe")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyTotalsType {
        /// <remarks/>
        [DispId(1)]
        string TransactionType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        int TransactionCount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        double TransactionAmount {
            get;
            set;
        }
        [DispId(5)]
        bool TransactionTypeSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool TransactionCountSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool TransactionAmountSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string LoyaltyTotalsTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("0b4aad7f-2865-462d-905c-ac16d5a8e8ae")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IInputType {
        /// <remarks/>
        [DispId(1)]
        bool ConfirmedFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        bool ConfirmedFlagSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string FunctionKey {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string TextInput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string DigitInput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        ContentInformationType Password {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string MenuEntryNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string InputCommand {
            get;
            set;
        }
        [DispId(10)]
        bool FunctionKeySpecified {
            get;
            set;
        }
        [DispId(11)]
        bool TextInputSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool DigitInputSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool PasswordSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool MenuEntryNumberSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool InputCommandSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string InputTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("3640f29c-da87-4da9-b4b9-a62d42ba3b88")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IInputDataType {
        /// <remarks/>
        [DispId(2)]
        string DefaultInputString {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string StringMask {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Device {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string InfoQualify {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string InputCommand {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool NotifyCardInputFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        int MaxInputTime {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        bool ImmediateResponseFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        int MinLength {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        int MaxLength {
            get;
            set;
        }
        /// <remarks/>
        [DispId(12)]
        int MaxDecimalLength {
            get;
            set;
        }
        /// <remarks/>
        [DispId(13)]
        bool WaitUserValidationFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(14)]
        bool FromRightToLeftFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(15)]
        bool MaskCharactersFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(16)]
        bool BeepKeyFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(17)]
        bool GlobalCorrectionFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(18)]
        bool DisableCancelFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(19)]
        bool DisableCorrectFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(20)]
        bool DisableValidFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(21)]
        bool MenuBackFlag {
            get;
            set;
        }
        [DispId(22)]
        bool DefaultInputStringSpecified {
            get;
            set;
        }
        [DispId(23)]
        bool StringMaskSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool DeviceSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool InfoQualifySpecified {
            get;
            set;
        }
        [DispId(26)]
        bool InputCommandSpecified {
            get;
            set;
        }
        [DispId(27)]
        bool NotifyCardInputFlagDefaultValue {
            get;
        }
        [DispId(28)]
        bool NotifyCardInputFlagSpecified {
            get;
            set;
        }
        [DispId(29)]
        bool MaxInputTimeSpecified {
            get;
            set;
        }
        [DispId(30)]
        bool ImmediateResponseFlagDefaultValue {
            get;
        }
        [DispId(31)]
        bool ImmediateResponseFlagSpecified {
            get;
            set;
        }
        [DispId(32)]
        bool MinLengthSpecified {
            get;
            set;
        }
        [DispId(33)]
        bool MaxLengthSpecified {
            get;
            set;
        }
        [DispId(34)]
        bool MaxDecimalLengthSpecified {
            get;
            set;
        }
        [DispId(35)]
        bool WaitUserValidationFlagDefaultValue {
            get;
        }
        [DispId(36)]
        bool WaitUserValidationFlagSpecified {
            get;
            set;
        }
        [DispId(37)]
        bool FromRightToLeftFlagDefaultValue {
            get;
        }
        [DispId(38)]
        bool FromRightToLeftFlagSpecified {
            get;
            set;
        }
        [DispId(39)]
        bool MaskCharactersFlagDefaultValue {
            get;
        }
        [DispId(40)]
        bool MaskCharactersFlagSpecified {
            get;
            set;
        }
        [DispId(41)]
        bool BeepKeyFlagDefaultValue {
            get;
        }
        [DispId(42)]
        bool BeepKeyFlagSpecified {
            get;
            set;
        }
        [DispId(43)]
        bool GlobalCorrectionFlagDefaultValue {
            get;
        }
        [DispId(44)]
        bool GlobalCorrectionFlagSpecified {
            get;
            set;
        }
        [DispId(45)]
        bool DisableCancelFlagDefaultValue {
            get;
        }
        [DispId(46)]
        bool DisableCancelFlagSpecified {
            get;
            set;
        }
        [DispId(47)]
        bool DisableCorrectFlagDefaultValue {
            get;
        }
        [DispId(48)]
        bool DisableCorrectFlagSpecified {
            get;
            set;
        }
        [DispId(49)]
        bool DisableValidFlagDefaultValue {
            get;
        }
        [DispId(50)]
        bool DisableValidFlagSpecified {
            get;
            set;
        }
        [DispId(51)]
        bool MenuBackFlagDefaultValue {
            get;
        }
        [DispId(52)]
        bool MenuBackFlagSpecified {
            get;
            set;
        }
        [DispId(53)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(54)]
        string InputDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("1e8e298e-643a-4291-b96b-7a31b4119e01")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IInputRequestType {
        /// <remarks/>
        [DispId(1)]
        DisplayOutputType DisplayOutput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        InputDataType InputData {
            get;
            set;
        }
        [DispId(4)]
        bool DisplayOutputSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool InputDataSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string InputRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("8b419473-2371-40e1-a0af-5fb89529a199")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IInputResponseType {
        /// <remarks/>
        [DispId(1)]
        OutputResultType OutputResult {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        InputResultType InputResult {
            get;
            set;
        }
        [DispId(4)]
        bool OutputResultSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool InputResultSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string InputResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("314fe35d-88f0-40c6-b6b7-d963468526b9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IInputResultType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        InputType Input {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string Device {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string InfoQualify {
            get;
            set;
        }
        [DispId(6)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool InputSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool DeviceSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool InfoQualifySpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string InputResultTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("c43c38d9-738b-4cee-bd01-712ffa2c35c9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IInputUpdateType {
        /// <remarks/>
        [DispId(1)]
        MessageReferenceType MessageReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        OutputContentType OutputContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        MenuEntryType[] MenuEntry {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        byte[] OutputSignature {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        int MinLength {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        int MaxLength {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        int MaxDecimalLength {
            get;
            set;
        }
        [DispId(9)]
        bool MessageReferenceSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool OutputContentSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool MenuEntrySpecified {
            get;
            set;
        }
        [DispId(18)]
        bool OutputSignatureSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool MinLengthSpecified {
            get;
            set;
        }
        [DispId(26)]
        bool MaxLengthSpecified {
            get;
            set;
        }
        [DispId(27)]
        bool MaxDecimalLengthSpecified {
            get;
            set;
        }
        [DispId(28)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(29)]
        string InputUpdateTypeClassName {
            get;
        }
        [DispId(12)]
        int MenuEntryLength();
        [DispId(13)]
        MenuEntryType MenuEntryGetItem(int index);
        [DispId(14)]
        bool MenuEntrySetItem(int index, MenuEntryType value);
        [DispId(15)]
        bool MenuEntryAddItem(MenuEntryType value);
        [DispId(16)]
        bool MenuEntryRemoveItem(int index);
        [DispId(17)]
        int MenuEntryInsertItem(int index, MenuEntryType value);
        [DispId(19)]
        int OutputSignatureLength();
        [DispId(20)]
        byte OutputSignatureGetItem(int index);
        [DispId(21)]
        bool OutputSignatureSetItem(int index, byte value);
        [DispId(22)]
        bool OutputSignatureAddItem(byte value);
        [DispId(23)]
        bool OutputSignatureRemoveItem(int index);
        [DispId(24)]
        int OutputSignatureInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("01c719dc-4832-4a88-87e5-09078404e497")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoginRequestType {
        /// <remarks/>
        [DispId(2)]
        string DateTime {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        SaleSoftwareType SaleSoftware {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        SaleTerminalDataType SaleTerminalData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool TrainingModeFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string OperatorLanguage {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string OperatorID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string ShiftNumber {
            get;
            set;
        }
        /// <remarks/>
        [DispId(9)]
        string TokenRequestedType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(10)]
        string[] CustomerOrderReq {
            get;
            set;
        }
        /// <remarks/>
        [DispId(11)]
        string POISerialNumber {
            get;
            set;
        }
        [DispId(12)]
        bool DateTimeSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool SaleSoftwareSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool SaleTerminalDataSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool TrainingModeFlagDefaultValue {
            get;
        }
        [DispId(16)]
        bool TrainingModeFlagSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool OperatorLanguageSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool OperatorIDSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool ShiftNumberSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool TokenRequestedTypeSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool CustomerOrderReqSpecified {
            get;
            set;
        }
        [DispId(28)]
        bool POISerialNumberSpecified {
            get;
            set;
        }
        [DispId(29)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(30)]
        string LoginRequestTypeClassName {
            get;
        }
        [DispId(22)]
        int CustomerOrderReqLength();
        [DispId(23)]
        string CustomerOrderReqGetItem(int index);
        [DispId(24)]
        bool CustomerOrderReqSetItem(int index, string value);
        [DispId(25)]
        bool CustomerOrderReqAddItem(string value);
        [DispId(26)]
        bool CustomerOrderReqRemoveItem(int index);
        [DispId(27)]
        int CustomerOrderReqInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("d0b0d76a-3cce-437c-9497-2c2808cced84")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleSoftwareType {
        /// <remarks/>
        [DispId(1)]
        string ProviderIdentification {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string ApplicationName {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string SoftwareVersion {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string CertificationCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string ComponentDescription {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string ComponentType {
            get;
            set;
        }
        [DispId(8)]
        bool ProviderIdentificationSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ApplicationNameSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SoftwareVersionSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool CertificationCodeSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ComponentDescriptionSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool ComponentTypeSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string SaleSoftwareTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("e914ac17-51d8-4a50-bc0a-abd24227b1bb")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoginResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        POISystemDataType POISystemData {
            get;
            set;
        }
        [DispId(4)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool POISystemDataSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string LoginResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("ab060ba0-c74a-4c4a-a981-e78cba189d0e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPOISystemDataType {
        /// <remarks/>
        [DispId(1)]
        string DateTime {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        POISoftwareType POISoftware {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POITerminalDataType POITerminalData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        POIStatusType POIStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool TokenRequestStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool TokenRequestStatusSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool CustomerOrderStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        bool CustomerOrderStatusSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool DateTimeSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool POISoftwareSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool POITerminalDataSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool POIStatusSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string POISystemDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("bb2c46b3-6810-466c-8986-a004d38e1129")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPOISoftwareType {
        /// <remarks/>
        [DispId(1)]
        string ProviderIdentification {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string ApplicationName {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string SoftwareVersion {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string CertificationCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string ComponentDescription {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string ComponentType {
            get;
            set;
        }
        [DispId(8)]
        bool ProviderIdentificationSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ApplicationNameSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SoftwareVersionSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool CertificationCodeSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ComponentDescriptionSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool ComponentTypeSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string POISoftwareTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("4fafdd15-3e55-49da-a21a-8d39dca21b09")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPOITerminalDataType {
        /// <remarks/>
        [DispId(1)]
        string POICapabilities {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        POIProfileType POIProfile {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string TerminalEnvironment {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string POISerialNumber {
            get;
            set;
        }
        [DispId(6)]
        bool POICapabilitiesSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool POIProfileSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool TerminalEnvironmentSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool POISerialNumberSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string POITerminalDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("5f0c905b-d042-46bc-8898-97276010cbf0")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPOIProfileType {
        /// <remarks/>
        [DispId(2)]
        string ServiceProfiles {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string GenericProfile {
            get;
            set;
        }
        [DispId(4)]
        bool ServiceProfilesSpecified {
            get;
            set;
        }
        [DispId(5)]
        string GenericProfileDefaultValue {
            get;
        }
        [DispId(6)]
        bool GenericProfileSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(8)]
        string POIProfileTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("48a5a292-0243-4e37-8909-d255d7cb61cf")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILogoutRequestType {
        /// <remarks/>
        [DispId(2)]
        bool MaintenanceAllowed {
            get;
            set;
        }
        [DispId(3)]
        bool MaintenanceAllowedDefaultValue {
            get;
        }
        [DispId(4)]
        bool MaintenanceAllowedSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(6)]
        string LogoutRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("29dca5f2-897d-4bc2-b7bb-dbddabfdf6f7")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILogoutResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        [DispId(3)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string LogoutResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("8a9ef45d-33a8-4a5b-aa34-37f858694955")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ILoyaltyResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POIDataType POIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        LoyaltyResultType[] LoyaltyResult {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        PaymentReceiptType[] PaymentReceipt {
            get;
            set;
        }
        [DispId(7)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool POIDataSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool LoyaltyResultSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool PaymentReceiptSpecified {
            get;
            set;
        }
        [DispId(24)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(25)]
        string LoyaltyResponseTypeClassName {
            get;
        }
        [DispId(11)]
        int LoyaltyResultLength();
        [DispId(12)]
        LoyaltyResultType LoyaltyResultGetItem(int index);
        [DispId(13)]
        bool LoyaltyResultSetItem(int index, LoyaltyResultType value);
        [DispId(14)]
        bool LoyaltyResultAddItem(LoyaltyResultType value);
        [DispId(15)]
        bool LoyaltyResultRemoveItem(int index);
        [DispId(16)]
        int LoyaltyResultInsertItem(int index, LoyaltyResultType value);
        [DispId(18)]
        int PaymentReceiptLength();
        [DispId(19)]
        PaymentReceiptType PaymentReceiptGetItem(int index);
        [DispId(20)]
        bool PaymentReceiptSetItem(int index, PaymentReceiptType value);
        [DispId(21)]
        bool PaymentReceiptAddItem(PaymentReceiptType value);
        [DispId(22)]
        bool PaymentReceiptRemoveItem(int index);
        [DispId(23)]
        int PaymentReceiptInsertItem(int index, PaymentReceiptType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("c21a91d9-d61c-489a-8b10-ddd3d1da17b1")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentReceiptType {
        /// <remarks/>
        [DispId(2)]
        OutputContentType OutputContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string DocumentQualifier {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool IntegratedPrintFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        bool RequiredSignatureFlag {
            get;
            set;
        }
        [DispId(6)]
        bool OutputContentSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool DocumentQualifierSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool IntegratedPrintFlagDefaultValue {
            get;
        }
        [DispId(9)]
        bool IntegratedPrintFlagSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool RequiredSignatureFlagDefaultValue {
            get;
        }
        [DispId(11)]
        bool RequiredSignatureFlagSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string PaymentReceiptTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("de02da6c-807d-44f9-812b-cff6b763a7bf")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IMessageHeaderType {
        /// <remarks/>
        [DispId(1)]
        string ProtocolVersion {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string MessageClass {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string MessageCategory {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string MessageType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string ServiceID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string DeviceID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string SaleID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string POIID {
            get;
            set;
        }
        [DispId(10)]
        bool ProtocolVersionSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool MessageClassSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool MessageCategorySpecified {
            get;
            set;
        }
        [DispId(13)]
        bool MessageTypeSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ServiceIDSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool DeviceIDSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool SaleIDSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool POIIDSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(19)]
        string MessageHeaderTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("8b5f60e7-f191-48ff-8d71-f8f468e5cc3d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPaymentResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POIDataType POIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        PaymentResultType PaymentResult {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        LoyaltyResultType[] LoyaltyResult {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        PaymentReceiptType[] PaymentReceipt {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        CustomerOrderType[] CustomerOrder {
            get;
            set;
        }
        [DispId(9)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool POIDataSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool PaymentResultSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool LoyaltyResultSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool PaymentReceiptSpecified {
            get;
            set;
        }
        [DispId(27)]
        bool CustomerOrderSpecified {
            get;
            set;
        }
        [DispId(34)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(35)]
        string PaymentResponseTypeClassName {
            get;
        }
        [DispId(14)]
        int LoyaltyResultLength();
        [DispId(15)]
        LoyaltyResultType LoyaltyResultGetItem(int index);
        [DispId(16)]
        bool LoyaltyResultSetItem(int index, LoyaltyResultType value);
        [DispId(17)]
        bool LoyaltyResultAddItem(LoyaltyResultType value);
        [DispId(18)]
        bool LoyaltyResultRemoveItem(int index);
        [DispId(19)]
        int LoyaltyResultInsertItem(int index, LoyaltyResultType value);
        [DispId(21)]
        int PaymentReceiptLength();
        [DispId(22)]
        PaymentReceiptType PaymentReceiptGetItem(int index);
        [DispId(23)]
        bool PaymentReceiptSetItem(int index, PaymentReceiptType value);
        [DispId(24)]
        bool PaymentReceiptAddItem(PaymentReceiptType value);
        [DispId(25)]
        bool PaymentReceiptRemoveItem(int index);
        [DispId(26)]
        int PaymentReceiptInsertItem(int index, PaymentReceiptType value);
        [DispId(28)]
        int CustomerOrderLength();
        [DispId(29)]
        CustomerOrderType CustomerOrderGetItem(int index);
        [DispId(30)]
        bool CustomerOrderSetItem(int index, CustomerOrderType value);
        [DispId(31)]
        bool CustomerOrderAddItem(CustomerOrderType value);
        [DispId(32)]
        bool CustomerOrderRemoveItem(int index);
        [DispId(33)]
        int CustomerOrderInsertItem(int index, CustomerOrderType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("be4b9afd-33c1-4796-a0b7-4d663f5c7573")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPINRequestType {
        /// <remarks/>
        [DispId(1)]
        CardholderPINType CardholderPIN {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string PINRequestType1 {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string PINVerifMethod {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string AdditionalInput {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string PINEncAlgorithm {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string PINFormat {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string KeyReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        int MaxWaitingTime {
            get;
            set;
        }
        [DispId(10)]
        bool CardholderPINSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool PINRequestType1Specified {
            get;
            set;
        }
        [DispId(12)]
        bool PINVerifMethodSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool AdditionalInputSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool PINEncAlgorithmSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool PINFormatSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool KeyReferenceSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool MaxWaitingTimeSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(19)]
        string PINRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("bb4b9c6e-cffd-4763-8ca4-79d62f6fe57b")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPINResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        CardholderPINType CardholderPIN {
            get;
            set;
        }
        [DispId(4)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool CardholderPINSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string PINResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("34e00ad7-a06f-4717-8ea1-9eedb9c98a78")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPrintOutputType {
        /// <remarks/>
        [DispId(2)]
        OutputContentType OutputContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        byte[] OutputSignature {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string DocumentQualifier {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string ResponseMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool IntegratedPrintFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        bool RequiredSignatureFlag {
            get;
            set;
        }
        [DispId(8)]
        bool OutputContentSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool OutputSignatureSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool DocumentQualifierSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool ResponseModeSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool IntegratedPrintFlagDefaultValue {
            get;
        }
        [DispId(19)]
        bool IntegratedPrintFlagSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool RequiredSignatureFlagDefaultValue {
            get;
        }
        [DispId(21)]
        bool RequiredSignatureFlagSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(23)]
        string PrintOutputTypeClassName {
            get;
        }
        [DispId(10)]
        int OutputSignatureLength();
        [DispId(11)]
        byte OutputSignatureGetItem(int index);
        [DispId(12)]
        bool OutputSignatureSetItem(int index, byte value);
        [DispId(13)]
        bool OutputSignatureAddItem(byte value);
        [DispId(14)]
        bool OutputSignatureRemoveItem(int index);
        [DispId(15)]
        int OutputSignatureInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("39a887e5-c0e3-40ec-974d-b4771cb9dcb5")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPrintRequestType {
        /// <remarks/>
        [DispId(1)]
        PrintOutputType PrintOutput {
            get;
            set;
        }
        [DispId(3)]
        bool PrintOutputSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string PrintRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a0824a7e-5708-4c97-af22-c03c5648f647")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IPrintResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string DocumentQualifier {
            get;
            set;
        }
        [DispId(4)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool DocumentQualifierSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string PrintResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("1b7ff4d9-fdb6-436d-b69b-3d0b128b686b")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IReconciliationRequestType {
        /// <remarks/>
        [DispId(1)]
        string[] AcquirerID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string ReconciliationType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string POIReconciliationID {
            get;
            set;
        }
        [DispId(5)]
        bool AcquirerIDSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ReconciliationTypeSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool POIReconciliationIDSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string ReconciliationRequestTypeClassName {
            get;
        }
        [DispId(6)]
        int AcquirerIDLength();
        [DispId(7)]
        string AcquirerIDGetItem(int index);
        [DispId(8)]
        bool AcquirerIDSetItem(int index, string value);
        [DispId(9)]
        bool AcquirerIDAddItem(string value);
        [DispId(10)]
        bool AcquirerIDRemoveItem(int index);
        [DispId(11)]
        int AcquirerIDInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("9c33ff61-b8ec-4b20-845a-258ac5966145")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IReconciliationResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TransactionTotalsType[] TransactionTotals {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ReconciliationType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string POIReconciliationID {
            get;
            set;
        }
        [DispId(6)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool TransactionTotalsSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ReconciliationTypeSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool POIReconciliationIDSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string ReconciliationResponseTypeClassName {
            get;
        }
        [DispId(8)]
        int TransactionTotalsLength();
        [DispId(9)]
        TransactionTotalsType TransactionTotalsGetItem(int index);
        [DispId(10)]
        bool TransactionTotalsSetItem(int index, TransactionTotalsType value);
        [DispId(11)]
        bool TransactionTotalsAddItem(TransactionTotalsType value);
        [DispId(12)]
        bool TransactionTotalsRemoveItem(int index);
        [DispId(13)]
        int TransactionTotalsInsertItem(int index, TransactionTotalsType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("344e5f8d-da94-48e2-8ddf-07ea31215a60")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IRepeatedMessageResponseType {
        /// <remarks/>
        [DispId(1)]
        MessageHeaderType MessageHeader {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        object Item {
            get;
            set;
        }
        [DispId(4)]
        bool MessageHeaderSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool ItemSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string RepeatedMessageResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a02e6a88-a023-4089-b7c8-baf1484e52eb")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IReversalResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        POIDataType POIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        OriginalPOITransactionType OriginalPOITransaction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        PaymentReceiptType[] PaymentReceipt {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        double ReversedAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        bool ReversedAmountSpecified {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string CustomerOrderID {
            get;
            set;
        }
        [DispId(9)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool POIDataSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool OriginalPOITransactionSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool PaymentReceiptSpecified {
            get;
            set;
        }
        [DispId(19)]
        bool CustomerOrderIDSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(21)]
        string ReversalResponseTypeClassName {
            get;
        }
        [DispId(13)]
        int PaymentReceiptLength();
        [DispId(14)]
        PaymentReceiptType PaymentReceiptGetItem(int index);
        [DispId(15)]
        bool PaymentReceiptSetItem(int index, PaymentReceiptType value);
        [DispId(16)]
        bool PaymentReceiptAddItem(PaymentReceiptType value);
        [DispId(17)]
        bool PaymentReceiptRemoveItem(int index);
        [DispId(18)]
        int PaymentReceiptInsertItem(int index, PaymentReceiptType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("af1646ca-f97e-4a1a-a46a-c2af18e07eb5")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IStoredValueResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POIDataType POIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        StoredValueResultType[] StoredValueResult {
            get;
            set;
        }
        [DispId(6)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool POIDataSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool StoredValueResultSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string StoredValueResponseTypeClassName {
            get;
        }
        [DispId(10)]
        int StoredValueResultLength();
        [DispId(11)]
        StoredValueResultType StoredValueResultGetItem(int index);
        [DispId(12)]
        bool StoredValueResultSetItem(int index, StoredValueResultType value);
        [DispId(13)]
        bool StoredValueResultAddItem(StoredValueResultType value);
        [DispId(14)]
        bool StoredValueResultRemoveItem(int index);
        [DispId(15)]
        int StoredValueResultInsertItem(int index, StoredValueResultType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("73308616-962f-4973-9811-85626b13a167")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IStoredValueResultType {
        /// <remarks/>
        [DispId(1)]
        StoredValueAccountStatusType StoredValueAccountStatus {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TransactionIdentificationType HostTransactionID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string StoredValueTransactionType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string ProductCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string EanUpc {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        double ItemAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string Currency {
            get;
            set;
        }
        [DispId(9)]
        bool StoredValueAccountStatusSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool HostTransactionIDSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool StoredValueTransactionTypeSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ProductCodeSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool EanUpcSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ItemAmountSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(17)]
        string StoredValueResultTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("b0c0f723-fc70-4733-bace-d8fb0733027f")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IStoredValueAccountStatusType {
        /// <remarks/>
        [DispId(1)]
        StoredValueAccountIDType StoredValueAccountID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        double CurrentBalance {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool CurrentBalanceSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool StoredValueAccountIDSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(7)]
        string StoredValueAccountStatusTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("dbf48726-9c9b-4d9b-93cb-3bc972c2b9ac")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IStoredValueAccountIDType {
        /// <remarks/>
        [DispId(1)]
        string StoredValueAccountType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string StoredValueProvider {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string OwnerName {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string ExpiryDate {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string[] EntryMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string IdentificationType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        string Value {
            get;
            set;
        }
        [DispId(9)]
        bool StoredValueAccountTypeSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool StoredValueProviderSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool OwnerNameSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ExpiryDateSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool EntryModeSpecified {
            get;
            set;
        }
        [DispId(20)]
        bool IdentificationTypeSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(22)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(23)]
        string StoredValueAccountIDTypeClassName {
            get;
        }
        [DispId(14)]
        int EntryModeLength();
        [DispId(15)]
        string EntryModeGetItem(int index);
        [DispId(16)]
        bool EntryModeSetItem(int index, string value);
        [DispId(17)]
        bool EntryModeAddItem(string value);
        [DispId(18)]
        bool EntryModeRemoveItem(int index);
        [DispId(19)]
        int EntryModeInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("9fa61f73-2222-467a-8387-f5e3fc54b3b6")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISearchANDType {
        /// <remarks/>
        [DispId(1)]
        string Target {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        OperatorEnumeration Operator {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string Value {
            get;
            set;
        }
        [DispId(5)]
        bool TargetSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool OperatorSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string SearchANDTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("dfe09ae1-673f-4fd4-8f09-10e1f39bf84b")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISearchCriteriasType {
        /// <remarks/>
        [DispId(1)]
        SearchANDType[] SearchOR {
            get;
            set;
        }
        [DispId(3)]
        bool SearchORSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string SearchCriteriasTypeClassName {
            get;
        }
        [DispId(4)]
        int SearchORLength();
        [DispId(5)]
        SearchANDType SearchORGetItem(int index);
        [DispId(6)]
        bool SearchORSetItem(int index, SearchANDType value);
        [DispId(7)]
        bool SearchORAddItem(SearchANDType value);
        [DispId(8)]
        bool SearchORRemoveItem(int index);
        [DispId(9)]
        int SearchORInsertItem(int index, SearchANDType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("2ef51b82-a59e-42e0-81bf-b89c51e702da")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISearchORType {
        /// <remarks/>
        [DispId(1)]
        SearchANDType[] SearchAND {
            get;
            set;
        }
        [DispId(3)]
        bool SearchANDSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string SearchORTypeClassName {
            get;
        }
        [DispId(4)]
        int SearchANDLength();
        [DispId(5)]
        SearchANDType SearchANDGetItem(int index);
        [DispId(6)]
        bool SearchANDSetItem(int index, SearchANDType value);
        [DispId(7)]
        bool SearchANDAddItem(SearchANDType value);
        [DispId(8)]
        bool SearchANDRemoveItem(int index);
        [DispId(9)]
        int SearchANDInsertItem(int index, SearchANDType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("cae75e33-a478-432a-9dcc-7807942dc8ed")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISearchOutputOrderType {
        /// <remarks/>
        [DispId(1)]
        CriteriaOrderType[] CriteriaOrder {
            get;
            set;
        }
        [DispId(3)]
        bool CriteriaOrderSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string SearchOutputOrderTypeClassName {
            get;
        }
        [DispId(4)]
        int CriteriaOrderLength();
        [DispId(5)]
        CriteriaOrderType CriteriaOrderGetItem(int index);
        [DispId(6)]
        bool CriteriaOrderSetItem(int index, CriteriaOrderType value);
        [DispId(7)]
        bool CriteriaOrderAddItem(CriteriaOrderType value);
        [DispId(8)]
        bool CriteriaOrderRemoveItem(int index);
        [DispId(9)]
        int CriteriaOrderInsertItem(int index, CriteriaOrderType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("b1d51092-7861-42b3-898e-a5d679992fc0")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISoundContentType {
        /// <remarks/>
        [DispId(1)]
        string SoundFormat {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        string Language {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ReferenceID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string Value {
            get;
            set;
        }
        [DispId(6)]
        bool SoundFormatSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool LanguageSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ReferenceIDSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool ValueSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string SoundContentTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("93ffb9f2-1edf-4744-9d41-59b7d61aa6c7")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISoundRequestType {
        /// <remarks/>
        [DispId(2)]
        SoundContentType SoundContent {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string ResponseMode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string SoundAction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        int SoundVolume {
            get;
            set;
        }
        [DispId(6)]
        bool SoundContentSpecified {
            get;
            set;
        }
        [DispId(7)]
        string ResponseModeDefaultValue {
            get;
        }
        [DispId(8)]
        bool ResponseModeSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool SoundActionSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool SoundVolumeSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(12)]
        string SoundRequestTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("e08f77ce-25ef-46af-a6d3-cf3be1214ebd")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISoundResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        [DispId(3)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(4)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(5)]
        string SoundResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("25118808-b9b8-42d9-b66f-32adec135ad3")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IStoredValueDataType {
        /// <remarks/>
        [DispId(1)]
        StoredValueAccountIDType StoredValueAccountID {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        OriginalPOITransactionType OriginalPOITransaction {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string StoredValueProvider {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        string StoredValueTransactionType {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string ProductCode {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        string EanUpc {
            get;
            set;
        }
        /// <remarks/>
        [DispId(7)]
        double ItemAmount {
            get;
            set;
        }
        /// <remarks/>
        [DispId(8)]
        string Currency {
            get;
            set;
        }
        [DispId(10)]
        bool StoredValueAccountIDSpecified {
            get;
            set;
        }
        [DispId(11)]
        bool OriginalPOITransactionSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool StoredValueProviderSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool StoredValueTransactionTypeSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ProductCodeSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool EanUpcSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool ItemAmountSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool CurrencySpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(19)]
        string StoredValueDataTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("2432fced-ec85-447e-baf2-538d0293787a")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface IStoredValueRequestType {
        /// <remarks/>
        [DispId(1)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        StoredValueDataType[] StoredValueData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string CustomerLanguage {
            get;
            set;
        }
        [DispId(5)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool StoredValueDataSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool CustomerLanguageSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(15)]
        string StoredValueRequestTypeClassName {
            get;
        }
        [DispId(7)]
        int StoredValueDataLength();
        [DispId(8)]
        StoredValueDataType StoredValueDataGetItem(int index);
        [DispId(9)]
        bool StoredValueDataSetItem(int index, StoredValueDataType value);
        [DispId(10)]
        bool StoredValueDataAddItem(StoredValueDataType value);
        [DispId(11)]
        bool StoredValueDataRemoveItem(int index);
        [DispId(12)]
        int StoredValueDataInsertItem(int index, StoredValueDataType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("64537a0c-72cc-4781-8766-963e37a2be26")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransmitRequestType {
        /// <remarks/>
        [DispId(2)]
        byte[] Message {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        bool WaitResponseFlag {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        int MaximumTransmitTime {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        string DestinationAddress {
            get;
            set;
        }
        [DispId(6)]
        bool MessageSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool WaitResponseFlagDefaultValue {
            get;
        }
        [DispId(14)]
        bool WaitResponseFlagSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool MaximumTransmitTimeSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool DestinationAddressSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(18)]
        string TransmitRequestTypeClassName {
            get;
        }
        [DispId(7)]
        int MessageLength();
        [DispId(8)]
        byte MessageGetItem(int index);
        [DispId(9)]
        bool MessageSetItem(int index, byte value);
        [DispId(10)]
        bool MessageAddItem(byte value);
        [DispId(11)]
        bool MessageRemoveItem(int index);
        [DispId(12)]
        int MessageInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("f2449d1f-b751-4a48-a51b-99f1b26d2eff")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransmitResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        byte[] Message {
            get;
            set;
        }
        [DispId(4)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(5)]
        bool MessageSpecified {
            get;
            set;
        }
        [DispId(12)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(13)]
        string TransmitResponseTypeClassName {
            get;
        }
        [DispId(6)]
        int MessageLength();
        [DispId(7)]
        byte MessageGetItem(int index);
        [DispId(8)]
        bool MessageSetItem(int index, byte value);
        [DispId(9)]
        bool MessageAddItem(byte value);
        [DispId(10)]
        bool MessageRemoveItem(int index);
        [DispId(11)]
        int MessageInsertItem(int index, byte value);
    }
    [System.Runtime.InteropServices.GuidAttribute("1296f1cb-3d75-4ad7-b9f5-2067887f33cc")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionReportType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        SaleDataType SaleData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        POIDataType POIData {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        PaymentResultType PaymentResult {
            get;
            set;
        }
        [DispId(6)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool SaleDataSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool POIDataSpecified {
            get;
            set;
        }
        [DispId(9)]
        bool PaymentResultSpecified {
            get;
            set;
        }
        [DispId(10)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(11)]
        string TransactionReportTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("4a09437f-8d5f-4fc7-8ae7-72b6c5badb9e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionReportRequestType {
        /// <remarks/>
        [DispId(2)]
        SearchANDType[] SearchCriterias {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        CriteriaOrderType[] SearchOutputOrder {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool DescendingOrder {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        int BlockStart {
            get;
            set;
        }
        /// <remarks/>
        [DispId(6)]
        int BlockStop {
            get;
            set;
        }
        [DispId(7)]
        bool SearchCriteriasSpecified {
            get;
            set;
        }
        [DispId(14)]
        bool SearchOutputOrderSpecified {
            get;
            set;
        }
        [DispId(21)]
        bool DescendingOrderDefaultValue {
            get;
        }
        [DispId(22)]
        bool DescendingOrderSpecified {
            get;
            set;
        }
        [DispId(23)]
        int BlockStartDefaultValue {
            get;
        }
        [DispId(24)]
        bool BlockStartSpecified {
            get;
            set;
        }
        [DispId(25)]
        bool BlockStopSpecified {
            get;
            set;
        }
        [DispId(26)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(27)]
        string TransactionReportRequestTypeClassName {
            get;
        }
        [DispId(8)]
        int SearchCriteriasLength();
        [DispId(9)]
        SearchANDType SearchCriteriasGetItem(int index);
        [DispId(10)]
        bool SearchCriteriasSetItem(int index, SearchANDType value);
        [DispId(11)]
        bool SearchCriteriasAddItem(SearchANDType value);
        [DispId(12)]
        bool SearchCriteriasRemoveItem(int index);
        [DispId(13)]
        int SearchCriteriasInsertItem(int index, SearchANDType value);
        [DispId(15)]
        int SearchOutputOrderLength();
        [DispId(16)]
        CriteriaOrderType SearchOutputOrderGetItem(int index);
        [DispId(17)]
        bool SearchOutputOrderSetItem(int index, CriteriaOrderType value);
        [DispId(18)]
        bool SearchOutputOrderAddItem(CriteriaOrderType value);
        [DispId(19)]
        bool SearchOutputOrderRemoveItem(int index);
        [DispId(20)]
        int SearchOutputOrderInsertItem(int index, CriteriaOrderType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("f7f50878-b211-4d99-9c9e-ec18f7a1b962")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionReportResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        TransactionReportType[] TransactionReport {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        int ReportFullSize {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        int BlockStart {
            get;
            set;
        }
        /// <remarks/>
        [DispId(5)]
        int BlockStop {
            get;
            set;
        }
        [DispId(7)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool TransactionReportSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool ReportFullSizeSpecified {
            get;
            set;
        }
        [DispId(16)]
        bool BlockStartSpecified {
            get;
            set;
        }
        [DispId(17)]
        bool BlockStopSpecified {
            get;
            set;
        }
        [DispId(18)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(19)]
        string TransactionReportResponseTypeClassName {
            get;
        }
        [DispId(9)]
        int TransactionReportLength();
        [DispId(10)]
        TransactionReportType TransactionReportGetItem(int index);
        [DispId(11)]
        bool TransactionReportSetItem(int index, TransactionReportType value);
        [DispId(12)]
        bool TransactionReportAddItem(TransactionReportType value);
        [DispId(13)]
        bool TransactionReportRemoveItem(int index);
        [DispId(14)]
        int TransactionReportInsertItem(int index, TransactionReportType value);
    }
    [System.Runtime.InteropServices.GuidAttribute("0d85647f-6afc-40b4-b0a0-3f10d75f7405")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionStatusRequestType {
        /// <remarks/>
        [DispId(2)]
        MessageReferenceType MessageReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        string[] DocumentQualifier {
            get;
            set;
        }
        /// <remarks/>
        [DispId(4)]
        bool ReceiptReprintFlag {
            get;
            set;
        }
        [DispId(5)]
        bool MessageReferenceSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool DocumentQualifierSpecified {
            get;
            set;
        }
        [DispId(13)]
        bool ReceiptReprintFlagDefaultValue {
            get;
        }
        [DispId(14)]
        bool ReceiptReprintFlagSpecified {
            get;
            set;
        }
        [DispId(15)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(16)]
        string TransactionStatusRequestTypeClassName {
            get;
        }
        [DispId(7)]
        int DocumentQualifierLength();
        [DispId(8)]
        string DocumentQualifierGetItem(int index);
        [DispId(9)]
        bool DocumentQualifierSetItem(int index, string value);
        [DispId(10)]
        bool DocumentQualifierAddItem(string value);
        [DispId(11)]
        bool DocumentQualifierRemoveItem(int index);
        [DispId(12)]
        int DocumentQualifierInsertItem(int index, string value);
    }
    [System.Runtime.InteropServices.GuidAttribute("3f353f9f-dd9a-4e0f-988e-ffe09c1d2465")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ITransactionStatusResponseType {
        /// <remarks/>
        [DispId(1)]
        ResponseType Response {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        MessageReferenceType MessageReference {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        RepeatedMessageResponseType RepeatedMessageResponse {
            get;
            set;
        }
        [DispId(5)]
        bool ResponseSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool MessageReferenceSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool RepeatedMessageResponseSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string TransactionStatusResponseTypeClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("9b647a16-6ba8-492c-85be-255789deb5d9")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleToPOIRequest {
        /// <remarks/>
        [DispId(1)]
        MessageHeaderType MessageHeader {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        object Item {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        ContentInformationType SecurityTrailer {
            get;
            set;
        }
        [DispId(5)]
        bool MessageHeaderSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ItemSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool SecurityTrailerSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string SaleToPOIRequestClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.GuidAttribute("a8a42af6-9806-4fa5-9f32-79b91e069114")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public interface ISaleToPOIResponse {
        /// <remarks/>
        [DispId(1)]
        MessageHeaderType MessageHeader {
            get;
            set;
        }
        /// <remarks/>
        [DispId(2)]
        object Item {
            get;
            set;
        }
        /// <remarks/>
        [DispId(3)]
        ContentInformationType SecurityTrailer {
            get;
            set;
        }
        [DispId(5)]
        bool MessageHeaderSpecified {
            get;
            set;
        }
        [DispId(6)]
        bool ItemSpecified {
            get;
            set;
        }
        [DispId(7)]
        bool SecurityTrailerSpecified {
            get;
            set;
        }
        [DispId(8)]
        bool ObjectHasBeenSet {
            get;
        }
        [DispId(9)]
        string SaleToPOIResponseClassName {
            get;
        }
    }
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum TagsEnumeration {
        AbortReason,
        AccessedBy,
        AccountNumber,
        AccountType,
        AcquirerID,
        AcquirerPOIID,
        AcquirerTransactionID,
        AdditionalInformation,
        AdditionalInput,
        AdditionalProductInfo,
        AdditionalResponse,
        Address,
        Algorithm,
        Alignment,
        AllowedLoyaltyBrand,
        AllowedPaymentBrand,
        AllowedProduct,
        AllowedProductCode,
        AmountsReq,
        AmountsResp,
        APDUClass,
        APDUData,
        APDUExpectedLength,
        APDUInstruction,
        APDUPar1,
        APDUPar2,
        ApplicationName,
        ApprovalCode,
        AreaSize,
        ATRValue,
        AttributeType,
        AttributeValue,
        AuthenticationMethod,
        AuthorizedAmount,
        BankID,
        BarcodeType,
        BarcodeValue,
        BeepKeyFlag,
        BlockStart,
        BlockStop,
        CapturedSignature,
        CardAcquisitionReference,
        CardAcquisitionTransaction,
        CardBrand,
        CardCountryCode,
        CardData,
        CardholderPIN,
        CardReaderOKFlag,
        CardReaderOKFlagSpecified,
        CardSeqNumb,
        CardStatusWords,
        CashBackAmount,
        CashBackAmountSpecified,
        CashBackFlag,
        CashBackFlagSpecified,
        CashHandlingDevice,
        CashHandlingOKFlag,
        Certificate,
        CertificationCode,
        CharacterHeight,
        CharacterSet,
        CharacterStyle,
        CharacterWidth,
        Charges,
        ChargesSpecified,
        CheckCardNumber,
        CheckData,
        CheckNumber,
        CoinsOrBills,
        Color,
        Commission,
        CommissionSpecified,
        CommonName,
        CommunicationOKFlag,
        CommunicationOKFlagSpecified,
        ComponentDescription,
        ComponentType,
        ConfirmedFlag,
        ConfirmedFlagSpecified,
        Content,
        ContentEncryptionAlgorithm,
        ContentType,
        ConvertedAmount,
        Country,
        CountryCode,
        CriteriaOrder,
        CumulativeAmount,
        CumulativeAmountSpecified,
        Currency,
        CurrencyConversion,
        CurrentAmount,
        CurrentAmountSpecified,
        CurrentBalance,
        CurrentBalanceSpecified,
        CustomerApprovedFlag,
        CustomerLanguage,
        CustomerOrder,
        CustomerOrderID,
        CustomerOrderReq,
        CustomerOrderStatus,
        CustomerOrderStatusSpecified,
        DateTime,
        DebitPreferredFlag,
        Declaration,
        DefaultInputString,
        DefaultSelectedFlag,
        DerivationIdentifier,
        DescendingOrder,
        DestinationAddress,
        Device,
        DeviceID,
        Digest,
        DigestAlgorithm,
        DigitInput,
        DisableCancelFlag,
        DisableCorrectFlag,
        DisableValidFlag,
        DisplayOutput,
        DocumentQualifier,
        EanUpc,
        EncapsulatedContent,
        EncrPINBlock,
        EncryptedContent,
        EncryptedData,
        EncryptedKey,
        EndDate,
        EndDateSpecified,
        EndOfLineFlag,
        EntryMode,
        ErrorCondition,
        EventDetails,
        EventToNotify,
        ExpiryDate,
        ExpiryDateTime,
        ExpiryDateTimeSpecified,
        FirstAmount,
        FirstAmountSpecified,
        FirstPaymentDate,
        Font,
        ForceCustomerSelectionFlag,
        ForceEntryMode,
        ForceOnlineFlag,
        ForecastedAmount,
        FraudPreventionFlag,
        FraudPreventionFlagSpecified,
        FromRightToLeftFlag,
        FunctionKey,
        GenericProfile,
        GeographicCoordinates,
        Geolocation,
        GlobalCorrectionFlag,
        GlobalStatus,
        HostDiagnosisFlag,
        HostReconciliationID,
        HostStatus,
        HostTransactionID,
        ICCResetData,
        IdentificationSupport,
        IdentificationType,
        ImageData,
        ImageFormat,
        ImageReference,
        IMEI,
        ImmediateResponseFlag,
        IMSI,
        InfoQualify,
        InitialisationVector,
        Input,
        InputCommand,
        InputData,
        InputResult,
        Instalment,
        InstalmentType1,
        IntegratedPrintFlag,
        IsReachableFlag,
        Issuer,
        IssuerAndSerialNumber,
        Item,
        ItemAmount,
        ItemAmountSpecified,
        ItemID,
        Items,
        KEKIdentifier,
        KeyEncryptionAlgorithm,
        KeyIdentifier,
        KeyName,
        KeyReference,
        KeyVersion,
        Language,
        LastTransactionFlag,
        LastTransactionFlagSpecified,
        Latitude,
        LeaveCardFlag,
        LoggedSaleID,
        Longitude,
        LoyaltyAccount,
        LoyaltyAccountID,
        LoyaltyAccountReq,
        LoyaltyAccountStatus,
        LoyaltyAcquirerData,
        LoyaltyAcquirerID,
        LoyaltyAmount,
        LoyaltyBrand,
        LoyaltyCurrency,
        LoyaltyData,
        LoyaltyHandling,
        LoyaltyResult,
        LoyaltyTotals,
        LoyaltyTransaction,
        LoyaltyTransactionID,
        LoyaltyTransactionType1,
        LoyaltyUnit,
        MAC,
        MACAlgorithm,
        MaintenanceAllowed,
        MaintenanceRequiredFlag,
        ManufacturerID,
        Markup,
        MarkupSpecified,
        MaskCharactersFlag,
        MaskedMSISDN,
        MaskedPAN,
        MaxDecimalLength,
        MaximumCashBackAmount,
        MaximumCashBackAmountSpecified,
        MaximumTransmitTime,
        MaxInputTime,
        MaxLength,
        MaxWaitingTime,
        MenuBackFlag,
        MenuEntry,
        MenuEntryNumber,
        MenuEntryTag,
        MerchantAddress,
        MerchantCategoryCode,
        MerchantCountry,
        MerchantID,
        MerchantName,
        MerchantOverrideFlag,
        Message,
        MessageCategory,
        MessageClass,
        MessageHeader,
        MessageReference,
        MessageType,
        MinimumAmountToDeliver,
        MinimumAmountToDeliverSpecified,
        MinimumDisplayTime,
        MinimumSplitAmount,
        MinimumSplitAmountSpecified,
        MinLength,
        MobileCountryCode,
        MobileData,
        MobileNetworkCode,
        MSISDN,
        NotifyCardInputFlag,
        Number,
        OnlineFlag,
        OpenOrderState,
        Operator,
        OperatorID,
        OperatorLanguage,
        OriginalPOITransaction,
        OutputBarcode,
        OutputContent,
        OutputFormat,
        OutputResult,
        OutputSignature,
        OutputText,
        OutputXHTML,
        OwnerName,
        PaidAmount,
        PaidAmountSpecified,
        PAN,
        Parameter,
        Password,
        PaymentAccountRef,
        PaymentAccountReq,
        PaymentAccountStatus,
        PaymentAcquirerData,
        PaymentBrand,
        PaymentCurrency,
        PaymentData,
        PaymentInstrumentData,
        PaymentInstrumentType,
        PaymentReceipt,
        PaymentResult,
        PaymentToken,
        PaymentTotals,
        PaymentTransaction,
        PaymentType,
        PEDOKFlag,
        PEDOKFlagSpecified,
        PerformedTransaction,
        Period,
        PeriodUnit,
        PINEncAlgorithm,
        PINFormat,
        PINRequestType1,
        PINVerifMethod,
        PlanID,
        POICapabilities,
        POIData,
        POIID,
        POIProfile,
        POIReconciliationID,
        POISerialNumber,
        POISoftware,
        POIStatus,
        POISystemData,
        POITerminalData,
        POITransactionID,
        PredefinedContent,
        PrinterStatus,
        PrintOutput,
        ProductCode,
        ProductLabel,
        ProtectedCardData,
        ProtectedMobileData,
        ProtectedSignature,
        ProtocolVersion,
        ProviderIdentification,
        QRCodeBinaryValue,
        QRCodeEncodingMode,
        QRCodeEncodingModeSpecified,
        QRCodeErrorCorrection,
        QRCodeErrorCorrectionSpecified,
        QRCodeVersion,
        Quantity,
        QuantitySpecified,
        Rate,
        RateSpecified,
        RawSignature,
        RebateLabel,
        Rebates,
        ReceiptReprintFlag,
        RecipientIdentifier,
        ReconciliationType,
        ReferenceID,
        RegisteredIdentifier,
        RegistrationID,
        RejectedMessage,
        RelativeDistinguishedName,
        RemoveAllFlag,
        RemoveAllFlagSpecified,
        RepeatedMessageResponse,
        ReportFullSize,
        RequestedAmount,
        RequestedAmountSpecified,
        RequestedValidityDate,
        RequiredSignatureFlag,
        Response,
        ResponseMode,
        ResponseRequiredFlag,
        Result,
        ReuseCardDataFlag,
        ReversalReason,
        ReversedAmount,
        ReversedAmountSpecified,
        SaleCapabilities,
        SaleChannel,
        SaleData,
        SaleID,
        SaleItem,
        SaleItemRebate,
        SaleProfile,
        SaleReferenceID,
        SaleSoftware,
        SaleTerminalData,
        SaleToAcquirerData,
        SaleToIssuerData,
        SaleToPOIData,
        SaleTransactionID,
        SearchAND,
        SearchCriterias,
        SearchOR,
        SearchOutputOrder,
        SecurityOKFlag,
        SecurityOKFlagSpecified,
        SecurityTrailer,
        SensitiveCardData,
        SensitiveMobileData,
        SequenceNumber,
        SerialNumber,
        ServiceID,
        ServiceIdentification,
        ServiceProfiles,
        ServicesEnabled,
        ShiftNumber,
        Signature,
        SignatureAlgorithm,
        SignatureImage,
        SignaturePoint,
        Signer,
        SignerIdentifier,
        SoftwareVersion,
        SoundAction,
        SoundContent,
        SoundFormat,
        SoundVolume,
        SplitPaymentFlag,
        SponsoredMerchant,
        StartColumn,
        StartDate,
        StartRow,
        StatementReference,
        StoredValueAccountID,
        StoredValueAccountStatus,
        StoredValueAccountType,
        StoredValueData,
        StoredValueProvider,
        StoredValueResult,
        StoredValueTransactionType,
        StringMask,
        Target,
        TaxCode,
        TerminalEnvironment,
        TextInput,
        TimeStamp,
        TipAmount,
        TipAmountSpecified,
        TokenRequestedType,
        TokenRequestStatus,
        TokenRequestStatusSpecified,
        TokenValue,
        TotalAmount,
        TotalAmountSpecified,
        TotalDetails,
        TotalFeesAmount,
        TotalFeesAmountSpecified,
        TotalFilter,
        TotalNbOfPayments,
        TotalRebate,
        TotalRebatesAmount,
        TotalRebatesAmountSpecified,
        TotalRebateSpecified,
        TotalsGroupID,
        TrackData,
        TrackFormat,
        TrackNumb,
        TrainingModeFlag,
        TransactionAction,
        TransactionAmount,
        TransactionConditions,
        TransactionCount,
        TransactionID,
        TransactionReport,
        TransactionToPerform,
        TransactionTotals,
        TransactionType,
        TypeCode,
        UnitOfMeasure,
        UnitPrice,
        UnitPriceSpecified,
        UnitValue,
        UTMCoordinates,
        UTMEastward,
        UTMNorthward,
        UTMZone,
        ValidityDate,
        Value,
        Version,
        WaitResponseFlag,
        WaitUserValidationFlag,
        WarmResetFlag,
        WarmResetFlagSpecified,
        X,
        Y,
    }
}

